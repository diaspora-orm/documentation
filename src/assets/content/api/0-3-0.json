{
	"id": 0,
	"name": "@diaspora/diaspora",
	"kind": 0,
	"flags": {},
	"children": [
		{
			"id": 796,
			"name": "Entities",
			"kind": 2,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 798,
					"name": "IEntityFactory",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "entities/index.ts",
							"line": 11,
							"character": 27
						}
					],
					"type": {
						"type": "reference",
						"name": "_IEntityFactory"
					}
				},
				{
					"id": 797,
					"name": "IRawEntityAttributes",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "entities/index.ts",
							"line": 10,
							"character": 33
						}
					],
					"type": {
						"type": "reference",
						"name": "_IRawEntityAttributes"
					}
				},
				{
					"id": 800,
					"name": "Entity",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "entities/index.ts",
							"line": 13,
							"character": 20
						},
						{
							"fileName": "entities/index.ts",
							"line": 14,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"name": "_Entity"
					},
					"defaultValue": " _Entity"
				},
				{
					"id": 799,
					"name": "EntityFactory",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "entities/index.ts",
							"line": 12,
							"character": 27
						}
					],
					"type": {
						"type": "reference",
						"name": "IEntityFactory",
						"id": 1149
					},
					"defaultValue": " _EntityFactory"
				},
				{
					"id": 801,
					"name": "Set",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "entities/index.ts",
							"line": 15,
							"character": 17
						},
						{
							"fileName": "entities/index.ts",
							"line": 16,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"name": "_Set"
					},
					"defaultValue": " _Set"
				}
			],
			"groups": [
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						798,
						797
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						800,
						799,
						801
					]
				}
			],
			"sources": [
				{
					"fileName": "entities/index.ts",
					"line": 9,
					"character": 25
				}
			]
		},
		{
			"id": 341,
			"name": "Errors",
			"kind": 2,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 344,
					"name": "EntityStateError",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "errors/index.ts",
							"line": 14,
							"character": 30
						},
						{
							"fileName": "errors/index.ts",
							"line": 15,
							"character": 30
						}
					],
					"type": {
						"type": "reference",
						"name": "_EntityStateError"
					},
					"defaultValue": " _EntityStateError"
				},
				{
					"id": 345,
					"name": "EntityValidationError",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "errors/index.ts",
							"line": 16,
							"character": 35
						},
						{
							"fileName": "errors/index.ts",
							"line": 17,
							"character": 35
						}
					],
					"type": {
						"type": "reference",
						"name": "_EntityValidationError"
					},
					"defaultValue": " _EntityValidationError"
				},
				{
					"id": 342,
					"name": "ExtendableError",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "errors/index.ts",
							"line": 9,
							"character": 29
						},
						{
							"fileName": "errors/index.ts",
							"line": 10,
							"character": 29
						}
					],
					"type": {
						"type": "reference",
						"name": "_ExtendableError"
					},
					"defaultValue": " _ExtendableError"
				},
				{
					"id": 346,
					"name": "SetValidationError",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "errors/index.ts",
							"line": 18,
							"character": 32
						},
						{
							"fileName": "errors/index.ts",
							"line": 19,
							"character": 32
						}
					],
					"type": {
						"type": "reference",
						"name": "_SetValidationError"
					},
					"defaultValue": " _SetValidationError"
				},
				{
					"id": 343,
					"name": "ValidationError",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "errors/index.ts",
							"line": 11,
							"character": 29
						},
						{
							"fileName": "errors/index.ts",
							"line": 12,
							"character": 29
						}
					],
					"type": {
						"type": "reference",
						"name": "_ValidationError"
					},
					"defaultValue": " _ValidationError"
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						344,
						345,
						342,
						346,
						343
					]
				}
			],
			"sources": [
				{
					"fileName": "errors/index.ts",
					"line": 8,
					"character": 23
				}
			]
		},
		{
			"id": 351,
			"name": "QueryLanguage",
			"kind": 2,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 352,
					"name": "QueryOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Generated by Diaspora"
					},
					"children": [
						{
							"id": 354,
							"name": "limit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Number of items to get"
							},
							"sources": [
								{
									"fileName": "types/queryLanguage.ts",
									"line": 16,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "ConstrainedTypes.AbsIntInf0"
							}
						},
						{
							"id": 355,
							"name": "remapInput",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Flag indicating if adapter input should be remapped or not. TODO Remapping doc"
							},
							"sources": [
								{
									"fileName": "types/queryLanguage.ts",
									"line": 21,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 356,
							"name": "remapOutput",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Flag indicating if adapter output should be remapped or not. TODO Remapping doc"
							},
							"sources": [
								{
									"fileName": "types/queryLanguage.ts",
									"line": 26,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 353,
							"name": "skip",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Number of items to skip"
							},
							"sources": [
								{
									"fileName": "types/queryLanguage.ts",
									"line": 11,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"name": "ConstrainedTypes.AbsInt0"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								354,
								355,
								356,
								353
							]
						}
					],
					"sources": [
						{
							"fileName": "types/queryLanguage.ts",
							"line": 7,
							"character": 30
						}
					]
				},
				{
					"id": 357,
					"name": "QueryOptionsRaw",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "All properties are optional"
					},
					"children": [
						{
							"id": 359,
							"name": "limit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Number of items to get"
							},
							"sources": [
								{
									"fileName": "types/queryLanguage.ts",
									"line": 41,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "ConstrainedTypes.AbsIntInf0"
							}
						},
						{
							"id": 360,
							"name": "page",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "To use with {@link QueryOptions.limit `limit`} and without {@link QueryOptions.skip `skip`}. Skips `page` pages of `limit` elements"
							},
							"sources": [
								{
									"fileName": "types/queryLanguage.ts",
									"line": 46,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"name": "ConstrainedTypes.AbsInt0"
							}
						},
						{
							"id": 361,
							"name": "remapInput",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Flag indicating if adapter input should be remapped or not. TODO Remapping doc"
							},
							"sources": [
								{
									"fileName": "types/queryLanguage.ts",
									"line": 51,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "true"
									},
									{
										"type": "intrinsic",
										"name": "false"
									}
								]
							}
						},
						{
							"id": 362,
							"name": "remapOutput",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Flag indicating if adapter output should be remapped or not. TODO Remapping doc"
							},
							"sources": [
								{
									"fileName": "types/queryLanguage.ts",
									"line": 56,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "true"
									},
									{
										"type": "intrinsic",
										"name": "false"
									}
								]
							}
						},
						{
							"id": 358,
							"name": "skip",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Number of items to skip"
							},
							"sources": [
								{
									"fileName": "types/queryLanguage.ts",
									"line": 36,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"name": "ConstrainedTypes.AbsInt0"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								359,
								360,
								361,
								362,
								358
							]
						}
					],
					"sources": [
						{
							"fileName": "types/queryLanguage.ts",
							"line": 32,
							"character": 33
						}
					]
				},
				{
					"id": 377,
					"name": "SelectQuery",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"indexSignature": {
						"id": 378,
						"name": "__index",
						"kind": 8192,
						"kindString": "Index signature",
						"flags": {},
						"comment": {
							"shortText": "Fields to search. If not providing an object, find items with a property value that equals this value"
						},
						"parameters": [
							{
								"id": 379,
								"name": "key",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"type": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "any"
								},
								{
									"type": "reference",
									"name": "SelectQueryCondition",
									"id": 363
								}
							]
						}
					},
					"sources": [
						{
							"fileName": "types/queryLanguage.ts",
							"line": 130,
							"character": 29
						}
					]
				},
				{
					"id": 363,
					"name": "SelectQueryCondition",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "By default, all conditions in a single SelectQueryCondition are combined with an `AND` operator."
					},
					"children": [
						{
							"id": 372,
							"name": "$and",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Match if *all* the conditions in the array are true. Optional, because several conditions in a single SelectQueryCondition are combined with an `AND` operator. Canonical form of {@link SelectQueryConditionRaw['&&']} **NOT IMPLEMENTED YET**"
							},
							"sources": [
								{
									"fileName": "types/queryLanguage.ts",
									"line": 107,
									"character": 6
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "SelectQueryOrCondition",
									"id": 408
								}
							}
						},
						{
							"id": 375,
							"name": "$contains",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "On *array*, it will check if item contains the query. On *string*, it will check if query is included in item using GLOB. **NOT IMPLEMENTED YET**"
							},
							"sources": [
								{
									"fileName": "types/queryLanguage.ts",
									"line": 122,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "SelectQueryOrCondition",
										"id": 408
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							}
						},
						{
							"id": 365,
							"name": "$diff",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Match if item value is different to this. Objects and array are compared deeply. Canonical form of {@link SelectQueryConditionRaw['!=']}"
							},
							"sources": [
								{
									"fileName": "types/queryLanguage.ts",
									"line": 72,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 364,
							"name": "$equals",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Match if item value is equal to this. Objects and array are compared deeply. Canonical form of {@link SelectQueryConditionRaw['==']}"
							},
							"sources": [
								{
									"fileName": "types/queryLanguage.ts",
									"line": 67,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 366,
							"name": "$exists",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "If `true`, match items where this prop is defined. If `false`, match when prop is null or not set. Canonical form of {@link SelectQueryConditionRaw['~']}"
							},
							"sources": [
								{
									"fileName": "types/queryLanguage.ts",
									"line": 77,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 369,
							"name": "$greater",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Match if item value is greater than this. Canonical form of {@link SelectQueryConditionRaw['>']}"
							},
							"sources": [
								{
									"fileName": "types/queryLanguage.ts",
									"line": 92,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 370,
							"name": "$greaterEqual",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Match if item value is greater than this or equals to this. Canonical form of {@link SelectQueryConditionRaw['>=']}"
							},
							"sources": [
								{
									"fileName": "types/queryLanguage.ts",
									"line": 97,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 376,
							"name": "$in",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Check if item value is contained (using deep comparaison) in query. **NOT IMPLEMENTED YET**"
							},
							"sources": [
								{
									"fileName": "types/queryLanguage.ts",
									"line": 127,
									"character": 5
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						},
						{
							"id": 367,
							"name": "$less",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Match if item value is less than this. Canonical form of {@link SelectQueryConditionRaw['<']}"
							},
							"sources": [
								{
									"fileName": "types/queryLanguage.ts",
									"line": 82,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 368,
							"name": "$lessEqual",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Match if item value is less than this or equals to this. Canonical form of {@link SelectQueryConditionRaw['<=']}"
							},
							"sources": [
								{
									"fileName": "types/queryLanguage.ts",
									"line": 87,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 374,
							"name": "$not",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Invert the condition Canonical form of {@link SelectQueryConditionRaw['!']} **NOT IMPLEMENTED YET**"
							},
							"sources": [
								{
									"fileName": "types/queryLanguage.ts",
									"line": 117,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"name": "SelectQueryOrCondition",
								"id": 408
							}
						},
						{
							"id": 371,
							"name": "$or",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Match if *one of* the conditions in the array is true. Canonical form of {@link SelectQueryConditionRaw['||']} **NOT IMPLEMENTED YET**"
							},
							"sources": [
								{
									"fileName": "types/queryLanguage.ts",
									"line": 102,
									"character": 5
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "SelectQueryOrCondition",
									"id": 408
								}
							}
						},
						{
							"id": 373,
							"name": "$xor",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Match if *a single* of the conditions in the array is true. Canonical form of {@link SelectQueryConditionRaw['^^']} **NOT IMPLEMENTED YET**"
							},
							"sources": [
								{
									"fileName": "types/queryLanguage.ts",
									"line": 112,
									"character": 6
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "SelectQueryOrCondition",
									"id": 408
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								372,
								375,
								365,
								364,
								366,
								369,
								370,
								376,
								367,
								368,
								374,
								371,
								373
							]
						}
					],
					"sources": [
						{
							"fileName": "types/queryLanguage.ts",
							"line": 63,
							"character": 38
						}
					]
				},
				{
					"id": 380,
					"name": "SelectQueryConditionRaw",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "By default, all conditions in a single SelectQueryCondition are combined with an `AND` operator."
					},
					"children": [
						{
							"id": 401,
							"name": "!",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Alias for {@link SelectQueryCondition.$not}"
							},
							"sources": [
								{
									"fileName": "types/queryLanguage.ts",
									"line": 247,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "SelectQueryOrConditionRaw",
								"id": 409
							}
						},
						{
							"id": 383,
							"name": "!=",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Alias for {@link SelectQueryCondition.$diff}"
							},
							"sources": [
								{
									"fileName": "types/queryLanguage.ts",
									"line": 157,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 398,
							"name": "$and",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "See {@link SelectQueryCondition.$and}"
							},
							"sources": [
								{
									"fileName": "types/queryLanguage.ts",
									"line": 232,
									"character": 6
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "SelectQueryOrConditionRaw",
									"id": 409
								}
							}
						},
						{
							"id": 403,
							"name": "$contains",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "See {@link SelectQueryCondition.$contains}"
							},
							"sources": [
								{
									"fileName": "types/queryLanguage.ts",
									"line": 257,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "SelectQueryOrConditionRaw",
										"id": 409
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							}
						},
						{
							"id": 384,
							"name": "$diff",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "See {@link SelectQueryCondition.$diff}"
							},
							"sources": [
								{
									"fileName": "types/queryLanguage.ts",
									"line": 162,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 382,
							"name": "$equals",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "See {@link SelectQueryCondition.$equals}"
							},
							"sources": [
								{
									"fileName": "types/queryLanguage.ts",
									"line": 152,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 386,
							"name": "$exists",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "See {@link SelectQueryCondition.$exists}"
							},
							"sources": [
								{
									"fileName": "types/queryLanguage.ts",
									"line": 172,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 392,
							"name": "$greater",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "See {@link SelectQueryCondition.$greater}"
							},
							"sources": [
								{
									"fileName": "types/queryLanguage.ts",
									"line": 202,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 394,
							"name": "$greaterEqual",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "See {@link SelectQueryCondition.$greaterEqual}"
							},
							"sources": [
								{
									"fileName": "types/queryLanguage.ts",
									"line": 212,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 404,
							"name": "$in",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "See {@link SelectQueryCondition.$in}"
							},
							"sources": [
								{
									"fileName": "types/queryLanguage.ts",
									"line": 262,
									"character": 5
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						},
						{
							"id": 388,
							"name": "$less",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "See {@link SelectQueryCondition.$less}"
							},
							"sources": [
								{
									"fileName": "types/queryLanguage.ts",
									"line": 182,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 390,
							"name": "$lessEqual",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "See {@link SelectQueryCondition.$lessEqual}"
							},
							"sources": [
								{
									"fileName": "types/queryLanguage.ts",
									"line": 192,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 402,
							"name": "$not",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "See {@link SelectQueryCondition.$not}"
							},
							"sources": [
								{
									"fileName": "types/queryLanguage.ts",
									"line": 252,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"name": "SelectQueryOrConditionRaw",
								"id": 409
							}
						},
						{
							"id": 396,
							"name": "$or",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "See {@link SelectQueryCondition.$or}"
							},
							"sources": [
								{
									"fileName": "types/queryLanguage.ts",
									"line": 222,
									"character": 5
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "SelectQueryOrConditionRaw",
									"id": 409
								}
							}
						},
						{
							"id": 400,
							"name": "$xor",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "See {@link SelectQueryCondition.$xor}"
							},
							"sources": [
								{
									"fileName": "types/queryLanguage.ts",
									"line": 242,
									"character": 6
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "SelectQueryOrConditionRaw",
									"id": 409
								}
							}
						},
						{
							"id": 397,
							"name": "&&",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Alias for {@link SelectQueryCondition.$and}"
							},
							"sources": [
								{
									"fileName": "types/queryLanguage.ts",
									"line": 227,
									"character": 6
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "SelectQueryOrConditionRaw",
									"id": 409
								}
							}
						},
						{
							"id": 387,
							"name": "<",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Alias for {@link SelectQueryCondition.$less}"
							},
							"sources": [
								{
									"fileName": "types/queryLanguage.ts",
									"line": 177,
									"character": 5
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 389,
							"name": "<=",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Alias for {@link SelectQueryCondition.$lessEqual}"
							},
							"sources": [
								{
									"fileName": "types/queryLanguage.ts",
									"line": 187,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 381,
							"name": "==",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Alias for {@link SelectQueryCondition.$equals}"
							},
							"sources": [
								{
									"fileName": "types/queryLanguage.ts",
									"line": 147,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 391,
							"name": ">",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Alias for {@link SelectQueryCondition.$greater}"
							},
							"sources": [
								{
									"fileName": "types/queryLanguage.ts",
									"line": 197,
									"character": 5
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 393,
							"name": ">=",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Alias for {@link SelectQueryCondition.$greaterEqual}"
							},
							"sources": [
								{
									"fileName": "types/queryLanguage.ts",
									"line": 207,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 399,
							"name": "^^",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Alias for {@link SelectQueryCondition.$xor}"
							},
							"sources": [
								{
									"fileName": "types/queryLanguage.ts",
									"line": 237,
									"character": 6
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "SelectQueryOrConditionRaw",
									"id": 409
								}
							}
						},
						{
							"id": 395,
							"name": "||",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Alias for {@link SelectQueryCondition.$or}"
							},
							"sources": [
								{
									"fileName": "types/queryLanguage.ts",
									"line": 217,
									"character": 6
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "SelectQueryOrConditionRaw",
									"id": 409
								}
							}
						},
						{
							"id": 385,
							"name": "~",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Alias for {@link SelectQueryCondition.$exists}"
							},
							"sources": [
								{
									"fileName": "types/queryLanguage.ts",
									"line": 167,
									"character": 5
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								401,
								383,
								398,
								403,
								384,
								382,
								386,
								392,
								394,
								404,
								388,
								390,
								402,
								396,
								400,
								397,
								387,
								389,
								381,
								391,
								393,
								399,
								395,
								385
							]
						}
					],
					"sources": [
						{
							"fileName": "types/queryLanguage.ts",
							"line": 143,
							"character": 41
						}
					]
				},
				{
					"id": 405,
					"name": "SelectQueryRaw",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"indexSignature": {
						"id": 406,
						"name": "__index",
						"kind": 8192,
						"kindString": "Index signature",
						"flags": {},
						"comment": {
							"shortText": "Fields to search. If not providing an object, find items with a property value that equals this value"
						},
						"parameters": [
							{
								"id": 407,
								"name": "key",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"type": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "any"
								},
								{
									"type": "reference",
									"name": "SelectQueryConditionRaw",
									"id": 380
								}
							]
						}
					},
					"sources": [
						{
							"fileName": "types/queryLanguage.ts",
							"line": 265,
							"character": 32
						}
					]
				},
				{
					"id": 408,
					"name": "SelectQueryOrCondition",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "types/queryLanguage.ts",
							"line": 137,
							"character": 35
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "SelectQuery",
								"id": 377
							},
							{
								"type": "reference",
								"name": "SelectQueryCondition",
								"id": 363
							}
						]
					}
				},
				{
					"id": 409,
					"name": "SelectQueryOrConditionRaw",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "types/queryLanguage.ts",
							"line": 272,
							"character": 38
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "SelectQueryRaw",
								"id": 405
							},
							{
								"type": "reference",
								"name": "SelectQueryConditionRaw",
								"id": 380
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						352,
						357,
						377,
						363,
						380,
						405
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						408,
						409
					]
				}
			],
			"sources": [
				{
					"fileName": "types/queryLanguage.ts",
					"line": 3,
					"character": 30
				}
			]
		},
		{
			"id": 861,
			"name": "EAdapterState",
			"kind": 4,
			"kindString": "Enumeration",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Represents the current state of the adapter. Those states corresponds to event names emitted by the adapter when they are passed.",
				"tags": [
					{
						"tag": "author",
						"text": "Gerkin\n"
					}
				]
			},
			"children": [
				{
					"id": 863,
					"name": "ERROR",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 23,
							"character": 6
						}
					],
					"defaultValue": "\"error\""
				},
				{
					"id": 864,
					"name": "PREPARING",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 24,
							"character": 10
						}
					],
					"defaultValue": "\"preparing\""
				},
				{
					"id": 862,
					"name": "READY",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 22,
							"character": 6
						}
					],
					"defaultValue": "\"ready\""
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						863,
						864,
						862
					]
				}
			],
			"sources": [
				{
					"fileName": "adapters/base/adapter.ts",
					"line": 21,
					"character": 25
				}
			]
		},
		{
			"id": 995,
			"name": "EEntityState",
			"kind": 4,
			"kindString": "Enumeration",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Reflects the state of the entity.",
				"tags": [
					{
						"tag": "author",
						"text": "Gerkin\n"
					}
				]
			},
			"children": [
				{
					"id": 996,
					"name": "ORPHAN",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "entities/entityFactory.ts",
							"line": 30,
							"character": 7
						}
					],
					"defaultValue": "\"orphan\""
				},
				{
					"id": 998,
					"name": "SYNC",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "entities/entityFactory.ts",
							"line": 32,
							"character": 5
						}
					],
					"defaultValue": "\"sync\""
				},
				{
					"id": 997,
					"name": "SYNCING",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "entities/entityFactory.ts",
							"line": 31,
							"character": 8
						}
					],
					"defaultValue": "\"syncing\""
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						996,
						998,
						997
					]
				}
			],
			"sources": [
				{
					"fileName": "entities/entityFactory.ts",
					"line": 29,
					"character": 24
				}
			]
		},
		{
			"id": 1672,
			"name": "EHttpVerb",
			"kind": 4,
			"kindString": "Enumeration",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Defines the HTTP verbs usable by a query.",
				"tags": [
					{
						"tag": "author",
						"text": "Gerkin\n"
					}
				]
			},
			"children": [
				{
					"id": 1676,
					"name": "DELETE",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "adapters/webApi/adapter.ts",
							"line": 62,
							"character": 7
						}
					],
					"defaultValue": "\"DELETE\""
				},
				{
					"id": 1673,
					"name": "GET",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "adapters/webApi/adapter.ts",
							"line": 59,
							"character": 4
						}
					],
					"defaultValue": "\"GET\""
				},
				{
					"id": 1675,
					"name": "PATCH",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "adapters/webApi/adapter.ts",
							"line": 61,
							"character": 6
						}
					],
					"defaultValue": "\"PATCH\""
				},
				{
					"id": 1674,
					"name": "POST",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "adapters/webApi/adapter.ts",
							"line": 60,
							"character": 5
						}
					],
					"defaultValue": "\"POST\""
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						1676,
						1673,
						1675,
						1674
					]
				}
			],
			"sources": [
				{
					"fileName": "adapters/webApi/adapter.ts",
					"line": 58,
					"character": 21
				}
			]
		},
		{
			"id": 679,
			"name": "ELoggingLevel",
			"kind": 4,
			"kindString": "Enumeration",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Enumeration of logging levels handled by the logger",
				"tags": [
					{
						"tag": "author",
						"text": "Gerkin\n"
					}
				]
			},
			"children": [
				{
					"id": 682,
					"name": "Debug",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "logger/logger.ts",
							"line": 17,
							"character": 6
						}
					]
				},
				{
					"id": 685,
					"name": "Error",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "logger/logger.ts",
							"line": 20,
							"character": 6
						}
					]
				},
				{
					"id": 683,
					"name": "Log",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "logger/logger.ts",
							"line": 18,
							"character": 4
						}
					]
				},
				{
					"id": 686,
					"name": "Silent",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "logger/logger.ts",
							"line": 21,
							"character": 7
						}
					]
				},
				{
					"id": 680,
					"name": "Silly",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "logger/logger.ts",
							"line": 15,
							"character": 6
						}
					]
				},
				{
					"id": 681,
					"name": "Verbose",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "logger/logger.ts",
							"line": 16,
							"character": 8
						}
					]
				},
				{
					"id": 684,
					"name": "Warn",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "logger/logger.ts",
							"line": 19,
							"character": 5
						}
					]
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						682,
						685,
						683,
						686,
						680,
						681,
						684
					]
				}
			],
			"sources": [
				{
					"fileName": "logger/logger.ts",
					"line": 14,
					"character": 25
				}
			]
		},
		{
			"id": 871,
			"name": "Adapter",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true,
				"isAbstract": true
			},
			"comment": {
				"shortText": "Adapter is the base class of adapters. Adapters are components that are in charge to interact with data sources (files, databases, etc etc) with standardized methods. You should not use this class directly: extend this class and re-implement some methods to build an adapter. See the (upcoming) tutorial section.",
				"tags": [
					{
						"tag": "extends",
						"text": "SequentialEvent"
					},
					{
						"tag": "author",
						"text": "gerkin"
					},
					{
						"tag": "see",
						"text": "{@link https://gerkindev.github.io/SequentialEvent.js/SequentialEvent.html Sequential Event documentation}.\n"
					}
				]
			},
			"typeParameter": [
				{
					"id": 872,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "AdapterEntity",
						"id": 1197
					}
				}
			],
			"children": [
				{
					"id": 880,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"comment": {
						"shortText": "Create a new instance of adapter. This base class should be used by all other adapters.",
						"tags": [
							{
								"tag": "author",
								"text": "gerkin"
							}
						]
					},
					"signatures": [
						{
							"id": 883,
							"name": "new Adapter",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "Create a new instance of adapter. This base class should be used by all other adapters.",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 884,
									"name": "_classEntity",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IAdapterEntityCtr",
										"id": 1181,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T",
												"constraint": {
													"type": "reference",
													"name": "AdapterEntity",
													"id": 1197
												}
											}
										]
									}
								},
								{
									"id": 885,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Adapter",
								"id": 871
							},
							"overwrites": {
								"type": "reference",
								"name": "SequentialEvent.__constructor"
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 79,
							"character": 32
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "SequentialEvent.__constructor"
					}
				},
				{
					"id": 959,
					"name": "__events",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"comment": {
						"shortText": "Events hash attached to this SequentialEvent instance"
					},
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 16,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"name": "IEventsHash"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SequentialEvent.__events"
					}
				},
				{
					"id": 881,
					"name": "_classEntity",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isConstructorProperty": true,
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 91,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"name": "IAdapterEntityCtr",
						"id": 1181,
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "T",
								"constraint": {
									"type": "reference",
									"name": "AdapterEntity",
									"id": 1197
								}
							}
						]
					}
				},
				{
					"id": 878,
					"name": "error",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Error triggered by adapter initialization.",
						"tags": [
							{
								"tag": "author",
								"text": "Gerkin\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 72,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"name": "Error",
						"id": 9
					}
				},
				{
					"id": 875,
					"name": "filters",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"comment": {
						"shortText": "Hash of functions to cast data store values to JSON standard values in entity.",
						"tags": [
							{
								"tag": "author",
								"text": "Gerkin\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 51,
							"character": 18
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 882,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isConstructorProperty": true,
						"isExported": true,
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 92,
							"character": 22
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 876,
					"name": "remaps",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"comment": {
						"shortText": "Hash to transform entity fields to data store fields.",
						"tags": [
							{
								"tag": "author",
								"text": "Gerkin\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 58,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 877,
					"name": "remapsInverted",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"comment": {
						"shortText": "Hash to transform data store fields to entity fields.",
						"tags": [
							{
								"tag": "author",
								"text": "Gerkin\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 65,
							"character": 25
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 879,
					"name": "state",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"comment": {
						"shortText": "Describe current adapter status.",
						"tags": [
							{
								"tag": "author",
								"text": "Gerkin\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 79,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"name": "EAdapterState",
						"id": 861
					}
				},
				{
					"id": 873,
					"name": "classEntity",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"getSignature": {
						"id": 874,
						"name": "__get",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"type": {
							"type": "reference",
							"name": "IAdapterEntityCtr",
							"id": 1181,
							"typeArguments": [
								{
									"type": "unknown",
									"name": "T"
								}
							]
						}
					},
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 42,
							"character": 23
						}
					]
				},
				{
					"id": 954,
					"name": "configureCollection",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 955,
							"name": "configureCollection",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Saves the remapping table, the reversed remapping table and the filter table in the adapter. Those tables will be used later when manipulating models & entities.",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 956,
									"name": "tableName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 957,
									"name": "remaps",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IRemapsHash",
										"id": 806
									}
								},
								{
									"id": 958,
									"name": "filters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IFiltersHash",
										"id": 809
									},
									"defaultValue": " {}"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"implementationOf": {
								"type": "reference",
								"name": "DataSourceQuerier.configureCollection",
								"id": 857
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 465,
							"character": 27
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "DataSourceQuerier.configureCollection",
						"id": 856
					}
				},
				{
					"id": 949,
					"name": "deleteMany",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 950,
							"name": "deleteMany",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Delete several entities from the data store. This function is a default polyfill if the inheriting adapter does not provide `deleteMany` itself.",
								"returns": "Promise resolved once item is found. Called with (*{@link DataStoreEntity}[]* `entities`).\n",
								"tags": [
									{
										"tag": "summary",
										"text": "At least one of {@link deleteOne} or {@link deleteMany} must be reimplemented by adapter."
									},
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 951,
									"name": "table",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the table to delete data from."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 952,
									"name": "queryFind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hash representing the entities to find."
									},
									"type": {
										"type": "reference",
										"name": "QueryLanguage.SelectQueryOrCondition",
										"id": 408
									}
								},
								{
									"id": 953,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hash of options."
									},
									"type": {
										"type": "reference",
										"name": "QueryOptions",
										"id": 352
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 451,
							"character": 24
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "DataSourceQuerier.deleteMany",
						"id": 849
					}
				},
				{
					"id": 944,
					"name": "deleteOne",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 945,
							"name": "deleteOne",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Delete a single entity from the data store. This function is a default polyfill if the inheriting adapter does not provide `deleteOne` itself.",
								"tags": [
									{
										"tag": "summary",
										"text": "At least one of {@link deleteOne} or {@link deleteMany} must be reimplemented by adapter."
									},
									{
										"tag": "author",
										"text": "gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 946,
									"name": "table",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 947,
									"name": "queryFind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "QueryLanguage.SelectQueryOrCondition",
										"id": 408
									}
								},
								{
									"id": 948,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "QueryOptions",
										"id": 352
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 432,
							"character": 23
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "DataSourceQuerier.deleteOne",
						"id": 844
					}
				},
				{
					"id": 960,
					"name": "emit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 961,
							"name": "emit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Triggers each corresponding handlers in sequence.",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 962,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the event to trigger"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 963,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"comment": {
										"text": "Arguments to pass to each handler. Note that those arguments will be appended with previous handler resolution value, if any."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.emit"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 30,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "SequentialEvent.emit"
					}
				},
				{
					"id": 927,
					"name": "findMany",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 928,
							"name": "findMany",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Retrieve several entities from the data store. This function is a default polyfill if the inheriting adapter does not provide `findMany` itself.",
								"tags": [
									{
										"tag": "summary",
										"text": "At least one of {@link findOne} or {@link findMany} must be reimplemented by adapter."
									},
									{
										"tag": "author",
										"text": "gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 929,
									"name": "table",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 930,
									"name": "queryFind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "QueryLanguage.SelectQueryOrCondition",
										"id": 408
									}
								},
								{
									"id": 931,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "QueryOptions",
										"id": 352
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "IRawAdapterEntityAttributes",
											"id": 1176
										}
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 377,
							"character": 22
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "DataSourceQuerier.findMany",
						"id": 827
					}
				},
				{
					"id": 922,
					"name": "findOne",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 923,
							"name": "findOne",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Retrieve a single entity from the data store. This function is a default polyfill if the inheriting adapter does not provide `findOne` itself.",
								"tags": [
									{
										"tag": "summary",
										"text": "At least one of {@link findOne} or {@link findMany} must be reimplemented by adapter."
									},
									{
										"tag": "author",
										"text": "gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 924,
									"name": "table",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 925,
									"name": "queryFind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "QueryLanguage.SelectQueryOrCondition",
										"id": 408
									}
								},
								{
									"id": 926,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "QueryOptions",
										"id": 352
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IRawAdapterEntityAttributes",
												"id": 1176
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 362,
							"character": 21
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "DataSourceQuerier.findOne",
						"id": 822
					}
				},
				{
					"id": 984,
					"name": "has",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 985,
							"name": "has",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Check if this instance has listeners for the provided event. Alias for `hasEvent`",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 986,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the event to check"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.has"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 89,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "SequentialEvent.has"
					}
				},
				{
					"id": 987,
					"name": "hasEvent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 988,
							"name": "hasEvent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Check if this instance has listeners for the provided event",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 989,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the event to check"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.hasEvent"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 96,
							"character": 12
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "SequentialEvent.hasEvent"
					}
				},
				{
					"id": 918,
					"name": "insertMany",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 919,
							"name": "insertMany",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Insert several entities in the data store. This function is a default polyfill if the inheriting adapter does not provide `insertMany` itself.",
								"tags": [
									{
										"tag": "summary",
										"text": "At least one of {@link insertOne} or {@link insertMany} must be reimplemented by adapter."
									},
									{
										"tag": "author",
										"text": "gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 920,
									"name": "table",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 921,
									"name": "entities",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "IRawEntityAttributes",
											"id": 992
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "IRawAdapterEntityAttributes",
											"id": 1176
										}
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "DataSourceQuerier.insertMany",
								"id": 819
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 342,
							"character": 24
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "DataSourceQuerier.insertMany",
						"id": 818
					}
				},
				{
					"id": 914,
					"name": "insertOne",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 915,
							"name": "insertOne",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Insert a single entity in the data store. This function is a default polyfill if the inheriting adapter does not provide `insertOne` itself.",
								"tags": [
									{
										"tag": "summary",
										"text": "At least one of {@link insertOne} or {@link insertMany} must be reimplemented by adapter."
									},
									{
										"tag": "author",
										"text": "gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 916,
									"name": "table",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 917,
									"name": "entity",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IRawEntityAttributes",
										"id": 992
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IRawAdapterEntityAttributes",
												"id": 1176
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "DataSourceQuerier.insertOne",
								"id": 815
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 329,
							"character": 23
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "DataSourceQuerier.insertOne",
						"id": 814
					}
				},
				{
					"id": 905,
					"name": "normalizeOptions",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 906,
							"name": "normalizeOptions",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Transform options to their canonical form. This function must be applied before calling adapters' methods.",
								"returns": "Transformed options (also called `canonical options`).\n",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin"
									},
									{
										"tag": "throws",
										"text": "{TypeError} Thrown if an option does not have an acceptable type."
									},
									{
										"tag": "throws",
										"text": "{ReferenceError} Thrown if a required option is not present."
									},
									{
										"tag": "throws",
										"text": "{Error} Thrown when there isn't more precise description of the error is available (eg. when conflicts occurs)."
									}
								]
							},
							"parameters": [
								{
									"id": 907,
									"name": "opts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "QueryOptionsRaw",
										"id": 357
									},
									"defaultValue": " {}"
								}
							],
							"type": {
								"type": "reference",
								"name": "QueryOptions",
								"id": 352
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 225,
							"character": 24
						}
					]
				},
				{
					"id": 908,
					"name": "normalizeQuery",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 909,
							"name": "normalizeQuery",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Transform a search query to its canonical form, replacing aliases or shorthands by full query.",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 910,
									"name": "originalQuery",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "QueryLanguage.SelectQueryOrConditionRaw",
										"id": 409
									}
								},
								{
									"id": 911,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "QueryOptions",
										"id": 352
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "QueryLanguage.SelectQueryOrCondition",
								"id": 408
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 248,
							"character": 22
						}
					]
				},
				{
					"id": 964,
					"name": "off",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 965,
							"name": "off",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Remove one, many or all event handlers on some events.",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 966,
									"name": "events",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "String containing event names to unbind. You may indicate several events at once by separating with *spaces*"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 967,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "Function or array of functions to unbind on specified events"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IEventHandler"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IEventHandler"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.off"
							}
						},
						{
							"id": 968,
							"name": "off",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Remove event handlers on several events at once.",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 969,
									"name": "events",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Object with keys as event names containing a handler or an array of handlers to remove."
									},
									"type": {
										"type": "reference",
										"name": "IEventHash"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.off"
							}
						},
						{
							"id": 970,
							"name": "off",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Remove all events handlers",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 971,
									"name": "all",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Pass true to delete all handlers"
									},
									"type": {
										"type": "intrinsic",
										"name": "true"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.off"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 38,
							"character": 7
						},
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 45,
							"character": 7
						},
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 52,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "SequentialEvent.off"
					}
				},
				{
					"id": 972,
					"name": "on",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 973,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add one or many event handlers.",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 974,
									"name": "events",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "String containing event names to bind. You may indicate several events at once by separating with *spaces*"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 975,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Function or array of functions to bind on specified events"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IEventHandler"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IEventHandler"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.on"
							}
						},
						{
							"id": 976,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add event handlers on several events at once.",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 977,
									"name": "events",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Object with keys as event names containing a handler or an array of handlers to add."
									},
									"type": {
										"type": "reference",
										"name": "IEventHash"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.on"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 60,
							"character": 6
						},
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 67,
							"character": 6
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "SequentialEvent.on"
					}
				},
				{
					"id": 978,
					"name": "once",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 979,
							"name": "once",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add one or many event handlers. These listeners will be executed once, then are removed",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 980,
									"name": "events",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "String containing event names to bind. You may indicate several events at once by separating with *spaces*"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 981,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Function or array of functions to bind on specified events"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IEventHandler"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IEventHandler"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.once"
							}
						},
						{
							"id": 982,
							"name": "once",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add event handlers on several events at once. These listeners will be executed once, then are removed",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 983,
									"name": "events",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Object with keys as event names containing a handler or an array of handlers to add."
									},
									"type": {
										"type": "reference",
										"name": "IEventHash"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.once"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 75,
							"character": 8
						},
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 82,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "SequentialEvent.once"
					}
				},
				{
					"id": 895,
					"name": "remapInput",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 896,
							"name": "remapInput",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "TODO.",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin"
									},
									{
										"tag": "see",
										"text": "TODO remapping."
									},
									{
										"tag": "see",
										"text": "{@link Adapters.Adapter#remapIO remapIO}\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 897,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IEnumeratedHash",
										"id": 802,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 898,
									"name": "tableName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 899,
									"name": "query",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "T",
										"constraint": {
											"type": "reference",
											"name": "IEnumeratedHash",
											"id": 802,
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "any"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Dictionary",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 195,
							"character": 18
						}
					]
				},
				{
					"id": 900,
					"name": "remapOutput",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 901,
							"name": "remapOutput",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "TODO.",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin"
									},
									{
										"tag": "see",
										"text": "TODO remapping."
									},
									{
										"tag": "see",
										"text": "{@link Adapters.Adapter#remapIO remapIO}\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 902,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IEnumeratedHash",
										"id": 802,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 903,
									"name": "tableName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 904,
									"name": "query",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "T",
										"constraint": {
											"type": "reference",
											"name": "IEnumeratedHash",
											"id": 802,
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "any"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Dictionary",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 209,
							"character": 19
						}
					]
				},
				{
					"id": 912,
					"name": "toJSON",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 913,
							"name": "toJSON",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a POJO representing the current adapter.",
								"returns": "JSON representation of the adapter.\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 310,
							"character": 14
						}
					]
				},
				{
					"id": 938,
					"name": "updateMany",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 939,
							"name": "updateMany",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Update several entities from the data store. This function is a default polyfill if the inheriting adapter does not provide `updateMany` itself.",
								"tags": [
									{
										"tag": "summary",
										"text": "At least one of {@link updateOne} or {@link updateMany} must be reimplemented by adapter."
									},
									{
										"tag": "author",
										"text": "gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 940,
									"name": "table",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 941,
									"name": "queryFind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "QueryLanguage.SelectQueryOrCondition",
										"id": 408
									}
								},
								{
									"id": 942,
									"name": "update",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IRawEntityAttributes",
										"id": 992
									}
								},
								{
									"id": 943,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "QueryOptions",
										"id": 352
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "IRawAdapterEntityAttributes",
											"id": 1176
										}
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 411,
							"character": 24
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "DataSourceQuerier.updateMany",
						"id": 838
					}
				},
				{
					"id": 932,
					"name": "updateOne",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 933,
							"name": "updateOne",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Update a single entity from the data store. This function is a default polyfill if the inheriting adapter does not provide `updateOne` itself.",
								"tags": [
									{
										"tag": "summary",
										"text": "At least one of {@link updateOne} or {@link updateMany} must be reimplemented by adapter."
									},
									{
										"tag": "author",
										"text": "gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 934,
									"name": "table",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 935,
									"name": "queryFind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "QueryLanguage.SelectQueryOrCondition",
										"id": 408
									}
								},
								{
									"id": 936,
									"name": "update",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IRawEntityAttributes",
										"id": 992
									}
								},
								{
									"id": 937,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "QueryOptions",
										"id": 352
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IRawAdapterEntityAttributes",
												"id": 1176
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 395,
							"character": 23
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "DataSourceQuerier.updateOne",
						"id": 832
					}
				},
				{
					"id": 893,
					"name": "waitReady",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 894,
							"name": "waitReady",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a promise resolved once adapter state is ready.",
								"returns": "Promise resolved when adapter is ready, and rejected if an error occured.\n",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin"
									},
									{
										"tag": "listens",
										"text": "Adapters.Adapter#error"
									},
									{
										"tag": "listens",
										"text": "Adapters.Adapter#ready"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "this"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "DataSourceQuerier.waitReady",
								"id": 855
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 172,
							"character": 17
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "DataSourceQuerier.waitReady",
						"id": 854
					}
				},
				{
					"id": 886,
					"name": "iterateLimit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isPrivate": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 887,
							"name": "iterateLimit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Runs the query in loops to fulfill requirements in the options hash",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 888,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hash of options that forms the query"
									},
									"type": {
										"type": "reference",
										"name": "QueryOptions",
										"id": 352
									}
								},
								{
									"id": 889,
									"name": "query",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Query function to loop\n"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 890,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 891,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 892,
															"name": "options",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "QueryOptions",
																"id": 352
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "Promise",
														"typeArguments": [
															{
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"name": "IRawAdapterEntityAttributes",
																		"id": 1176
																	},
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	}
																]
															}
														]
													}
												}
											],
											"sources": [
												{
													"fileName": "adapters/base/adapter.ts",
													"line": 123,
													"character": 8
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "IRawAdapterEntityAttributes",
											"id": 1176
										}
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 121,
							"character": 34
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						880
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						959,
						881,
						878,
						875,
						882,
						876,
						877,
						879
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						873
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						954,
						949,
						944,
						960,
						927,
						922,
						984,
						987,
						918,
						914,
						905,
						908,
						964,
						972,
						978,
						895,
						900,
						912,
						938,
						932,
						893,
						886
					]
				}
			],
			"sources": [
				{
					"fileName": "adapters/base/adapter.ts",
					"line": 39,
					"character": 29
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "SequentialEvent"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"name": "InMemoryAdapter",
					"id": 1359
				},
				{
					"type": "reference",
					"name": "WebApiAdapter",
					"id": 1823
				},
				{
					"type": "reference",
					"name": "WebStorageAdapter",
					"id": 2029
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "DataSourceQuerier",
					"id": 812,
					"typeArguments": [
						{
							"type": "reference",
							"name": "IRawAdapterEntityAttributes",
							"id": 1176
						}
					]
				}
			]
		},
		{
			"id": 1197,
			"name": "AdapterEntity",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true,
				"isAbstract": true
			},
			"comment": {
				"shortText": "AdapterEntity is the sub-entity reflecting a single source content. Values may differ from the Entity itself."
			},
			"children": [
				{
					"id": 1203,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"comment": {
						"shortText": "Construct a new data source entity with specified content & parent.",
						"tags": [
							{
								"tag": "author",
								"text": "gerkin\n"
							}
						]
					},
					"signatures": [
						{
							"id": 1204,
							"name": "new AdapterEntity",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "Construct a new data source entity with specified content & parent.",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1205,
									"name": "entity",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IRawEntityAttributes",
										"id": 992
									}
								},
								{
									"id": 1206,
									"name": "dataSource",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Adapter",
										"id": 871
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "AdapterEntity",
								"id": 1197
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/entity.ts",
							"line": 42,
							"character": 52
						}
					]
				},
				{
					"id": 1202,
					"name": "_attributes",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "adapters/base/entity.ts",
							"line": 42,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"name": "IRawAdapterEntityAttributes",
						"id": 1176
					}
				},
				{
					"id": 1201,
					"name": "dataAccessLayer",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "adapters/base/entity.ts",
							"line": 40,
							"character": 32
						}
					],
					"type": {
						"type": "reference",
						"name": "DataAccessLayer",
						"id": 410
					}
				},
				{
					"id": 1200,
					"name": "dataSource",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "adapters/base/entity.ts",
							"line": 39,
							"character": 27
						}
					],
					"type": {
						"type": "reference",
						"name": "Adapter",
						"id": 871
					}
				},
				{
					"id": 1198,
					"name": "attributes",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"getSignature": {
						"id": 1199,
						"name": "__get",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"type": {
							"type": "reference",
							"name": "IRawAdapterEntityAttributes",
							"id": 1176
						}
					},
					"sources": [
						{
							"fileName": "adapters/base/entity.ts",
							"line": 36,
							"character": 22
						}
					]
				},
				{
					"id": 1217,
					"name": "matches",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 1218,
							"name": "matches",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Is implemented only by decorator"
							},
							"parameters": [
								{
									"id": 1219,
									"name": "query",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Query to match entity against\n"
									},
									"type": {
										"type": "reference",
										"name": "QueryLanguage.SelectQueryOrCondition",
										"id": 408
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/entity.ts",
							"line": 112,
							"character": 15
						}
					]
				},
				{
					"id": 1222,
					"name": "setId",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"signatures": [
						{
							"id": 1223,
							"name": "setId",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Calls the static {@link AdapterEntity.setId} with provided arguments",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 1224,
									"name": "adapter",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Adapter that will persist the entity"
									},
									"type": {
										"type": "reference",
										"name": "Adapter",
										"id": 871
									}
								},
								{
									"id": 1225,
									"name": "propName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Property that should contain the ID"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"id\""
								},
								{
									"id": 1226,
									"name": "id",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Value of the ID\n"
									},
									"type": {
										"type": "reference",
										"name": "EntityUid",
										"id": 1157
									},
									"defaultValue": " this.attributes.id"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/entity.ts",
							"line": 135,
							"character": 16
						}
					]
				},
				{
					"id": 1220,
					"name": "toObject",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 1221,
							"name": "toObject",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a plain object corresponding to this entity attributes.",
								"returns": "Plain object representing this entity.\n",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "IRawAdapterEntityAttributes",
								"id": 1176
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/entity.ts",
							"line": 122,
							"character": 16
						}
					]
				},
				{
					"id": 1213,
					"name": "matches",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 1214,
							"name": "matches",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Is implemented only by decorator"
							},
							"parameters": [
								{
									"id": 1215,
									"name": "attributes",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IRawAdapterEntityAttributes",
										"id": 1176
									}
								},
								{
									"id": 1216,
									"name": "query",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Query to match entity against\n"
									},
									"type": {
										"type": "reference",
										"name": "QueryLanguage.SelectQueryOrCondition",
										"id": 408
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/entity.ts",
							"line": 100,
							"character": 22
						}
					]
				},
				{
					"id": 1207,
					"name": "setId",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 1208,
							"name": "setId",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Applies the id in the appropriate field & id hash",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 1209,
									"name": "attributes",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Attributes of the entity"
									},
									"type": {
										"type": "reference",
										"name": "IRawEntityAttributes",
										"id": 992
									}
								},
								{
									"id": 1210,
									"name": "adapter",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Adapter that will persist the entity"
									},
									"type": {
										"type": "reference",
										"name": "Adapter",
										"id": 871
									}
								},
								{
									"id": 1211,
									"name": "propName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Property that should contain the ID"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"id\""
								},
								{
									"id": 1212,
									"name": "id",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Value of the ID\n"
									},
									"type": {
										"type": "reference",
										"name": "EntityUid",
										"id": 1157
									},
									"defaultValue": " attributes.id"
								}
							],
							"type": {
								"type": "reference",
								"name": "IRawAdapterEntityAttributes",
								"id": 1176
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/entity.ts",
							"line": 80,
							"character": 20
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1203
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1202,
						1201,
						1200
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						1198
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1217,
						1222,
						1220,
						1213,
						1207
					]
				}
			],
			"sources": [
				{
					"fileName": "adapters/base/entity.ts",
					"line": 35,
					"character": 35
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"name": "InMemoryEntity",
					"id": 1324
				},
				{
					"type": "reference",
					"name": "WebApiEntity",
					"id": 1475
				},
				{
					"type": "reference",
					"name": "WebStorageEntity",
					"id": 1997
				}
			]
		},
		{
			"id": 713,
			"name": "BrowserLogger",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 718,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 719,
							"name": "new BrowserLogger",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "BrowserLogger",
								"id": 713
							},
							"overwrites": {
								"type": "reference",
								"name": "Logger.__constructor",
								"id": 700
							}
						}
					],
					"sources": [
						{
							"fileName": "logger/browserLogger.ts",
							"line": 9,
							"character": 2
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Logger.__constructor",
						"id": 700
					}
				},
				{
					"id": 725,
					"name": "_level",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "logger/logger.ts",
							"line": 42,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"name": "ELoggingLevel",
						"id": 679
					},
					"defaultValue": " ELoggingLevel.Silly",
					"inheritedFrom": {
						"type": "reference",
						"name": "Logger._level",
						"id": 695
					}
				},
				{
					"id": 728,
					"name": "debug",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "logger/logger.ts",
							"line": 56,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"name": "LoggingFunction",
						"id": 709
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Logger.debug",
						"id": 705
					},
					"implementationOf": {
						"type": "reference",
						"name": "ILoggerInterface.debug",
						"id": 690
					}
				},
				{
					"id": 731,
					"name": "error",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "logger/logger.ts",
							"line": 59,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"name": "LoggingFunction",
						"id": 709
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Logger.error",
						"id": 708
					},
					"implementationOf": {
						"type": "reference",
						"name": "ILoggerInterface.error",
						"id": 693
					}
				},
				{
					"id": 729,
					"name": "log",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "logger/logger.ts",
							"line": 57,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"name": "LoggingFunction",
						"id": 709
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Logger.log",
						"id": 706
					},
					"implementationOf": {
						"type": "reference",
						"name": "ILoggerInterface.log",
						"id": 691
					}
				},
				{
					"id": 726,
					"name": "silly",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "logger/logger.ts",
							"line": 54,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"name": "LoggingFunction",
						"id": 709
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Logger.silly",
						"id": 703
					},
					"implementationOf": {
						"type": "reference",
						"name": "ILoggerInterface.silly",
						"id": 688
					}
				},
				{
					"id": 727,
					"name": "verbose",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "logger/logger.ts",
							"line": 55,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"name": "LoggingFunction",
						"id": 709
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Logger.verbose",
						"id": 704
					},
					"implementationOf": {
						"type": "reference",
						"name": "ILoggerInterface.verbose",
						"id": 689
					}
				},
				{
					"id": 730,
					"name": "warn",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "logger/logger.ts",
							"line": 58,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"name": "LoggingFunction",
						"id": 709
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Logger.warn",
						"id": 707
					},
					"implementationOf": {
						"type": "reference",
						"name": "ILoggerInterface.warn",
						"id": 692
					}
				},
				{
					"id": 714,
					"name": "level",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"getSignature": {
						"id": 717,
						"name": "__get",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"type": {
							"type": "reference",
							"name": "ELoggingLevel",
							"id": 679
						},
						"overwrites": {
							"type": "reference",
							"name": "Logger.level",
							"id": 696
						}
					},
					"setSignature": {
						"id": 715,
						"name": "__set",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {},
						"parameters": [
							{
								"id": 716,
								"name": "level",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {},
								"type": {
									"type": "reference",
									"name": "ELoggingLevel",
									"id": 679
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"overwrites": {
							"type": "reference",
							"name": "Logger.level",
							"id": 696
						}
					},
					"sources": [
						{
							"fileName": "logger/browserLogger.ts",
							"line": 4,
							"character": 17
						},
						{
							"fileName": "logger/browserLogger.ts",
							"line": 7,
							"character": 17
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Logger.level",
						"id": 696
					}
				},
				{
					"id": 720,
					"name": "bindConsoleFct",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 721,
							"name": "bindConsoleFct",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Prepare a log function with a specific log level",
								"returns": "A logging function to call with any parameters\n",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 722,
									"name": "minLevel",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Logging level of this function, under which no log will be emitted"
									},
									"type": {
										"type": "reference",
										"name": "ELoggingLevel",
										"id": 679
									}
								},
								{
									"id": 723,
									"name": "fctName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the console function to target"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 724,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"comment": {
										"text": "Parameters to prepend to the log"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "(Anonymous function)"
							}
						}
					],
					"sources": [
						{
							"fileName": "logger/browserLogger.ts",
							"line": 37,
							"character": 23
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						718
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						725,
						728,
						731,
						729,
						726,
						727,
						730
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						714
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						720
					]
				}
			],
			"sources": [
				{
					"fileName": "logger/browserLogger.ts",
					"line": 3,
					"character": 26
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "Logger",
					"id": 694
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "ILoggerInterface",
					"id": 687
				}
			]
		},
		{
			"id": 2339,
			"name": "BrowserWebApiAdapter",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 2340,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 2341,
							"name": "new BrowserWebApiAdapter",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 2342,
									"name": "dataSourceName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2343,
									"name": "config",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IWebApiAdapterConfig",
										"id": 1649
									}
								},
								{
									"id": 2344,
									"name": "eventProviders",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "IEventProvider",
											"id": 1671
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "BrowserWebApiAdapter",
								"id": 2339
							},
							"overwrites": {
								"type": "reference",
								"name": "WebApiAdapter.__constructor",
								"id": 1839
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/webApi/subAdapters/browserAdapter.ts",
							"line": 11,
							"character": 56
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "WebApiAdapter.__constructor",
						"id": 1839
					}
				},
				{
					"id": 2456,
					"name": "__events",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"comment": {
						"shortText": "Events hash attached to this SequentialEvent instance"
					},
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 16,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"name": "IEventsHash"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SequentialEvent.__events"
					}
				},
				{
					"id": 2428,
					"name": "_classEntity",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isConstructorProperty": true,
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 91,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"name": "IAdapterEntityCtr",
						"id": 1181,
						"typeArguments": [
							{
								"type": "reference",
								"name": "WebApiEntity",
								"id": 1475
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter._classEntity",
						"id": 881
					}
				},
				{
					"id": 2426,
					"name": "error",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Error triggered by adapter initialization.",
						"tags": [
							{
								"tag": "author",
								"text": "Gerkin\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 72,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"name": "Error",
						"id": 9
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter.error",
						"id": 878
					}
				},
				{
					"id": 2423,
					"name": "filters",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"comment": {
						"shortText": "Hash of functions to cast data store values to JSON standard values in entity.",
						"tags": [
							{
								"tag": "author",
								"text": "Gerkin\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 51,
							"character": 18
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter.filters",
						"id": 875
					}
				},
				{
					"id": 2429,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isConstructorProperty": true,
						"isExported": true,
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 92,
							"character": 22
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter.name",
						"id": 882
					}
				},
				{
					"id": 2424,
					"name": "remaps",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"comment": {
						"shortText": "Hash to transform entity fields to data store fields.",
						"tags": [
							{
								"tag": "author",
								"text": "Gerkin\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 58,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter.remaps",
						"id": 876
					}
				},
				{
					"id": 2425,
					"name": "remapsInverted",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"comment": {
						"shortText": "Hash to transform data store fields to entity fields.",
						"tags": [
							{
								"tag": "author",
								"text": "Gerkin\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 65,
							"character": 25
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter.remapsInverted",
						"id": 877
					}
				},
				{
					"id": 2427,
					"name": "state",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"comment": {
						"shortText": "Describe current adapter status.",
						"tags": [
							{
								"tag": "author",
								"text": "Gerkin\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 79,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"name": "EAdapterState",
						"id": 861
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter.state",
						"id": 879
					}
				},
				{
					"id": 2421,
					"name": "classEntity",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"getSignature": {
						"id": 2422,
						"name": "__get",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"type": {
							"type": "reference",
							"name": "IAdapterEntityCtr",
							"id": 1181,
							"typeArguments": [
								{
									"type": "unknown",
									"name": "T"
								}
							]
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "Adapter.classEntity",
							"id": 873
						}
					},
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 42,
							"character": 23
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter.classEntity",
						"id": 873
					}
				},
				{
					"id": 2451,
					"name": "configureCollection",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 2452,
							"name": "configureCollection",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Saves the remapping table, the reversed remapping table and the filter table in the adapter. Those tables will be used later when manipulating models & entities.",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2453,
									"name": "tableName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2454,
									"name": "remaps",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IRemapsHash",
										"id": 806
									}
								},
								{
									"id": 2455,
									"name": "filters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IFiltersHash",
										"id": 809
									},
									"defaultValue": " {}"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Adapter.configureCollection",
								"id": 954
							},
							"implementationOf": {
								"type": "reference",
								"name": "DataSourceQuerier.configureCollection",
								"id": 857
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 465,
							"character": 27
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter.configureCollection",
						"id": 954
					},
					"implementationOf": {
						"type": "reference",
						"name": "DataSourceQuerier.configureCollection",
						"id": 856
					}
				},
				{
					"id": 2410,
					"name": "deleteMany",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 2411,
							"name": "deleteMany",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Destroy several entities from the web api store",
								"returns": "Promise resolved once items are deleted. Called with (*undefined*).\n",
								"tags": [
									{
										"tag": "summary",
										"text": "This reimplements {@link Adapters.DiasporaAdapter#deleteMany}, modified for use of web api."
									},
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 2412,
									"name": "table",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the table to delete data from."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2413,
									"name": "queryFind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hash representing entities to find."
									},
									"type": {
										"type": "reference",
										"name": "SelectQuery",
										"id": 377
									}
								},
								{
									"id": 2414,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hash of options."
									},
									"type": {
										"type": "reference",
										"name": "QueryOptions",
										"id": 352
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"name": "Adapter.deleteMany",
								"id": 949
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "WebApiAdapter.deleteMany",
								"id": 1893
							},
							"implementationOf": {
								"type": "reference",
								"name": "DataSourceQuerier.deleteMany",
								"id": 850
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/webApi/adapter.ts",
							"line": 409,
							"character": 24
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Adapter.deleteMany",
						"id": 949
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "WebApiAdapter.deleteMany",
						"id": 1893
					},
					"implementationOf": {
						"type": "reference",
						"name": "DataSourceQuerier.deleteMany",
						"id": 849
					}
				},
				{
					"id": 2405,
					"name": "deleteOne",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 2406,
							"name": "deleteOne",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Destroy a single entity from the web api store",
								"returns": "Promise resolved once item is found. Called with (*undefined*).\n",
								"tags": [
									{
										"tag": "summary",
										"text": "This reimplements {@link Adapters.DiasporaAdapter#deleteOne}, modified for use of web api."
									},
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 2407,
									"name": "table",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the table to delete data from."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2408,
									"name": "queryFind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hash representing the entity to find."
									},
									"type": {
										"type": "reference",
										"name": "SelectQuery",
										"id": 377
									}
								},
								{
									"id": 2409,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hash of options."
									},
									"type": {
										"type": "reference",
										"name": "QueryOptions",
										"id": 352
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"name": "Adapter.deleteOne",
								"id": 944
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "WebApiAdapter.deleteOne",
								"id": 1888
							},
							"implementationOf": {
								"type": "reference",
								"name": "DataSourceQuerier.deleteOne",
								"id": 845
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/webApi/adapter.ts",
							"line": 386,
							"character": 23
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Adapter.deleteOne",
						"id": 944
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "WebApiAdapter.deleteOne",
						"id": 1888
					},
					"implementationOf": {
						"type": "reference",
						"name": "DataSourceQuerier.deleteOne",
						"id": 844
					}
				},
				{
					"id": 2457,
					"name": "emit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2458,
							"name": "emit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Triggers each corresponding handlers in sequence.",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2459,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the event to trigger"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2460,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"comment": {
										"text": "Arguments to pass to each handler. Note that those arguments will be appended with previous handler resolution value, if any."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.emit"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 30,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "SequentialEvent.emit"
					}
				},
				{
					"id": 2388,
					"name": "findMany",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 2389,
							"name": "findMany",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Find several entities from the web api store",
								"returns": "Promise resolved once items are found. Called with (*{@link InMemoryEntity}[]* `entities`).\n",
								"tags": [
									{
										"tag": "summary",
										"text": "This reimplements {@link Adapters.DiasporaAdapter#findMany}, modified for use of web api."
									},
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 2390,
									"name": "table",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the table to retrieve data from."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2391,
									"name": "queryFind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hash representing entities to find."
									},
									"type": {
										"type": "reference",
										"name": "SelectQuery",
										"id": 377
									}
								},
								{
									"id": 2392,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hash of options."
									},
									"type": {
										"type": "reference",
										"name": "QueryOptions",
										"id": 352
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "IRawAdapterEntityAttributes",
											"id": 1176
										}
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"name": "Adapter.findMany",
								"id": 927
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "WebApiAdapter.findMany",
								"id": 1871
							},
							"implementationOf": {
								"type": "reference",
								"name": "DataSourceQuerier.findMany",
								"id": 828
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/webApi/adapter.ts",
							"line": 288,
							"character": 22
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Adapter.findMany",
						"id": 927
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "WebApiAdapter.findMany",
						"id": 1871
					},
					"implementationOf": {
						"type": "reference",
						"name": "DataSourceQuerier.findMany",
						"id": 827
					}
				},
				{
					"id": 2383,
					"name": "findOne",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 2384,
							"name": "findOne",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Find a single entity from the web api store",
								"returns": "Promise resolved once item is found. Called with (*{@link InMemoryEntity}* `entity`).\n",
								"tags": [
									{
										"tag": "summary",
										"text": "This reimplements {@link Adapters.DiasporaAdapter#findOne}, modified for use of web api."
									},
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 2385,
									"name": "table",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the table to retrieve data from."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2386,
									"name": "queryFind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hash representing the entity to find."
									},
									"type": {
										"type": "reference",
										"name": "SelectQuery",
										"id": 377
									}
								},
								{
									"id": 2387,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hash of options."
									},
									"type": {
										"type": "reference",
										"name": "QueryOptions",
										"id": 352
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IRawAdapterEntityAttributes",
												"id": 1176
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"name": "Adapter.findOne",
								"id": 922
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "WebApiAdapter.findOne",
								"id": 1866
							},
							"implementationOf": {
								"type": "reference",
								"name": "DataSourceQuerier.findOne",
								"id": 823
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/webApi/adapter.ts",
							"line": 251,
							"character": 21
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Adapter.findOne",
						"id": 922
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "WebApiAdapter.findOne",
						"id": 1866
					},
					"implementationOf": {
						"type": "reference",
						"name": "DataSourceQuerier.findOne",
						"id": 822
					}
				},
				{
					"id": 2415,
					"name": "generateBaseEndPoint",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"signatures": [
						{
							"id": 2416,
							"name": "generateBaseEndPoint",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generates the URL to the base of the API",
								"returns": "The URI string to the base of the API\n"
							},
							"parameters": [
								{
									"id": 2417,
									"name": "scheme",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Represents the protocol (`http` or `https` most of the time)"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "false"
											}
										]
									}
								},
								{
									"id": 2418,
									"name": "host",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hostname to target (domain name, IP, ...)"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "false"
											}
										]
									}
								},
								{
									"id": 2419,
									"name": "port",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Port of the target to point to"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "false"
											}
										]
									}
								},
								{
									"id": 2420,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Absolute URI on the API"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "WebApiAdapter.generateBaseEndPoint",
								"id": 1904
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/webApi/adapter.ts",
							"line": 446,
							"character": 31
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "WebApiAdapter.generateBaseEndPoint",
						"id": 1904
					}
				},
				{
					"id": 2481,
					"name": "has",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2482,
							"name": "has",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Check if this instance has listeners for the provided event. Alias for `hasEvent`",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2483,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the event to check"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.has"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 89,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "SequentialEvent.has"
					}
				},
				{
					"id": 2484,
					"name": "hasEvent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2485,
							"name": "hasEvent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Check if this instance has listeners for the provided event",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2486,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the event to check"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.hasEvent"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 96,
							"character": 12
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "SequentialEvent.hasEvent"
					}
				},
				{
					"id": 2359,
					"name": "httpRequest",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"signatures": [
						{
							"id": 2360,
							"name": "httpRequest",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Creates a request, send it and get the result"
							},
							"parameters": [
								{
									"id": 2361,
									"name": "method",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "HTTP verb that describes the request type"
									},
									"type": {
										"type": "reference",
										"name": "EHttpVerb",
										"id": 1672
									}
								},
								{
									"id": 2362,
									"name": "endPoint",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Url to send on"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2363,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "Object to send"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "true"
											}
										]
									}
								},
								{
									"id": 2364,
									"name": "queryObject",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "Object to put in query string\n"
									},
									"type": {
										"type": "reference",
										"name": "QueryObject",
										"id": 2336
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "TEntitiesJsonResponse",
										"id": 1996
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"name": "WebApiAdapter.httpRequest",
								"id": 1898
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/webApi/subAdapters/browserAdapter.ts",
							"line": 106,
							"character": 28
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "WebApiAdapter.httpRequest",
						"id": 1898
					}
				},
				{
					"id": 2379,
					"name": "insertMany",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 2380,
							"name": "insertMany",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Insert several entities through an HTTP API.",
								"returns": "Promise resolved once insertion is done. Called with (*{@link WebApiEntity[]}* `entities`).\n",
								"tags": [
									{
										"tag": "summary",
										"text": "This reimplements {@link Adapters.DiasporaAdapter#insertMany}, modified for use of web api."
									},
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 2381,
									"name": "table",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the table to insert data in."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2382,
									"name": "entities",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hash representing entities to insert."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "IRawEntityAttributes",
											"id": 992
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "IRawAdapterEntityAttributes",
											"id": 1176
										}
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"name": "Adapter.insertMany",
								"id": 918
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "WebApiAdapter.insertMany",
								"id": 1862
							},
							"implementationOf": {
								"type": "reference",
								"name": "DataSourceQuerier.insertMany",
								"id": 819
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/webApi/adapter.ts",
							"line": 225,
							"character": 24
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Adapter.insertMany",
						"id": 918
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "WebApiAdapter.insertMany",
						"id": 1862
					},
					"implementationOf": {
						"type": "reference",
						"name": "DataSourceQuerier.insertMany",
						"id": 818
					}
				},
				{
					"id": 2375,
					"name": "insertOne",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 2376,
							"name": "insertOne",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Insert a single entity through an HTTP API.",
								"returns": "Promise resolved once insertion is done. Called with (*{@link WebApiEntity}* `entity`).\n",
								"tags": [
									{
										"tag": "summary",
										"text": "This reimplements {@link Adapters.DiasporaAdapter#insertOne}, modified for use of web api."
									},
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 2377,
									"name": "table",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the table to insert data in."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2378,
									"name": "entity",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hash representing the entity to insert."
									},
									"type": {
										"type": "reference",
										"name": "IRawEntityAttributes",
										"id": 992
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IRawAdapterEntityAttributes",
												"id": 1176
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"name": "Adapter.insertOne",
								"id": 914
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "WebApiAdapter.insertOne",
								"id": 1858
							},
							"implementationOf": {
								"type": "reference",
								"name": "DataSourceQuerier.insertOne",
								"id": 815
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/webApi/adapter.ts",
							"line": 204,
							"character": 23
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Adapter.insertOne",
						"id": 914
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "WebApiAdapter.insertOne",
						"id": 1858
					},
					"implementationOf": {
						"type": "reference",
						"name": "DataSourceQuerier.insertOne",
						"id": 814
					}
				},
				{
					"id": 2442,
					"name": "normalizeOptions",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 2443,
							"name": "normalizeOptions",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Transform options to their canonical form. This function must be applied before calling adapters' methods.",
								"returns": "Transformed options (also called `canonical options`).\n",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin"
									},
									{
										"tag": "throws",
										"text": "{TypeError} Thrown if an option does not have an acceptable type."
									},
									{
										"tag": "throws",
										"text": "{ReferenceError} Thrown if a required option is not present."
									},
									{
										"tag": "throws",
										"text": "{Error} Thrown when there isn't more precise description of the error is available (eg. when conflicts occurs)."
									}
								]
							},
							"parameters": [
								{
									"id": 2444,
									"name": "opts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "QueryOptionsRaw",
										"id": 357
									},
									"defaultValue": " {}"
								}
							],
							"type": {
								"type": "reference",
								"name": "QueryOptions",
								"id": 352
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Adapter.normalizeOptions",
								"id": 905
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 225,
							"character": 24
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter.normalizeOptions",
						"id": 905
					}
				},
				{
					"id": 2445,
					"name": "normalizeQuery",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 2446,
							"name": "normalizeQuery",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Transform a search query to its canonical form, replacing aliases or shorthands by full query.",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2447,
									"name": "originalQuery",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "QueryLanguage.SelectQueryOrConditionRaw",
										"id": 409
									}
								},
								{
									"id": 2448,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "QueryOptions",
										"id": 352
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "QueryLanguage.SelectQueryOrCondition",
								"id": 408
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Adapter.normalizeQuery",
								"id": 908
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 248,
							"character": 22
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter.normalizeQuery",
						"id": 908
					}
				},
				{
					"id": 2461,
					"name": "off",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2462,
							"name": "off",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Remove one, many or all event handlers on some events.",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2463,
									"name": "events",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "String containing event names to unbind. You may indicate several events at once by separating with *spaces*"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2464,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "Function or array of functions to unbind on specified events"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IEventHandler"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IEventHandler"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.off"
							}
						},
						{
							"id": 2465,
							"name": "off",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Remove event handlers on several events at once.",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2466,
									"name": "events",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Object with keys as event names containing a handler or an array of handlers to remove."
									},
									"type": {
										"type": "reference",
										"name": "IEventHash"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.off"
							}
						},
						{
							"id": 2467,
							"name": "off",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Remove all events handlers",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2468,
									"name": "all",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Pass true to delete all handlers"
									},
									"type": {
										"type": "intrinsic",
										"name": "true"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.off"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 38,
							"character": 7
						},
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 45,
							"character": 7
						},
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 52,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "SequentialEvent.off"
					}
				},
				{
					"id": 2469,
					"name": "on",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2470,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add one or many event handlers.",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2471,
									"name": "events",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "String containing event names to bind. You may indicate several events at once by separating with *spaces*"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2472,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Function or array of functions to bind on specified events"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IEventHandler"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IEventHandler"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.on"
							}
						},
						{
							"id": 2473,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add event handlers on several events at once.",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2474,
									"name": "events",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Object with keys as event names containing a handler or an array of handlers to add."
									},
									"type": {
										"type": "reference",
										"name": "IEventHash"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.on"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 60,
							"character": 6
						},
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 67,
							"character": 6
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "SequentialEvent.on"
					}
				},
				{
					"id": 2475,
					"name": "once",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2476,
							"name": "once",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add one or many event handlers. These listeners will be executed once, then are removed",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2477,
									"name": "events",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "String containing event names to bind. You may indicate several events at once by separating with *spaces*"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2478,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Function or array of functions to bind on specified events"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IEventHandler"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IEventHandler"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.once"
							}
						},
						{
							"id": 2479,
							"name": "once",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add event handlers on several events at once. These listeners will be executed once, then are removed",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2480,
									"name": "events",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Object with keys as event names containing a handler or an array of handlers to add."
									},
									"type": {
										"type": "reference",
										"name": "IEventHash"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.once"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 75,
							"character": 8
						},
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 82,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "SequentialEvent.once"
					}
				},
				{
					"id": 2432,
					"name": "remapInput",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 2433,
							"name": "remapInput",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "TODO.",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin"
									},
									{
										"tag": "see",
										"text": "TODO remapping."
									},
									{
										"tag": "see",
										"text": "{@link Adapters.Adapter#remapIO remapIO}\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 2434,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IEnumeratedHash",
										"id": 802,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 2435,
									"name": "tableName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2436,
									"name": "query",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "T",
										"constraint": {
											"type": "reference",
											"name": "IEnumeratedHash",
											"id": 802,
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "any"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Dictionary",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Adapter.remapInput",
								"id": 895
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 195,
							"character": 18
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter.remapInput",
						"id": 895
					}
				},
				{
					"id": 2437,
					"name": "remapOutput",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 2438,
							"name": "remapOutput",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "TODO.",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin"
									},
									{
										"tag": "see",
										"text": "TODO remapping."
									},
									{
										"tag": "see",
										"text": "{@link Adapters.Adapter#remapIO remapIO}\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 2439,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IEnumeratedHash",
										"id": 802,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 2440,
									"name": "tableName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2441,
									"name": "query",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "T",
										"constraint": {
											"type": "reference",
											"name": "IEnumeratedHash",
											"id": 802,
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "any"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Dictionary",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Adapter.remapOutput",
								"id": 900
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 209,
							"character": 19
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter.remapOutput",
						"id": 900
					}
				},
				{
					"id": 2449,
					"name": "toJSON",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 2450,
							"name": "toJSON",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a POJO representing the current adapter.",
								"returns": "JSON representation of the adapter.\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "object"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Adapter.toJSON",
								"id": 912
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 310,
							"character": 14
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter.toJSON",
						"id": 912
					}
				},
				{
					"id": 2399,
					"name": "updateMany",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 2400,
							"name": "updateMany",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Update several entities from the web api store",
								"returns": "Promise resolved once update is done. Called with (*{@link InMemoryEntity}[]* `entities`).\n",
								"tags": [
									{
										"tag": "summary",
										"text": "This reimplements {@link Adapters.DiasporaAdapter#updateMany}, modified for use of web api."
									},
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 2401,
									"name": "table",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the table to update data in."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2402,
									"name": "queryFind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hash representing entities to find."
									},
									"type": {
										"type": "reference",
										"name": "SelectQuery",
										"id": 377
									}
								},
								{
									"id": 2403,
									"name": "update",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Object properties to set."
									},
									"type": {
										"type": "reference",
										"name": "IRawEntityAttributes",
										"id": 992
									}
								},
								{
									"id": 2404,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hash of options."
									},
									"type": {
										"type": "reference",
										"name": "QueryOptions",
										"id": 352
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "IRawAdapterEntityAttributes",
											"id": 1176
										}
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"name": "Adapter.updateMany",
								"id": 938
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "WebApiAdapter.updateMany",
								"id": 1882
							},
							"implementationOf": {
								"type": "reference",
								"name": "DataSourceQuerier.updateMany",
								"id": 839
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/webApi/adapter.ts",
							"line": 357,
							"character": 24
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Adapter.updateMany",
						"id": 938
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "WebApiAdapter.updateMany",
						"id": 1882
					},
					"implementationOf": {
						"type": "reference",
						"name": "DataSourceQuerier.updateMany",
						"id": 838
					}
				},
				{
					"id": 2393,
					"name": "updateOne",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 2394,
							"name": "updateOne",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Update a single entity from the web api store",
								"returns": "Promise resolved once update is done. Called with (*{@link InMemoryEntity}* `entity`).\n",
								"tags": [
									{
										"tag": "summary",
										"text": "This reimplements {@link Adapters.DiasporaAdapter#updateOne}, modified for use of web api."
									},
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 2395,
									"name": "table",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the table to update data in."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2396,
									"name": "queryFind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hash representing the entity to find."
									},
									"type": {
										"type": "reference",
										"name": "SelectQuery",
										"id": 377
									}
								},
								{
									"id": 2397,
									"name": "update",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Object properties to set."
									},
									"type": {
										"type": "reference",
										"name": "IRawEntityAttributes",
										"id": 992
									}
								},
								{
									"id": 2398,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hash of options."
									},
									"type": {
										"type": "reference",
										"name": "QueryOptions",
										"id": 352
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IRawAdapterEntityAttributes",
												"id": 1176
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"name": "Adapter.updateOne",
								"id": 932
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "WebApiAdapter.updateOne",
								"id": 1876
							},
							"implementationOf": {
								"type": "reference",
								"name": "DataSourceQuerier.updateOne",
								"id": 833
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/webApi/adapter.ts",
							"line": 326,
							"character": 23
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Adapter.updateOne",
						"id": 932
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "WebApiAdapter.updateOne",
						"id": 1876
					},
					"implementationOf": {
						"type": "reference",
						"name": "DataSourceQuerier.updateOne",
						"id": 832
					}
				},
				{
					"id": 2430,
					"name": "waitReady",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 2431,
							"name": "waitReady",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a promise resolved once adapter state is ready.",
								"returns": "Promise resolved when adapter is ready, and rejected if an error occured.\n",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin"
									},
									{
										"tag": "listens",
										"text": "Adapters.Adapter#error"
									},
									{
										"tag": "listens",
										"text": "Adapters.Adapter#ready"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "this"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Adapter.waitReady",
								"id": 893
							},
							"implementationOf": {
								"type": "reference",
								"name": "DataSourceQuerier.waitReady",
								"id": 855
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 172,
							"character": 17
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter.waitReady",
						"id": 893
					},
					"implementationOf": {
						"type": "reference",
						"name": "DataSourceQuerier.waitReady",
						"id": 854
					}
				},
				{
					"id": 2348,
					"name": "defineXhrEvents",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isPrivate": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 2349,
							"name": "defineXhrEvents",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Binds `resolve` & `reject` to XHR events.",
								"returns": "XHR with resolution bound to a promise.\n"
							},
							"parameters": [
								{
									"id": 2350,
									"name": "xhr",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "XHR request to bind"
									},
									"type": {
										"type": "reference",
										"name": "XMLHttpRequest"
									}
								},
								{
									"id": 2351,
									"name": "resolve",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Promise resolution function that will be triggered if `onload` is ran & the status is a 2xx."
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2352,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2353,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2354,
															"name": "thenableOrResult",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"name": "TEntitiesJsonResponse",
																		"id": 1996
																	},
																	{
																		"type": "reference",
																		"name": "PromiseLike",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"name": "TEntitiesJsonResponse",
																				"id": 1996
																			}
																		]
																	},
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "adapters/webApi/subAdapters/browserAdapter.ts",
													"line": 63,
													"character": 10
												}
											]
										}
									}
								},
								{
									"id": 2355,
									"name": "reject",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Promise rejection function to trigger if `onerror` is ran, or a non 2xx status is returned."
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2356,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2357,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2358,
															"name": "thenableOrResult",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"name": "__type"
																	},
																	{
																		"type": "reference",
																		"name": "PromiseLike",
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		]
																	},
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "adapters/webApi/subAdapters/browserAdapter.ts",
													"line": 69,
													"character": 9
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "XMLHttpRequest"
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/webApi/subAdapters/browserAdapter.ts",
							"line": 61,
							"character": 31
						}
					]
				},
				{
					"id": 2345,
					"name": "queryObjectToString",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isPrivate": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 2346,
							"name": "queryObjectToString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Serialize a query object to be injected in a query string.",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 2347,
									"name": "queryObject",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "Query to serialize for a query string\n"
									},
									"type": {
										"type": "reference",
										"name": "QueryObject",
										"id": 2336
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/webApi/subAdapters/browserAdapter.ts",
							"line": 32,
							"character": 35
						}
					]
				},
				{
					"id": 2365,
					"name": "httpErrorFactories",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isProtected": true
					},
					"children": [
						{
							"id": 2366,
							"name": "400",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2367,
									"name": "400",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2368,
											"name": "xhr",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IXhrResponse",
												"id": 1518
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Error"
									}
								}
							],
							"sources": [
								{
									"fileName": "adapters/webApi/adapter.ts",
									"line": 84,
									"character": 5
								}
							]
						},
						{
							"id": 2369,
							"name": "404",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2370,
									"name": "404",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2371,
											"name": "xhr",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IXhrResponse",
												"id": 1518
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Error"
									}
								}
							],
							"sources": [
								{
									"fileName": "adapters/webApi/adapter.ts",
									"line": 90,
									"character": 5
								}
							]
						},
						{
							"id": 2372,
							"name": "_",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2373,
									"name": "_",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2374,
											"name": "xhr",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IXhrResponse",
												"id": 1518
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Error"
									}
								}
							],
							"sources": [
								{
									"fileName": "adapters/webApi/adapter.ts",
									"line": 92,
									"character": 3
								}
							]
						}
					],
					"groups": [
						{
							"title": "Functions",
							"kind": 64,
							"children": [
								2366,
								2369,
								2372
							]
						}
					],
					"sources": [
						{
							"fileName": "adapters/webApi/adapter.ts",
							"line": 83,
							"character": 45
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "WebApiAdapter.httpErrorFactories",
						"id": 1824
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						2340
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						2456,
						2428,
						2426,
						2423,
						2429,
						2424,
						2425,
						2427
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						2421
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						2451,
						2410,
						2405,
						2457,
						2388,
						2383,
						2415,
						2481,
						2484,
						2359,
						2379,
						2375,
						2442,
						2445,
						2461,
						2469,
						2475,
						2432,
						2437,
						2449,
						2399,
						2393,
						2430,
						2348,
						2345
					]
				},
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						2365
					]
				}
			],
			"sources": [
				{
					"fileName": "adapters/webApi/subAdapters/browserAdapter.ts",
					"line": 11,
					"character": 33
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "WebApiAdapter",
					"id": 1823
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "DataSourceQuerier",
					"id": 812,
					"typeArguments": [
						{
							"type": "reference",
							"name": "IRawAdapterEntityAttributes",
							"id": 1176
						}
					]
				}
			]
		},
		{
			"id": 198,
			"name": "CheckTransformer",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "The Validator class is used to check an entity or its fields against a model description."
			},
			"children": [
				{
					"id": 209,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"comment": {
						"shortText": "Construct a Validator configured for the provided model."
					},
					"signatures": [
						{
							"id": 214,
							"name": "new CheckTransformer",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "Construct a Validator configured for the provided model."
							},
							"parameters": [
								{
									"id": 215,
									"name": "_modelAttributes",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 216,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"indexSignature": {
												"id": 217,
												"name": "__index",
												"kind": 8192,
												"kindString": "Index signature",
												"flags": {},
												"parameters": [
													{
														"id": 218,
														"name": "key",
														"kind": 32768,
														"kindString": "Parameter",
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"type": {
													"type": "reference",
													"name": "FieldDescriptor",
													"id": 115
												}
											},
											"sources": [
												{
													"fileName": "entityTransformers/entityTransformer.ts",
													"line": 17,
													"character": 38
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "CheckTransformer",
								"id": 198
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "EntityTransformer.__constructor",
								"id": 138
							}
						}
					],
					"sources": [
						{
							"fileName": "entityTransformers/entityTransformer.ts",
							"line": 10,
							"character": 41
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "EntityTransformer.__constructor",
						"id": 138
					}
				},
				{
					"id": 210,
					"name": "_modelAttributes",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isConstructorProperty": true,
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "entityTransformers/entityTransformer.ts",
							"line": 17,
							"character": 37
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 211,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"indexSignature": {
								"id": 212,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 213,
										"name": "key",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "reference",
									"name": "FieldDescriptor",
									"id": 115
								}
							},
							"sources": [
								{
									"fileName": "entityTransformers/entityTransformer.ts",
									"line": 17,
									"character": 38
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "EntityTransformer._modelAttributes",
						"id": 139
					}
				},
				{
					"id": 219,
					"name": "modelAttributes",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"comment": {
						"shortText": "Get the model description provided in constructor."
					},
					"getSignature": {
						"id": 220,
						"name": "__get",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"comment": {
							"shortText": "Get the model description provided in constructor."
						},
						"type": {
							"type": "intrinsic",
							"name": "object"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "EntityTransformer.modelAttributes",
							"id": 158
						}
					},
					"sources": [
						{
							"fileName": "entityTransformers/entityTransformer.ts",
							"line": 46,
							"character": 27
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "EntityTransformer.modelAttributes",
						"id": 158
					}
				},
				{
					"id": 221,
					"name": "PathStack",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"comment": {
						"shortText": "Get the PathStack constructor."
					},
					"getSignature": {
						"id": 222,
						"name": "__get",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"comment": {
							"shortText": "Get the PathStack constructor."
						},
						"type": {
							"type": "reference",
							"name": "PathStack",
							"id": 116
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "EntityTransformer.PathStack",
							"id": 160
						}
					},
					"sources": [
						{
							"fileName": "entityTransformers/entityTransformer.ts",
							"line": 53,
							"character": 28
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "EntityTransformer.PathStack",
						"id": 160
					}
				},
				{
					"id": 199,
					"name": "apply",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 200,
							"name": "apply",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Check if the value matches the field description provided, thus verify if it is valid.",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 201,
									"name": "entity",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IRawEntityAttributes",
										"id": 992
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "IRawEntityAttributes",
								"id": 992
							},
							"overwrites": {
								"type": "reference",
								"name": "EntityTransformer.apply",
								"id": 148
							}
						}
					],
					"sources": [
						{
							"fileName": "entityTransformers/checkTransformer.ts",
							"line": 406,
							"character": 13
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "EntityTransformer.apply",
						"id": 148
					}
				},
				{
					"id": 202,
					"name": "applyField",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 203,
							"name": "applyField",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Check if the value matches the field description provided, thus verify if it is valid.",
								"returns": "Hash describing errors.\n",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 204,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Value to check."
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 205,
									"name": "keys",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Pathstack representing path to this validation."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "PathStack",
												"id": 116
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								},
								{
									"id": 206,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hash of options."
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 207,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 208,
													"name": "getProps",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "entityTransformers/checkTransformer.ts",
															"line": 435,
															"character": 21
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														208
													]
												}
											],
											"sources": [
												{
													"fileName": "entityTransformers/checkTransformer.ts",
													"line": 435,
													"character": 10
												}
											]
										}
									},
									"defaultValue": " { getProps: false }"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "ErrorObjectFinal",
										"id": 172
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"name": "EntityTransformer.applyField",
								"id": 151
							}
						}
					],
					"sources": [
						{
							"fileName": "entityTransformers/checkTransformer.ts",
							"line": 432,
							"character": 18
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "EntityTransformer.applyField",
						"id": 151
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						209
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						210
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						219,
						221
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						199,
						202
					]
				}
			],
			"sources": [
				{
					"fileName": "entityTransformers/checkTransformer.ts",
					"line": 399,
					"character": 29
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "EntityTransformer",
					"id": 137
				}
			]
		},
		{
			"id": 410,
			"name": "DataAccessLayer",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "The Data Access Layer class is the components that wraps adapter calls to provide standard inputs & outputs. Typically, it casts raw query & raw query options in standard query & standard query options, and casts POJO from the output of the adapter's query in adapter entity.",
				"tags": [
					{
						"tag": "author",
						"text": "Gerkin\n"
					}
				]
			},
			"typeParameter": [
				{
					"id": 411,
					"name": "TEntity",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "AdapterEntity",
						"id": 1197
					}
				},
				{
					"id": 412,
					"name": "TAdapter",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "Adapter",
						"id": 871,
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "TEntity"
							}
						]
					}
				}
			],
			"children": [
				{
					"id": 426,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"comment": {
						"shortText": "Constructs a new instance of DataAccessLayer. This new instance is automatically registered in the registry of DataAccessLayer",
						"tags": [
							{
								"tag": "author",
								"text": "Gekrin"
							}
						]
					},
					"signatures": [
						{
							"id": 428,
							"name": "new DataAccessLayer",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "Constructs a new instance of DataAccessLayer. This new instance is automatically registered in the registry of DataAccessLayer",
								"tags": [
									{
										"tag": "author",
										"text": "Gekrin"
									}
								]
							},
							"parameters": [
								{
									"id": 429,
									"name": "adapter",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Adapter to wrap\n"
									},
									"type": {
										"type": "typeParameter",
										"name": "TAdapter",
										"constraint": {
											"type": "reference",
											"name": "Adapter",
											"id": 871,
											"typeArguments": [
												{
													"type": "typeParameter",
													"name": "TEntity"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "DataAccessLayer",
								"id": 410
							},
							"overwrites": {
								"type": "reference",
								"name": "SequentialEvent.__constructor"
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/dataAccessLayer.ts",
							"line": 45,
							"character": 85
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "SequentialEvent.__constructor"
					}
				},
				{
					"id": 483,
					"name": "__events",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"comment": {
						"shortText": "Events hash attached to this SequentialEvent instance"
					},
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 16,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"name": "IEventsHash"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SequentialEvent.__events"
					}
				},
				{
					"id": 427,
					"name": "adapter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isConstructorProperty": true,
						"isExported": true,
						"isPublic": true
					},
					"comment": {
						"shortText": "Adapter to wrap\n"
					},
					"sources": [
						{
							"fileName": "adapters/dataAccessLayer.ts",
							"line": 53,
							"character": 35
						}
					],
					"type": {
						"type": "typeParameter",
						"name": "TAdapter",
						"constraint": {
							"type": "reference",
							"name": "Adapter",
							"id": 871,
							"typeArguments": [
								{
									"type": "typeParameter",
									"name": "TEntity"
								}
							]
						}
					}
				},
				{
					"id": 425,
					"name": "dataAccessLayersRegistry",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "adapters/dataAccessLayer.ts",
							"line": 45,
							"character": 42
						}
					],
					"type": {
						"type": "reference",
						"name": "WeakMap",
						"typeArguments": [
							{
								"type": "reference",
								"name": "Adapter",
								"id": 871,
								"typeArguments": [
									{
										"type": "reference",
										"name": "AdapterEntity",
										"id": 1197
									}
								]
							},
							{
								"type": "reference",
								"name": "DataAccessLayer",
								"id": 410,
								"typeArguments": [
									{
										"type": "reference",
										"name": "AdapterEntity",
										"id": 1197
									},
									{
										"type": "reference",
										"name": "Adapter",
										"id": 871,
										"typeArguments": [
											{
												"type": "reference",
												"name": "AdapterEntity",
												"id": 1197
											}
										]
									}
								]
							}
						]
					},
					"defaultValue": " new WeakMap<Adapter, DataAccessLayer>()"
				},
				{
					"id": 413,
					"name": "classEntity",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"getSignature": {
						"id": 414,
						"name": "__get",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"type": {
							"type": "reference",
							"name": "IAdapterEntityCtr",
							"id": 1181,
							"typeArguments": [
								{
									"type": "unknown",
									"name": "TEntity"
								}
							]
						}
					},
					"sources": [
						{
							"fileName": "adapters/dataAccessLayer.ts",
							"line": 21,
							"character": 23
						}
					]
				},
				{
					"id": 423,
					"name": "name",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"getSignature": {
						"id": 424,
						"name": "__get",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"type": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"sources": [
						{
							"fileName": "adapters/dataAccessLayer.ts",
							"line": 41,
							"character": 16
						}
					]
				},
				{
					"id": 419,
					"name": "normalizeOptions",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"getSignature": {
						"id": 420,
						"name": "__get",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"type": {
							"type": "reference",
							"name": "normalizeOptions",
							"id": 905
						}
					},
					"sources": [
						{
							"fileName": "adapters/dataAccessLayer.ts",
							"line": 33,
							"character": 28
						}
					]
				},
				{
					"id": 421,
					"name": "normalizeQuery",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"getSignature": {
						"id": 422,
						"name": "__get",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"type": {
							"type": "reference",
							"name": "normalizeQuery",
							"id": 908
						}
					},
					"sources": [
						{
							"fileName": "adapters/dataAccessLayer.ts",
							"line": 37,
							"character": 26
						}
					]
				},
				{
					"id": 415,
					"name": "remapInput",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"getSignature": {
						"id": 416,
						"name": "__get",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"type": {
							"type": "reference",
							"name": "remapInput",
							"id": 895
						}
					},
					"sources": [
						{
							"fileName": "adapters/dataAccessLayer.ts",
							"line": 25,
							"character": 22
						}
					]
				},
				{
					"id": 417,
					"name": "remapOutput",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"getSignature": {
						"id": 418,
						"name": "__get",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"type": {
							"type": "reference",
							"name": "remapOutput",
							"id": 900
						}
					},
					"sources": [
						{
							"fileName": "adapters/dataAccessLayer.ts",
							"line": 29,
							"character": 23
						}
					]
				},
				{
					"id": 475,
					"name": "configureCollection",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 476,
							"name": "configureCollection",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Saves the remapping table, the reversed remapping table and the filter table in the adapter. Those tables will be used later when manipulating models & entities.",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 477,
									"name": "collectionName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the collection"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 478,
									"name": "remaps",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Remappings to apply on properties"
									},
									"type": {
										"type": "reference",
										"name": "IRemapsHash",
										"id": 806
									}
								},
								{
									"id": 479,
									"name": "filters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Filters to apply on properties\n"
									},
									"type": {
										"type": "reference",
										"name": "IFiltersHash",
										"id": 809
									},
									"defaultValue": " {}"
								}
							],
							"type": {
								"type": "unknown",
								"name": "this"
							},
							"implementationOf": {
								"type": "reference",
								"name": "DataSourceQuerier.configureCollection",
								"id": 857
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/dataAccessLayer.ts",
							"line": 318,
							"character": 27
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "DataSourceQuerier.configureCollection",
						"id": 856
					}
				},
				{
					"id": 468,
					"name": "deleteMany",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 469,
							"name": "deleteMany",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Delete entities from the desired collection",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 470,
									"name": "collectionName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the collection to delete entities from"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 471,
									"name": "queryFind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Description of the entities to delete"
									},
									"type": {
										"type": "reference",
										"name": "QueryLanguage.SelectQueryOrConditionRaw",
										"id": 409
									}
								},
								{
									"id": 472,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Options to apply to the query\n"
									},
									"type": {
										"type": "reference",
										"name": "QueryOptionsRaw",
										"id": 357
									},
									"defaultValue": " {}"
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "DataSourceQuerier.deleteMany",
								"id": 850
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/dataAccessLayer.ts",
							"line": 283,
							"character": 24
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "DataSourceQuerier.deleteMany",
						"id": 849
					}
				},
				{
					"id": 463,
					"name": "deleteOne",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 464,
							"name": "deleteOne",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Delete an entity from the desired collection",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 465,
									"name": "collectionName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the collection to delete entity from"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 466,
									"name": "queryFind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Description of the entity to delete"
									},
									"type": {
										"type": "reference",
										"name": "QueryLanguage.SelectQueryOrConditionRaw",
										"id": 409
									}
								},
								{
									"id": 467,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Options to apply to the query\n"
									},
									"type": {
										"type": "reference",
										"name": "QueryOptionsRaw",
										"id": 357
									},
									"defaultValue": " {}"
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "DataSourceQuerier.deleteOne",
								"id": 845
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/dataAccessLayer.ts",
							"line": 262,
							"character": 23
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "DataSourceQuerier.deleteOne",
						"id": 844
					}
				},
				{
					"id": 484,
					"name": "emit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 485,
							"name": "emit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Triggers each corresponding handlers in sequence.",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 486,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the event to trigger"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 487,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"comment": {
										"text": "Arguments to pass to each handler. Note that those arguments will be appended with previous handler resolution value, if any."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.emit"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 30,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "SequentialEvent.emit"
					}
				},
				{
					"id": 446,
					"name": "findMany",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 447,
							"name": "findMany",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Retrieve several entities from the desired collection.",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 448,
									"name": "collectionName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the collection to search into"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 449,
									"name": "queryFind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Description of the entities to find"
									},
									"type": {
										"type": "reference",
										"name": "QueryLanguage.SelectQueryOrConditionRaw",
										"id": 409
									}
								},
								{
									"id": 450,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Options to apply to the query\n"
									},
									"type": {
										"type": "reference",
										"name": "QueryOptionsRaw",
										"id": 357
									},
									"defaultValue": " {}"
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "unknown",
											"name": "TEntity"
										}
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "DataSourceQuerier.findMany",
								"id": 828
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/dataAccessLayer.ts",
							"line": 164,
							"character": 22
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "DataSourceQuerier.findMany",
						"id": 827
					}
				},
				{
					"id": 441,
					"name": "findOne",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 442,
							"name": "findOne",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Retrieve a single entity from the desired collection.",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 443,
									"name": "collectionName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the collection to search into"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 444,
									"name": "queryFind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Description of the entity to find"
									},
									"type": {
										"type": "reference",
										"name": "QueryLanguage.SelectQueryOrConditionRaw",
										"id": 409
									}
								},
								{
									"id": 445,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Options to apply to the query\n"
									},
									"type": {
										"type": "reference",
										"name": "QueryOptionsRaw",
										"id": 357
									},
									"defaultValue": " {}"
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "unknown",
												"name": "TEntity"
											}
										]
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "DataSourceQuerier.findOne",
								"id": 823
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/dataAccessLayer.ts",
							"line": 134,
							"character": 21
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "DataSourceQuerier.findOne",
						"id": 822
					}
				},
				{
					"id": 508,
					"name": "has",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 509,
							"name": "has",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Check if this instance has listeners for the provided event. Alias for `hasEvent`",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 510,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the event to check"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.has"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 89,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "SequentialEvent.has"
					}
				},
				{
					"id": 511,
					"name": "hasEvent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 512,
							"name": "hasEvent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Check if this instance has listeners for the provided event",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 513,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the event to check"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.hasEvent"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 96,
							"character": 12
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "SequentialEvent.hasEvent"
					}
				},
				{
					"id": 437,
					"name": "insertMany",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 438,
							"name": "insertMany",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Insert the provided entities in the desired collection",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 439,
									"name": "collectionName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the collection to insert entities into"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 440,
									"name": "entities",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Array of objects containing the properties of the entities to insert\n"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "IRawEntityAttributes",
											"id": 992
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "unknown",
											"name": "TEntity"
										}
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "DataSourceQuerier.insertMany",
								"id": 819
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/dataAccessLayer.ts",
							"line": 108,
							"character": 24
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "DataSourceQuerier.insertMany",
						"id": 818
					}
				},
				{
					"id": 433,
					"name": "insertOne",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 434,
							"name": "insertOne",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Insert the provided entity in the desired collection",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 435,
									"name": "collectionName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the collection to insert the entity into"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 436,
									"name": "entity",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Object containing the properties of the entity to insert\n"
									},
									"type": {
										"type": "reference",
										"name": "IRawEntityAttributes",
										"id": 992
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "unknown",
												"name": "TEntity"
											}
										]
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "DataSourceQuerier.insertOne",
								"id": 815
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/dataAccessLayer.ts",
							"line": 84,
							"character": 23
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "DataSourceQuerier.insertOne",
						"id": 814
					}
				},
				{
					"id": 488,
					"name": "off",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 489,
							"name": "off",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Remove one, many or all event handlers on some events.",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 490,
									"name": "events",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "String containing event names to unbind. You may indicate several events at once by separating with *spaces*"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 491,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "Function or array of functions to unbind on specified events"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IEventHandler"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IEventHandler"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.off"
							}
						},
						{
							"id": 492,
							"name": "off",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Remove event handlers on several events at once.",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 493,
									"name": "events",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Object with keys as event names containing a handler or an array of handlers to remove."
									},
									"type": {
										"type": "reference",
										"name": "IEventHash"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.off"
							}
						},
						{
							"id": 494,
							"name": "off",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Remove all events handlers",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 495,
									"name": "all",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Pass true to delete all handlers"
									},
									"type": {
										"type": "intrinsic",
										"name": "true"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.off"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 38,
							"character": 7
						},
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 45,
							"character": 7
						},
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 52,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "SequentialEvent.off"
					}
				},
				{
					"id": 496,
					"name": "on",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 497,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add one or many event handlers.",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 498,
									"name": "events",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "String containing event names to bind. You may indicate several events at once by separating with *spaces*"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 499,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Function or array of functions to bind on specified events"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IEventHandler"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IEventHandler"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.on"
							}
						},
						{
							"id": 500,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add event handlers on several events at once.",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 501,
									"name": "events",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Object with keys as event names containing a handler or an array of handlers to add."
									},
									"type": {
										"type": "reference",
										"name": "IEventHash"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.on"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 60,
							"character": 6
						},
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 67,
							"character": 6
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "SequentialEvent.on"
					}
				},
				{
					"id": 502,
					"name": "once",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 503,
							"name": "once",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add one or many event handlers. These listeners will be executed once, then are removed",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 504,
									"name": "events",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "String containing event names to bind. You may indicate several events at once by separating with *spaces*"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 505,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Function or array of functions to bind on specified events"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IEventHandler"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IEventHandler"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.once"
							}
						},
						{
							"id": 506,
							"name": "once",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add event handlers on several events at once. These listeners will be executed once, then are removed",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 507,
									"name": "events",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Object with keys as event names containing a handler or an array of handlers to add."
									},
									"type": {
										"type": "reference",
										"name": "IEventHash"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.once"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 75,
							"character": 8
						},
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 82,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "SequentialEvent.once"
					}
				},
				{
					"id": 480,
					"name": "transmitEvent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"signatures": [
						{
							"id": 481,
							"name": "transmitEvent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Propagate the provided events from the adapter to the data access layer",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 482,
									"name": "eventNames",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the events to propagate\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/dataAccessLayer.ts",
							"line": 333,
							"character": 24
						}
					]
				},
				{
					"id": 457,
					"name": "updateMany",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 458,
							"name": "updateMany",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Update entities from the desired collection",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 459,
									"name": "collectionName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the collection to update"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 460,
									"name": "queryFind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Description of the entities to update"
									},
									"type": {
										"type": "reference",
										"name": "QueryLanguage.SelectQueryOrConditionRaw",
										"id": 409
									}
								},
								{
									"id": 461,
									"name": "update",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Properties to modify on the matched entities"
									},
									"type": {
										"type": "reference",
										"name": "IRawEntityAttributes",
										"id": 992
									}
								},
								{
									"id": 462,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Options to apply to the query\n"
									},
									"type": {
										"type": "reference",
										"name": "QueryOptionsRaw",
										"id": 357
									},
									"defaultValue": " {}"
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "unknown",
											"name": "TEntity"
										}
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "DataSourceQuerier.updateMany",
								"id": 839
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/dataAccessLayer.ts",
							"line": 229,
							"character": 24
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "DataSourceQuerier.updateMany",
						"id": 838
					}
				},
				{
					"id": 451,
					"name": "updateOne",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 452,
							"name": "updateOne",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Update a single entity from the desired collection",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 453,
									"name": "collectionName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the collection to update"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 454,
									"name": "queryFind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Description of the entity to update"
									},
									"type": {
										"type": "reference",
										"name": "QueryLanguage.SelectQueryOrConditionRaw",
										"id": 409
									}
								},
								{
									"id": 455,
									"name": "update",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Properties to modify on the matched entity"
									},
									"type": {
										"type": "reference",
										"name": "IRawEntityAttributes",
										"id": 992
									}
								},
								{
									"id": 456,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Options to apply to the query\n"
									},
									"type": {
										"type": "reference",
										"name": "QueryOptionsRaw",
										"id": 357
									},
									"defaultValue": " {}"
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "unknown",
												"name": "TEntity"
											}
										]
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "DataSourceQuerier.updateOne",
								"id": 833
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/dataAccessLayer.ts",
							"line": 196,
							"character": 23
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "DataSourceQuerier.updateOne",
						"id": 832
					}
				},
				{
					"id": 473,
					"name": "waitReady",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 474,
							"name": "waitReady",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Waits for the underlying adapter to be ready.",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin"
									},
									{
										"tag": "see",
										"text": "Adapter.waitReady\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "unknown",
										"name": "this"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "DataSourceQuerier.waitReady",
								"id": 855
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/dataAccessLayer.ts",
							"line": 305,
							"character": 23
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "DataSourceQuerier.waitReady",
						"id": 854
					}
				},
				{
					"id": 430,
					"name": "retrieveAccessLayer",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 431,
							"name": "retrieveAccessLayer",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get the access layer that wraps the provided adapter. If it does not exists, this method constructs a new instance of {@link DataAccessLayer}",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 432,
									"name": "adapter",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Adapter to get access layer from.\n"
									},
									"type": {
										"type": "reference",
										"name": "Adapter",
										"id": 871
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "DataAccessLayer",
								"id": 410,
								"typeArguments": [
									{
										"type": "reference",
										"name": "AdapterEntity",
										"id": 1197
									},
									{
										"type": "reference",
										"name": "Adapter",
										"id": 871,
										"typeArguments": [
											{
												"type": "reference",
												"name": "AdapterEntity",
												"id": 1197
											}
										]
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/dataAccessLayer.ts",
							"line": 65,
							"character": 34
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						426
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						483,
						427,
						425
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						413,
						423,
						419,
						421,
						415,
						417
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						475,
						468,
						463,
						484,
						446,
						441,
						508,
						511,
						437,
						433,
						488,
						496,
						502,
						480,
						457,
						451,
						473,
						430
					]
				}
			],
			"sources": [
				{
					"fileName": "adapters/dataAccessLayer.ts",
					"line": 16,
					"character": 28
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "SequentialEvent"
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "DataSourceQuerier",
					"id": 812,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "TEntity",
							"constraint": {
								"type": "reference",
								"name": "AdapterEntity",
								"id": 1197
							}
						}
					]
				}
			]
		},
		{
			"id": 550,
			"name": "DefaultTransformer",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "The Validator class is used to check an entity or its fields against a model description."
			},
			"children": [
				{
					"id": 562,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"comment": {
						"shortText": "Construct a Validator configured for the provided model."
					},
					"signatures": [
						{
							"id": 567,
							"name": "new DefaultTransformer",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "Construct a Validator configured for the provided model."
							},
							"parameters": [
								{
									"id": 568,
									"name": "_modelAttributes",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 569,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"indexSignature": {
												"id": 570,
												"name": "__index",
												"kind": 8192,
												"kindString": "Index signature",
												"flags": {},
												"parameters": [
													{
														"id": 571,
														"name": "key",
														"kind": 32768,
														"kindString": "Parameter",
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"type": {
													"type": "reference",
													"name": "FieldDescriptor",
													"id": 115
												}
											},
											"sources": [
												{
													"fileName": "entityTransformers/entityTransformer.ts",
													"line": 17,
													"character": 38
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "DefaultTransformer",
								"id": 550
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "EntityTransformer.__constructor",
								"id": 138
							}
						}
					],
					"sources": [
						{
							"fileName": "entityTransformers/entityTransformer.ts",
							"line": 10,
							"character": 41
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "EntityTransformer.__constructor",
						"id": 138
					}
				},
				{
					"id": 563,
					"name": "_modelAttributes",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isConstructorProperty": true,
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "entityTransformers/entityTransformer.ts",
							"line": 17,
							"character": 37
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 564,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"indexSignature": {
								"id": 565,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 566,
										"name": "key",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "reference",
									"name": "FieldDescriptor",
									"id": 115
								}
							},
							"sources": [
								{
									"fileName": "entityTransformers/entityTransformer.ts",
									"line": 17,
									"character": 38
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "EntityTransformer._modelAttributes",
						"id": 139
					}
				},
				{
					"id": 572,
					"name": "modelAttributes",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"comment": {
						"shortText": "Get the model description provided in constructor."
					},
					"getSignature": {
						"id": 573,
						"name": "__get",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"comment": {
							"shortText": "Get the model description provided in constructor."
						},
						"type": {
							"type": "intrinsic",
							"name": "object"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "EntityTransformer.modelAttributes",
							"id": 158
						}
					},
					"sources": [
						{
							"fileName": "entityTransformers/entityTransformer.ts",
							"line": 46,
							"character": 27
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "EntityTransformer.modelAttributes",
						"id": 158
					}
				},
				{
					"id": 574,
					"name": "PathStack",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"comment": {
						"shortText": "Get the PathStack constructor."
					},
					"getSignature": {
						"id": 575,
						"name": "__get",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"comment": {
							"shortText": "Get the PathStack constructor."
						},
						"type": {
							"type": "reference",
							"name": "PathStack",
							"id": 116
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "EntityTransformer.PathStack",
							"id": 160
						}
					},
					"sources": [
						{
							"fileName": "entityTransformers/entityTransformer.ts",
							"line": 53,
							"character": 28
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "EntityTransformer.PathStack",
						"id": 160
					}
				},
				{
					"id": 551,
					"name": "apply",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 552,
							"name": "apply",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Set default values if required.",
								"returns": "Entity merged with default values.\n",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 553,
									"name": "entity",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Entity to set defaults in."
									},
									"type": {
										"type": "reference",
										"name": "IRawEntityAttributes",
										"id": 992
									}
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reflection",
										"declaration": {
											"id": 554,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {}
										}
									},
									{
										"type": "reference",
										"name": "IRawEntityAttributes",
										"id": 992
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"name": "EntityTransformer.apply",
								"id": 148
							}
						}
					],
					"sources": [
						{
							"fileName": "entityTransformers/defaultTransformer.ts",
							"line": 21,
							"character": 13
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "EntityTransformer.apply",
						"id": 148
					}
				},
				{
					"id": 555,
					"name": "applyField",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 556,
							"name": "applyField",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Set the default on a single field according to its description.",
								"returns": "Defaulted value.\n",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 557,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Value to default."
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 558,
									"name": "keys",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "PathStack",
												"id": 116
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								},
								{
									"id": 559,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 560,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 561,
													"name": "getProps",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "entityTransformers/defaultTransformer.ts",
															"line": 49,
															"character": 21
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														561
													]
												}
											],
											"sources": [
												{
													"fileName": "entityTransformers/defaultTransformer.ts",
													"line": 49,
													"character": 10
												}
											]
										}
									},
									"defaultValue": " { getProps: false }"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"overwrites": {
								"type": "reference",
								"name": "EntityTransformer.applyField",
								"id": 151
							}
						}
					],
					"sources": [
						{
							"fileName": "entityTransformers/defaultTransformer.ts",
							"line": 46,
							"character": 18
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "EntityTransformer.applyField",
						"id": 151
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						562
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						563
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						572,
						574
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						551,
						555
					]
				}
			],
			"sources": [
				{
					"fileName": "entityTransformers/defaultTransformer.ts",
					"line": 12,
					"character": 31
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "EntityTransformer",
					"id": 137
				}
			]
		},
		{
			"id": 2298,
			"name": "DiasporaStatic",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Diaspora main namespace",
				"tags": [
					{
						"tag": "author",
						"text": "gerkin\n"
					}
				]
			},
			"children": [
				{
					"id": 2311,
					"name": "_dataSources",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Hash containing all available data sources.",
						"tags": [
							{
								"tag": "author",
								"text": "gerkin"
							},
							{
								"tag": "see",
								"text": "Use {@link Diaspora.createNamedDataSource} or {@link Diaspora.registerDataSource} to make data sources available for models.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "diaspora.ts",
							"line": 78,
							"character": 30
						}
					],
					"type": {
						"type": "reference",
						"name": "IDataSourceRegistry",
						"id": 515
					},
					"defaultValue": " dataSourceRegistry"
				},
				{
					"id": 2312,
					"name": "_models",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Hash containing all available models.",
						"tags": [
							{
								"tag": "author",
								"text": "gerkin"
							},
							{
								"tag": "see",
								"text": "Use {@link Diaspora.declareModel} to add models.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "diaspora.ts",
							"line": 86,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"name": "IModelRegistry",
						"id": 518
					},
					"defaultValue": " modelRegistry"
				},
				{
					"id": 2310,
					"name": "adapters",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Hash containing all available adapters. The only universal adapter is `inMemory`.",
						"tags": [
							{
								"tag": "author",
								"text": "gerkin"
							},
							{
								"tag": "see",
								"text": "Use {@link Diaspora.registerAdapter} to add adapters.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "diaspora.ts",
							"line": 70,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"name": "IAdapterRegistry",
						"id": 2295
					}
				},
				{
					"id": 2301,
					"name": "_instance",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isPrivate": true,
						"isExported": true
					},
					"sources": [
						{
							"fileName": "diaspora.ts",
							"line": 34,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"name": "DiasporaStatic",
						"id": 2298
					}
				},
				{
					"id": 2306,
					"name": "dataSources",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"comment": {
						"shortText": "Returns a copy of available data sources. Data sources are adapters already instanciated & registered in Diaspora.",
						"tags": [
							{
								"tag": "author",
								"text": "gerkin\n"
							}
						]
					},
					"getSignature": {
						"id": 2307,
						"name": "__get",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"comment": {
							"shortText": "Returns a copy of available data sources. Data sources are adapters already instanciated & registered in Diaspora.",
							"tags": [
								{
									"tag": "author",
									"text": "gerkin\n"
								}
							]
						},
						"type": {
							"type": "reference",
							"name": "IDataSourceRegistry",
							"id": 515
						}
					},
					"sources": [
						{
							"fileName": "diaspora.ts",
							"line": 56,
							"character": 23
						}
					]
				},
				{
					"id": 2304,
					"name": "logger",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"comment": {
						"shortText": "Logger used by Diaspora and its adapters.",
						"tags": [
							{
								"tag": "author",
								"text": "gerkin\n"
							}
						]
					},
					"getSignature": {
						"id": 2305,
						"name": "__get",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"comment": {
							"shortText": "Logger used by Diaspora and its adapters.",
							"tags": [
								{
									"tag": "author",
									"text": "gerkin\n"
								}
							]
						},
						"type": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"name": "BrowserLogger",
									"id": 713
								},
								{
									"type": "reference",
									"name": "NodeLogger",
									"id": 732
								}
							]
						}
					},
					"sources": [
						{
							"fileName": "diaspora.ts",
							"line": 47,
							"character": 18
						}
					]
				},
				{
					"id": 2308,
					"name": "models",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"getSignature": {
						"id": 2309,
						"name": "__get",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"type": {
							"type": "reference",
							"name": "IModelRegistry",
							"id": 518
						}
					},
					"sources": [
						{
							"fileName": "diaspora.ts",
							"line": 60,
							"character": 18
						}
					]
				},
				{
					"id": 2299,
					"name": "instance",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"getSignature": {
						"id": 2300,
						"name": "__get",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"type": {
							"type": "reference",
							"name": "DiasporaStatic",
							"id": 2298
						}
					},
					"sources": [
						{
							"fileName": "diaspora.ts",
							"line": 26,
							"character": 27
						}
					]
				},
				{
					"id": 2317,
					"name": "createDataSource",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 2318,
							"name": "createDataSource",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Create a data source (usually, a database connection) that may be used by models.",
								"returns": "New adapter spawned.\n",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin"
									},
									{
										"tag": "throws",
										"text": "{Error} Thrown if provided `adapter` label does not correspond to any adapter registered."
									}
								]
							},
							"parameters": [
								{
									"id": 2319,
									"name": "adapterLabel",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Label of the adapter used to create the data source."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2320,
									"name": "sourceName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 2321,
									"name": "config",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"comment": {
										"text": "Adapter specific configuration. Check your adapter's doc"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "DataAccessLayer",
								"id": 410,
								"typeArguments": [
									{
										"type": "reference",
										"name": "AdapterEntity",
										"id": 1197
									},
									{
										"type": "reference",
										"name": "Adapter",
										"id": 871,
										"typeArguments": [
											{
												"type": "reference",
												"name": "AdapterEntity",
												"id": 1197
											}
										]
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "diaspora.ts",
							"line": 115,
							"character": 24
						}
					]
				},
				{
					"id": 2322,
					"name": "createNamedDataSource",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 2323,
							"name": "createNamedDataSource",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Create a data source (usually, a database connection) that may be used by models.",
								"returns": "New adapter spawned.\n",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin"
									},
									{
										"tag": "throws",
										"text": "{Error} Thrown if provided `adapter` label does not correspond to any adapter registered."
									}
								]
							},
							"parameters": [
								{
									"id": 2324,
									"name": "sourceName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name associated with this datasource."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2325,
									"name": "adapterLabel",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Label of the adapter used to create the data source."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2326,
									"name": "otherConfig",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "DataAccessLayer",
								"id": 410,
								"typeArguments": [
									{
										"type": "reference",
										"name": "AdapterEntity",
										"id": 1197
									},
									{
										"type": "reference",
										"name": "Adapter",
										"id": 871,
										"typeArguments": [
											{
												"type": "reference",
												"name": "AdapterEntity",
												"id": 1197
											}
										]
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "diaspora.ts",
							"line": 155,
							"character": 29
						}
					]
				},
				{
					"id": 2327,
					"name": "declareModel",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 2328,
							"name": "declareModel",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Create a new Model with provided description.",
								"returns": "Model created.\n",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin"
									},
									{
										"tag": "throws",
										"text": "{Error} Thrown if parameters are incorrect."
									}
								]
							},
							"parameters": [
								{
									"id": 2329,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name associated with this datasource."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2330,
									"name": "modelDesc",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Description of the model to define."
									},
									"type": {
										"type": "reference",
										"name": "ModelDescriptionRaw",
										"id": 31
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Model",
								"id": 576
							}
						}
					],
					"sources": [
						{
							"fileName": "diaspora.ts",
							"line": 182,
							"character": 20
						}
					]
				},
				{
					"id": 2331,
					"name": "registerAdapter",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 2332,
							"name": "registerAdapter",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Register a new adapter and make it available to use by models.",
								"returns": "This function does not return anything.\n",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin"
									},
									{
										"tag": "throws",
										"text": "{Error} Thrown if an adapter already exists with same label."
									},
									{
										"tag": "throws",
										"text": "{TypeError} Thrown if adapter does not extends {@link Adapters.DiasporaAdapter}."
									}
								]
							},
							"parameters": [
								{
									"id": 2333,
									"name": "label",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Label of the adapter to register."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2334,
									"name": "adapter",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The adapter to register."
									},
									"type": {
										"type": "reference",
										"name": "IAdapterCtr",
										"id": 865
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "diaspora.ts",
							"line": 204,
							"character": 23
						}
					]
				},
				{
					"id": 2313,
					"name": "requireName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isPrivate": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 2314,
							"name": "requireName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Old useless error handling code. TODO: remove"
							},
							"parameters": [
								{
									"id": 2315,
									"name": "classname",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "garbage"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2316,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "junk\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "diaspora.ts",
							"line": 94,
							"character": 27
						}
					]
				},
				{
					"id": 2302,
					"name": "ERRORS",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isStatic": true,
						"isPrivate": true,
						"isExported": true
					},
					"children": [
						{
							"id": 2303,
							"name": "NON_EMPTY_STR",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "diaspora.ts",
									"line": 37,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "TemplateExecutor"
							},
							"defaultValue": " _.template(\n\t\t\t'<%= c %> <%= p %> must be a non empty string, had \"<%= v %>\"'\n\t\t)"
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								2303
							]
						}
					],
					"sources": [
						{
							"fileName": "diaspora.ts",
							"line": 36,
							"character": 31
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						2311,
						2312,
						2310,
						2301
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						2306,
						2304,
						2308,
						2299
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						2317,
						2322,
						2327,
						2331,
						2313
					]
				},
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						2302
					]
				}
			],
			"sources": [
				{
					"fileName": "diaspora.ts",
					"line": 25,
					"character": 27
				}
			]
		},
		{
			"id": 1022,
			"name": "Entity",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true,
				"isAbstract": true
			},
			"comment": {
				"shortText": "The entity is the class you use to manage a single document in all data sources managed by your model.\n> Note that this class is proxied: you may try to access to undocumented class properties to get entity's data attributes",
				"tags": [
					{
						"tag": "extends",
						"text": "SequentialEvent\n"
					}
				]
			},
			"children": [
				{
					"id": 1040,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"comment": {
						"shortText": "Create a new entity.",
						"tags": [
							{
								"tag": "author",
								"text": "gerkin"
							}
						]
					},
					"signatures": [
						{
							"id": 1044,
							"name": "new Entity",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "Create a new entity.",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 1045,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Name of this model."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1046,
									"name": "modelDesc",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Model configuration that generated the associated `model`."
									},
									"type": {
										"type": "reference",
										"name": "ModelDescription",
										"id": 52
									}
								},
								{
									"id": 1047,
									"name": "model",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Model that will spawn entities."
									},
									"type": {
										"type": "reference",
										"name": "Model",
										"id": 576
									}
								},
								{
									"id": 1048,
									"name": "source",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Hash with properties to copy on the new object.\n       If provided object inherits AdapterEntity, the constructed entity is built in `sync` state.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "AdapterEntity",
												"id": 1197
											},
											{
												"type": "reference",
												"name": "IRawEntityAttributes",
												"id": 992
											}
										]
									},
									"defaultValue": " {}"
								}
							],
							"type": {
								"type": "reference",
								"name": "Entity",
								"id": 1022
							},
							"overwrites": {
								"type": "reference",
								"name": "SequentialEvent.__constructor"
							}
						}
					],
					"sources": [
						{
							"fileName": "entities/entityFactory.ts",
							"line": 108,
							"character": 25
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "SequentialEvent.__constructor"
					}
				},
				{
					"id": 1118,
					"name": "__events",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"comment": {
						"shortText": "Events hash attached to this SequentialEvent instance"
					},
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 16,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"name": "IEventsHash"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SequentialEvent.__events"
					}
				},
				{
					"id": 1035,
					"name": "_attributes",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"sources": [
						{
							"fileName": "entities/entityFactory.ts",
							"line": 100,
							"character": 20
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "IRawEntityAttributes",
								"id": 992
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"defaultValue": " null"
				},
				{
					"id": 1038,
					"name": "_dataSources",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"sources": [
						{
							"fileName": "entities/entityFactory.ts",
							"line": 106,
							"character": 30
						}
					],
					"type": {
						"type": "reference",
						"name": "IDataSourceMap",
						"id": 1005,
						"typeArguments": [
							{
								"type": "reference",
								"name": "AdapterEntity",
								"id": 1197
							}
						]
					}
				},
				{
					"id": 1037,
					"name": "_lastDataSource",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"sources": [
						{
							"fileName": "entities/entityFactory.ts",
							"line": 104,
							"character": 24
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "DataAccessLayer",
								"id": 410
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					}
				},
				{
					"id": 1036,
					"name": "_state",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"sources": [
						{
							"fileName": "entities/entityFactory.ts",
							"line": 102,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"name": "EEntityState",
						"id": 995
					},
					"defaultValue": " EEntityState.ORPHAN"
				},
				{
					"id": 1039,
					"name": "idHash",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"sources": [
						{
							"fileName": "entities/entityFactory.ts",
							"line": 108,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"name": "IIdHash",
						"id": 1173
					}
				},
				{
					"id": 1043,
					"name": "model",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isConstructorProperty": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Model that will spawn entities."
					},
					"sources": [
						{
							"fileName": "entities/entityFactory.ts",
							"line": 123,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"name": "Model",
						"id": 576
					}
				},
				{
					"id": 1042,
					"name": "modelDesc",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isConstructorProperty": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Model configuration that generated the associated `model`."
					},
					"sources": [
						{
							"fileName": "entities/entityFactory.ts",
							"line": 122,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"name": "ModelDescription",
						"id": 52
					}
				},
				{
					"id": 1041,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isConstructorProperty": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Name of this model."
					},
					"sources": [
						{
							"fileName": "entities/entityFactory.ts",
							"line": 121,
							"character": 23
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1023,
					"name": "attributes",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"getSignature": {
						"id": 1024,
						"name": "__get",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"type": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "null"
								},
								{
									"type": "reference",
									"name": "IRawEntityAttributes",
									"id": 992
								}
							]
						}
					},
					"sources": [
						{
							"fileName": "entities/entityFactory.ts",
							"line": 76,
							"character": 22
						}
					]
				},
				{
					"id": 1031,
					"name": "ctor",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"getSignature": {
						"id": 1032,
						"name": "__get",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"type": {
							"type": "intersection",
							"types": [
								{
									"type": "reference",
									"name": "Entity",
									"id": 1022
								},
								{
									"type": "reference",
									"name": "EntitySpawner",
									"id": 999
								}
							]
						}
					},
					"sources": [
						{
							"fileName": "entities/entityFactory.ts",
							"line": 92,
							"character": 16
						}
					]
				},
				{
					"id": 1029,
					"name": "dataSources",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"getSignature": {
						"id": 1030,
						"name": "__get",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"type": {
							"type": "reference",
							"name": "IDataSourceMap",
							"id": 1005,
							"typeArguments": [
								{
									"type": "reference",
									"name": "AdapterEntity",
									"id": 1197
								}
							]
						}
					},
					"sources": [
						{
							"fileName": "entities/entityFactory.ts",
							"line": 88,
							"character": 23
						}
					]
				},
				{
					"id": 1033,
					"name": "id",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"getSignature": {
						"id": 1034,
						"name": "__get",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"type": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "null"
								},
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "intrinsic",
									"name": "number"
								}
							]
						}
					},
					"sources": [
						{
							"fileName": "entities/entityFactory.ts",
							"line": 96,
							"character": 14
						}
					]
				},
				{
					"id": 1027,
					"name": "lastDataSource",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"getSignature": {
						"id": 1028,
						"name": "__get",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"type": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "null"
								},
								{
									"type": "reference",
									"name": "DataAccessLayer",
									"id": 410,
									"typeArguments": [
										{
											"type": "reference",
											"name": "AdapterEntity",
											"id": 1197
										},
										{
											"type": "reference",
											"name": "Adapter",
											"id": 871,
											"typeArguments": [
												{
													"type": "reference",
													"name": "AdapterEntity",
													"id": 1197
												}
											]
										}
									]
								}
							]
						}
					},
					"sources": [
						{
							"fileName": "entities/entityFactory.ts",
							"line": 84,
							"character": 26
						}
					]
				},
				{
					"id": 1025,
					"name": "state",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"getSignature": {
						"id": 1026,
						"name": "__get",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"type": {
							"type": "reference",
							"name": "EEntityState",
							"id": 995
						}
					},
					"sources": [
						{
							"fileName": "entities/entityFactory.ts",
							"line": 80,
							"character": 17
						}
					]
				},
				{
					"id": 1049,
					"name": "applyDefaults",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 1050,
							"name": "applyDefaults",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reflection",
										"declaration": {
											"id": 1051,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {}
										}
									},
									{
										"type": "reference",
										"name": "IRawEntityAttributes",
										"id": 992
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "entities/entityFactory.ts",
							"line": 172,
							"character": 21
						}
					]
				},
				{
					"id": 1061,
					"name": "collectionName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 1062,
							"name": "collectionName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return the collectionName of this entity in the specified data source.",
								"returns": "Name of the collectionName.\n",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 1063,
									"name": "dataSource",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "TDataSource",
										"id": 514
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "entities/entityFactory.ts",
							"line": 227,
							"character": 22
						}
					]
				},
				{
					"id": 1094,
					"name": "deserialize",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"signatures": [
						{
							"id": 1095,
							"name": "deserialize",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Deserialize an entity",
								"text": "TODO: a real description\n"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"name": "IRawEntityAttributes",
										"id": 992
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "entities/entityFactory.ts",
							"line": 452,
							"character": 22
						}
					]
				},
				{
					"id": 1079,
					"name": "destroy",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 1080,
							"name": "destroy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Delete this entity from the specified data source.",
								"returns": "Promise resolved once entity is destroyed. Resolved with `this`.\n",
								"tags": [
									{
										"tag": "fires",
										"text": "Entity#beforeDelete"
									},
									{
										"tag": "fires",
										"text": "Entity#afterDelete"
									},
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 1081,
									"name": "dataSource",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "TDataSource",
										"id": 514
									}
								},
								{
									"id": 1082,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hash of options for this query. You should not use this parameter yourself: Diaspora uses it internally."
									},
									"type": {
										"type": "reference",
										"name": "IOptions",
										"id": 990
									},
									"defaultValue": " {}"
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "entities/entityFactory.ts",
							"line": 357,
							"character": 21
						}
					]
				},
				{
					"id": 1119,
					"name": "emit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1120,
							"name": "emit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Triggers each corresponding handlers in sequence.",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1121,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the event to trigger"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1122,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"comment": {
										"text": "Arguments to pass to each handler. Note that those arguments will be appended with previous handler resolution value, if any."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.emit"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 30,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "SequentialEvent.emit"
					}
				},
				{
					"id": 1101,
					"name": "execIfOkState",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 1102,
							"name": "execIfOkState",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Runs the provided query if the entity is not in {@link EEntityState.ORPHAN} mode.",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin"
									}
								]
							},
							"typeParameter": [
								{
									"id": 1103,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "AdapterEntity",
										"id": 1197
									}
								}
							],
							"parameters": [
								{
									"id": 1104,
									"name": "beforeState",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The last stable state of the entity (before the current operation)"
									},
									"type": {
										"type": "reference",
										"name": "EEntityState",
										"id": 995
									}
								},
								{
									"id": 1105,
									"name": "dataSource",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "-"
									},
									"type": {
										"type": "reference",
										"name": "DataAccessLayer",
										"id": 410
									}
								},
								{
									"id": 1106,
									"name": "method",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "-\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "T",
										"constraint": {
											"type": "reference",
											"name": "AdapterEntity",
											"id": 1197
										}
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "entities/entityFactory.ts",
							"line": 490,
							"character": 22
						}
					]
				},
				{
					"id": 1075,
					"name": "fetch",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 1076,
							"name": "fetch",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Reload this entity from specified data source.",
								"returns": "Promise resolved once entity is reloaded. Resolved with `this`.\n",
								"tags": [
									{
										"tag": "fires",
										"text": "Entity#beforeFind"
									},
									{
										"tag": "fires",
										"text": "Entity#afterFind"
									},
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 1077,
									"name": "dataSource",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "TDataSource",
										"id": 514
									}
								},
								{
									"id": 1078,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hash of options for this query. You should not use this parameter yourself: Diaspora uses it internally."
									},
									"type": {
										"type": "reference",
										"name": "IOptions",
										"id": 990
									},
									"defaultValue": " {}"
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "entities/entityFactory.ts",
							"line": 324,
							"character": 19
						}
					]
				},
				{
					"id": 1089,
					"name": "getDataSource",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"signatures": [
						{
							"id": 1090,
							"name": "getDataSource",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get the data access layer object that matches with the input type.",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 1091,
									"name": "dataSource",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "String, Adapter or DataAccessLayer to get in the DataAccessLayer form\n"
									},
									"type": {
										"type": "reference",
										"name": "TDataSource",
										"id": 514
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "DataAccessLayer",
								"id": 410,
								"typeArguments": [
									{
										"type": "reference",
										"name": "AdapterEntity",
										"id": 1197
									},
									{
										"type": "reference",
										"name": "Adapter",
										"id": 871,
										"typeArguments": [
											{
												"type": "reference",
												"name": "AdapterEntity",
												"id": 1197
											}
										]
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "entities/entityFactory.ts",
							"line": 434,
							"character": 24
						}
					]
				},
				{
					"id": 1086,
					"name": "getDiff",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 1087,
							"name": "getDiff",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generate a diff update query by checking deltas with last source interaction.",
								"returns": "Diff query.\n",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 1088,
									"name": "dataSource",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "Data source to diff with."
									},
									"type": {
										"type": "reference",
										"name": "TDataSource",
										"id": 514
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "IRawEntityAttributes",
										"id": 992
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "entities/entityFactory.ts",
							"line": 400,
							"character": 15
						}
					]
				},
				{
					"id": 1083,
					"name": "getId",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 1084,
							"name": "getId",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get the ID for the given source name. This ID is retrieved from the Data Store entity, not the latest ID hash of the entity itself",
								"returns": "Id of this entity in requested data source.\n"
							},
							"parameters": [
								{
									"id": 1085,
									"name": "dataSource",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "TDataSource",
										"id": 514
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "EntityUid",
										"id": 1157
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "entities/entityFactory.ts",
							"line": 383,
							"character": 13
						}
					]
				},
				{
					"id": 1143,
					"name": "has",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1144,
							"name": "has",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Check if this instance has listeners for the provided event. Alias for `hasEvent`",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1145,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the event to check"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.has"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 89,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "SequentialEvent.has"
					}
				},
				{
					"id": 1146,
					"name": "hasEvent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1147,
							"name": "hasEvent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Check if this instance has listeners for the provided event",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1148,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the event to check"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.hasEvent"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 96,
							"character": 12
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "SequentialEvent.hasEvent"
					}
				},
				{
					"id": 1096,
					"name": "maybeEmit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 1097,
							"name": "maybeEmit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Conditionaly triggers the provided events names with provided arguments if the options requires it.",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 1098,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Options of the current entity operation"
									},
									"type": {
										"type": "reference",
										"name": "IOptions",
										"id": 990
									}
								},
								{
									"id": 1099,
									"name": "eventsArgs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Arguments to transmit by the events"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								},
								{
									"id": 1100,
									"name": "events",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Event name(s) to trigger\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "this"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "entities/entityFactory.ts",
							"line": 464,
							"character": 24
						}
					]
				},
				{
					"id": 1123,
					"name": "off",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1124,
							"name": "off",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Remove one, many or all event handlers on some events.",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1125,
									"name": "events",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "String containing event names to unbind. You may indicate several events at once by separating with *spaces*"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1126,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "Function or array of functions to unbind on specified events"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IEventHandler"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IEventHandler"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.off"
							}
						},
						{
							"id": 1127,
							"name": "off",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Remove event handlers on several events at once.",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1128,
									"name": "events",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Object with keys as event names containing a handler or an array of handlers to remove."
									},
									"type": {
										"type": "reference",
										"name": "IEventHash"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.off"
							}
						},
						{
							"id": 1129,
							"name": "off",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Remove all events handlers",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1130,
									"name": "all",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Pass true to delete all handlers"
									},
									"type": {
										"type": "intrinsic",
										"name": "true"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.off"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 38,
							"character": 7
						},
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 45,
							"character": 7
						},
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 52,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "SequentialEvent.off"
					}
				},
				{
					"id": 1131,
					"name": "on",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1132,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add one or many event handlers.",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1133,
									"name": "events",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "String containing event names to bind. You may indicate several events at once by separating with *spaces*"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1134,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Function or array of functions to bind on specified events"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IEventHandler"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IEventHandler"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.on"
							}
						},
						{
							"id": 1135,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add event handlers on several events at once.",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1136,
									"name": "events",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Object with keys as event names containing a handler or an array of handlers to add."
									},
									"type": {
										"type": "reference",
										"name": "IEventHash"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.on"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 60,
							"character": 6
						},
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 67,
							"character": 6
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "SequentialEvent.on"
					}
				},
				{
					"id": 1137,
					"name": "once",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1138,
							"name": "once",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add one or many event handlers. These listeners will be executed once, then are removed",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1139,
									"name": "events",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "String containing event names to bind. You may indicate several events at once by separating with *spaces*"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1140,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Function or array of functions to bind on specified events"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IEventHandler"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IEventHandler"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.once"
							}
						},
						{
							"id": 1141,
							"name": "once",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add event handlers on several events at once. These listeners will be executed once, then are removed",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1142,
									"name": "events",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Object with keys as event names containing a handler or an array of handlers to add."
									},
									"type": {
										"type": "reference",
										"name": "IEventHash"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.once"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 75,
							"character": 8
						},
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 82,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "SequentialEvent.once"
					}
				},
				{
					"id": 1071,
					"name": "persist",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 1072,
							"name": "persist",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Save this entity in specified data source.",
								"returns": "Promise resolved once entity is saved. Resolved with `this`.\n",
								"tags": [
									{
										"tag": "fires",
										"text": "Entity#beforeUpdate"
									},
									{
										"tag": "fires",
										"text": "Entity#afterUpdate"
									},
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 1073,
									"name": "dataSource",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "TDataSource",
										"id": 514
									}
								},
								{
									"id": 1074,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hash of options for this query. You should not use this parameter yourself: Diaspora uses it internally."
									},
									"type": {
										"type": "reference",
										"name": "IOptions",
										"id": 990
									},
									"defaultValue": " {}"
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "entities/entityFactory.ts",
							"line": 280,
							"character": 21
						}
					]
				},
				{
					"id": 1111,
					"name": "persistCreate",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 1112,
							"name": "persistCreate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Persist the entity in the data source by performing an `insertOne` action",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 1113,
									"name": "dataSource",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Data source to persist entity into\n"
									},
									"type": {
										"type": "reference",
										"name": "DataAccessLayer",
										"id": 410
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"name": "AdapterEntity",
												"id": 1197
											}
										]
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "entities/entityFactory.ts",
							"line": 559,
							"character": 28
						}
					]
				},
				{
					"id": 1114,
					"name": "persistUpdate",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 1115,
							"name": "persistUpdate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Persist the entity in the data source by performing an `updateOne` action",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 1116,
									"name": "dataSource",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Data source to persist entity into"
									},
									"type": {
										"type": "reference",
										"name": "DataAccessLayer",
										"id": 410
									}
								},
								{
									"id": 1117,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "Optional options hash for the `update` operation\n"
									},
									"type": {
										"type": "reference",
										"name": "IOptions",
										"id": 990
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"name": "AdapterEntity",
												"id": 1197
											}
										]
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "entities/entityFactory.ts",
							"line": 575,
							"character": 28
						}
					]
				},
				{
					"id": 1066,
					"name": "replaceAttributes",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 1067,
							"name": "replaceAttributes",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Remove all editable properties & replace them with provided object.",
								"returns": "Returns `this`.\n",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 1068,
									"name": "newContent",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Replacement content."
									},
									"type": {
										"type": "reference",
										"name": "IRawEntityAttributes",
										"id": 992
									},
									"defaultValue": " {}"
								}
							],
							"type": {
								"type": "unknown",
								"name": "this"
							}
						}
					],
					"sources": [
						{
							"fileName": "entities/entityFactory.ts",
							"line": 254,
							"character": 25
						}
					]
				},
				{
					"id": 1092,
					"name": "serialize",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"signatures": [
						{
							"id": 1093,
							"name": "serialize",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Serialize an entity",
								"text": "TODO: a real description\n"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"name": "IRawEntityAttributes",
										"id": 992
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "entities/entityFactory.ts",
							"line": 443,
							"character": 20
						}
					]
				},
				{
					"id": 1107,
					"name": "setLastDataSourceEntity",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 1108,
							"name": "setLastDataSourceEntity",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Refresh last data source, attributes, state & data source entity",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 1109,
									"name": "dataSource",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Data source to set as last used"
									},
									"type": {
										"type": "reference",
										"name": "DataAccessLayer",
										"id": 410
									}
								},
								{
									"id": 1110,
									"name": "dataSourceEntity",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "New entity returned by this data source\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "AdapterEntity",
												"id": 1197
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								}
							],
							"type": {
								"type": "unknown",
								"name": "this"
							}
						}
					],
					"sources": [
						{
							"fileName": "entities/entityFactory.ts",
							"line": 516,
							"character": 32
						}
					]
				},
				{
					"id": 1069,
					"name": "toObject",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 1070,
							"name": "toObject",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a copy of this entity attributes.",
								"returns": "Attributes of this entity.\n",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "null"
									},
									{
										"type": "reference",
										"name": "IRawEntityAttributes",
										"id": 992
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "entities/entityFactory.ts",
							"line": 266,
							"character": 16
						}
					]
				},
				{
					"id": 1058,
					"name": "uidQuery",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 1059,
							"name": "uidQuery",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generate the query to get this unique entity in the desired data source.",
								"returns": "Query to find this entity.\n",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 1060,
									"name": "dataSource",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "Data source to get query for."
									},
									"type": {
										"type": "reference",
										"name": "TDataSource",
										"id": 514
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"sources": [
						{
							"fileName": "entities/entityFactory.ts",
							"line": 213,
							"character": 16
						}
					]
				},
				{
					"id": 1064,
					"name": "validate",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 1065,
							"name": "validate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Check if the entity matches model description.",
								"returns": "This function does not return anything.",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin"
									},
									{
										"tag": "throws",
										"text": "EntityValidationError Thrown if validation failed. This breaks event chain and prevent persistance."
									},
									{
										"tag": "see",
										"text": "Validator.Validator#validate\n"
									}
								]
							},
							"type": {
								"type": "unknown",
								"name": "this"
							}
						}
					],
					"sources": [
						{
							"fileName": "entities/entityFactory.ts",
							"line": 240,
							"character": 16
						}
					]
				},
				{
					"id": 1055,
					"name": "deserialize",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 1056,
							"name": "deserialize",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Applied after retrieving the entity, this function is in charge to convert entity raw attributes to convinient types.",
								"returns": "Object with Primitives & non primitives types.\n",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 1057,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Data to convert from primitive types."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IRawEntityAttributes",
												"id": 992
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "IRawEntityAttributes",
										"id": 992
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "entities/entityFactory.ts",
							"line": 200,
							"character": 26
						}
					]
				},
				{
					"id": 1052,
					"name": "serialize",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 1053,
							"name": "serialize",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Applied before persisting the entity, this function is in charge to convert entity convinient attributes to a raw entity.",
								"returns": "Object with Primitives-only types.\n",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 1054,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Data to convert to primitive types."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IRawEntityAttributes",
												"id": 992
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "IRawEntityAttributes",
										"id": 992
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "entities/entityFactory.ts",
							"line": 187,
							"character": 24
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1040
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1118,
						1035,
						1038,
						1037,
						1036,
						1039,
						1043,
						1042,
						1041
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						1023,
						1031,
						1029,
						1033,
						1027,
						1025
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1049,
						1061,
						1094,
						1079,
						1119,
						1101,
						1075,
						1089,
						1086,
						1083,
						1143,
						1146,
						1096,
						1123,
						1131,
						1137,
						1071,
						1111,
						1114,
						1066,
						1092,
						1107,
						1069,
						1058,
						1064,
						1055,
						1052
					]
				}
			],
			"sources": [
				{
					"fileName": "entities/entityFactory.ts",
					"line": 75,
					"character": 28
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "SequentialEvent"
				}
			]
		},
		{
			"id": 10,
			"name": "EntityStateError",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "This class represents an error related to validation."
			},
			"children": [
				{
					"id": 11,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"comment": {
						"shortText": "Construct a new error related to an invalide state of the entity.",
						"tags": [
							{
								"tag": "author",
								"text": "gerkin"
							}
						]
					},
					"signatures": [
						{
							"id": 12,
							"name": "new EntityStateError",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "Construct a new error related to an invalide state of the entity.",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 13,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 14,
									"name": "errorArgs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"comment": {
										"shortText": "Arguments to transfer to parent Error.\n"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "EntityStateError",
								"id": 10
							},
							"overwrites": {
								"type": "reference",
								"name": "ExtendableError.__constructor",
								"id": 2
							}
						}
					],
					"sources": [
						{
							"fileName": "errors/entityStateError.ts",
							"line": 6,
							"character": 55
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "ExtendableError.__constructor",
						"id": 2
					}
				},
				{
					"id": 16,
					"name": "message",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExported": true
					},
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.es5.d.ts",
							"line": 886,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Error.message"
					}
				},
				{
					"id": 15,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExported": true
					},
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.es5.d.ts",
							"line": 885,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Error.name"
					}
				},
				{
					"id": 17,
					"name": "stack",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.es5.d.ts",
							"line": 887,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"overwrites": {
						"type": "reference",
						"name": "Error.stack"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Error.stack"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						11
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						16,
						15,
						17
					]
				}
			],
			"sources": [
				{
					"fileName": "errors/entityStateError.ts",
					"line": 6,
					"character": 29
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "ExtendableError",
					"id": 1
				}
			]
		},
		{
			"id": 137,
			"name": "EntityTransformer",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true,
				"isAbstract": true
			},
			"comment": {
				"shortText": "The Validator class is used to check an entity or its fields against a model description."
			},
			"children": [
				{
					"id": 138,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"comment": {
						"shortText": "Construct a Validator configured for the provided model."
					},
					"signatures": [
						{
							"id": 143,
							"name": "new EntityTransformer",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "Construct a Validator configured for the provided model."
							},
							"parameters": [
								{
									"id": 144,
									"name": "_modelAttributes",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 145,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"indexSignature": {
												"id": 146,
												"name": "__index",
												"kind": 8192,
												"kindString": "Index signature",
												"flags": {},
												"parameters": [
													{
														"id": 147,
														"name": "key",
														"kind": 32768,
														"kindString": "Parameter",
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"type": {
													"type": "reference",
													"name": "FieldDescriptor",
													"id": 115
												}
											},
											"sources": [
												{
													"fileName": "entityTransformers/entityTransformer.ts",
													"line": 17,
													"character": 38
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "EntityTransformer",
								"id": 137
							}
						}
					],
					"sources": [
						{
							"fileName": "entityTransformers/entityTransformer.ts",
							"line": 10,
							"character": 41
						}
					]
				},
				{
					"id": 139,
					"name": "_modelAttributes",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isConstructorProperty": true,
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "entityTransformers/entityTransformer.ts",
							"line": 17,
							"character": 37
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 140,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"indexSignature": {
								"id": 141,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 142,
										"name": "key",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "reference",
									"name": "FieldDescriptor",
									"id": 115
								}
							},
							"sources": [
								{
									"fileName": "entityTransformers/entityTransformer.ts",
									"line": 17,
									"character": 38
								}
							]
						}
					}
				},
				{
					"id": 158,
					"name": "modelAttributes",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"comment": {
						"shortText": "Get the model description provided in constructor."
					},
					"getSignature": {
						"id": 159,
						"name": "__get",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"comment": {
							"shortText": "Get the model description provided in constructor."
						},
						"type": {
							"type": "intrinsic",
							"name": "object"
						}
					},
					"sources": [
						{
							"fileName": "entityTransformers/entityTransformer.ts",
							"line": 46,
							"character": 27
						}
					]
				},
				{
					"id": 160,
					"name": "PathStack",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"comment": {
						"shortText": "Get the PathStack constructor."
					},
					"getSignature": {
						"id": 161,
						"name": "__get",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"comment": {
							"shortText": "Get the PathStack constructor."
						},
						"type": {
							"type": "reference",
							"name": "PathStack",
							"id": 116
						}
					},
					"sources": [
						{
							"fileName": "entityTransformers/entityTransformer.ts",
							"line": 53,
							"character": 28
						}
					]
				},
				{
					"id": 148,
					"name": "apply",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true,
						"isAbstract": true
					},
					"signatures": [
						{
							"id": 149,
							"name": "apply",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Check if the value matches the field description provided, thus verify if it is valid.",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 150,
									"name": "entity",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IRawEntityAttributes",
										"id": 992
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "IRawEntityAttributes",
								"id": 992
							}
						}
					],
					"sources": [
						{
							"fileName": "entityTransformers/entityTransformer.ts",
							"line": 25,
							"character": 22
						}
					]
				},
				{
					"id": 151,
					"name": "applyField",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true,
						"isAbstract": true
					},
					"signatures": [
						{
							"id": 152,
							"name": "applyField",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Check if the value matches the field description provided, thus verify if it is valid.",
								"returns": "Hash describing errors.\n",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 153,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Value to check."
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 154,
									"name": "keys",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Pathstack representing path to this validation."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "PathStack",
												"id": 116
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								},
								{
									"id": 155,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hash of options."
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 156,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 157,
													"name": "getProps",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "entityTransformers/entityTransformer.ts",
															"line": 40,
															"character": 21
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														157
													]
												}
											],
											"sources": [
												{
													"fileName": "entityTransformers/entityTransformer.ts",
													"line": 40,
													"character": 10
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "entityTransformers/entityTransformer.ts",
							"line": 37,
							"character": 27
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						138
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						139
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						158,
						160
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						148,
						151
					]
				}
			],
			"sources": [
				{
					"fileName": "entityTransformers/entityTransformer.ts",
					"line": 10,
					"character": 39
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"name": "CheckTransformer",
					"id": 198
				},
				{
					"type": "reference",
					"name": "DefaultTransformer",
					"id": 550
				}
			]
		},
		{
			"id": 308,
			"name": "EntityValidationError",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "This class represents an error related to validation on an entity."
			},
			"children": [
				{
					"id": 313,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"comment": {
						"shortText": "Construct a new validation error."
					},
					"signatures": [
						{
							"id": 314,
							"name": "new EntityValidationError",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "Construct a new validation error."
							},
							"parameters": [
								{
									"id": 315,
									"name": "validationErrors",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 316,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"indexSignature": {
												"id": 317,
												"name": "__index",
												"kind": 8192,
												"kindString": "Index signature",
												"flags": {},
												"parameters": [
													{
														"id": 318,
														"name": "key",
														"kind": 32768,
														"kindString": "Parameter",
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"type": {
													"type": "reference",
													"name": "ErrorObjectFinal",
													"id": 172
												}
											},
											"sources": [
												{
													"fileName": "errors/entityValidationError.ts",
													"line": 15,
													"character": 19
												}
											]
										}
									}
								},
								{
									"id": 319,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 320,
									"name": "errorArgs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "EntityValidationError",
								"id": 308
							},
							"overwrites": {
								"type": "reference",
								"name": "ExtendableError.__constructor",
								"id": 2
							}
						}
					],
					"sources": [
						{
							"fileName": "errors/entityValidationError.ts",
							"line": 10,
							"character": 72
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "ExtendableError.__constructor",
						"id": 2
					}
				},
				{
					"id": 309,
					"name": "validationErrors",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"sources": [
						{
							"fileName": "errors/entityValidationError.ts",
							"line": 10,
							"character": 34
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 310,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"indexSignature": {
								"id": 311,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 312,
										"name": "key",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "reference",
									"name": "ErrorObjectFinal",
									"id": 172
								}
							},
							"sources": [
								{
									"fileName": "errors/entityValidationError.ts",
									"line": 10,
									"character": 35
								}
							]
						}
					}
				},
				{
					"id": 327,
					"name": "message",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExported": true
					},
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.es5.d.ts",
							"line": 886,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Error.message"
					}
				},
				{
					"id": 326,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExported": true
					},
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.es5.d.ts",
							"line": 885,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Error.name"
					}
				},
				{
					"id": 328,
					"name": "stack",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.es5.d.ts",
							"line": 887,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"overwrites": {
						"type": "reference",
						"name": "Error.stack"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Error.stack"
					}
				},
				{
					"id": 324,
					"name": "stringifyValidationError",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"signatures": [
						{
							"id": 325,
							"name": "stringifyValidationError",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a readable description of the validation error",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "ValidationError.stringifyValidationError",
								"id": 19
							}
						}
					],
					"sources": [
						{
							"fileName": "errors/entityValidationError.ts",
							"line": 45,
							"character": 35
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "ValidationError.stringifyValidationError",
						"id": 19
					}
				},
				{
					"id": 321,
					"name": "stringifyErrorComponent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isPrivate": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 322,
							"name": "stringifyErrorComponent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generates a string to display a single problem on the validation",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 323,
									"name": "error",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Description of the error\n"
									},
									"type": {
										"type": "reference",
										"name": "ErrorObjectFinal",
										"id": 172
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "errors/entityValidationError.ts",
							"line": 31,
							"character": 39
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						313
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						309,
						327,
						326,
						328
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						324,
						321
					]
				}
			],
			"sources": [
				{
					"fileName": "errors/entityValidationError.ts",
					"line": 9,
					"character": 34
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "ValidationError",
					"id": 18
				}
			]
		},
		{
			"id": 1,
			"name": "ExtendableError",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true,
				"isAbstract": true
			},
			"comment": {
				"shortText": "This class is the base class for custom Diaspora errors",
				"tags": [
					{
						"tag": "extends",
						"text": "Error\n"
					}
				]
			},
			"children": [
				{
					"id": 2,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"comment": {
						"shortText": "Construct a new extendable error.",
						"tags": [
							{
								"tag": "author",
								"text": "gerkin"
							}
						]
					},
					"signatures": [
						{
							"id": 3,
							"name": "new ExtendableError",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "Construct a new extendable error.",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 4,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Message of this error."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 5,
									"name": "errorArgs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"comment": {
										"shortText": "Arguments to transfer to parent Error.\n"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "ExtendableError",
								"id": 1
							}
						}
					],
					"sources": [
						{
							"fileName": "errors/extendableError.ts",
							"line": 6,
							"character": 53
						}
					]
				},
				{
					"id": 9,
					"name": "Error",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExported": true
					},
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.es5.d.ts",
							"line": 896,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"name": "ErrorConstructor"
					}
				},
				{
					"id": 7,
					"name": "message",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExported": true
					},
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.es5.d.ts",
							"line": 886,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Error.message"
					}
				},
				{
					"id": 6,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExported": true
					},
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.es5.d.ts",
							"line": 885,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Error.name"
					}
				},
				{
					"id": 8,
					"name": "stack",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.es5.d.ts",
							"line": 887,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"overwrites": {
						"type": "reference",
						"name": "Error.stack"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Error.stack"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						2
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						9,
						7,
						6,
						8
					]
				}
			],
			"sources": [
				{
					"fileName": "errors/extendableError.ts",
					"line": 6,
					"character": 37
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "Error"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"name": "EntityStateError",
					"id": 10
				},
				{
					"type": "reference",
					"name": "ValidationError",
					"id": 18
				}
			]
		},
		{
			"id": 1359,
			"name": "InMemoryAdapter",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "This class is used to use the memory as a data store. Every data you insert are stored in an array contained by this class. This adapter can be used by both the browser & Node.JS."
			},
			"children": [
				{
					"id": 1361,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"comment": {
						"shortText": "Create a new instance of in memory adapter.",
						"tags": [
							{
								"tag": "author",
								"text": "gerkin\n"
							}
						]
					},
					"signatures": [
						{
							"id": 1362,
							"name": "new InMemoryAdapter",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "Create a new instance of in memory adapter.",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1363,
									"name": "dataSourceName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "InMemoryAdapter",
								"id": 1359
							},
							"overwrites": {
								"type": "reference",
								"name": "Adapter.__constructor",
								"id": 880
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/inMemory/adapter.ts",
							"line": 26,
							"character": 45
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Adapter.__constructor",
						"id": 880
					}
				},
				{
					"id": 1444,
					"name": "__events",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"comment": {
						"shortText": "Events hash attached to this SequentialEvent instance"
					},
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 16,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"name": "IEventsHash"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SequentialEvent.__events"
					}
				},
				{
					"id": 1417,
					"name": "_classEntity",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isConstructorProperty": true,
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 91,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"name": "IAdapterEntityCtr",
						"id": 1181,
						"typeArguments": [
							{
								"type": "reference",
								"name": "InMemoryEntity",
								"id": 1324
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter._classEntity",
						"id": 881
					}
				},
				{
					"id": 1415,
					"name": "error",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Error triggered by adapter initialization.",
						"tags": [
							{
								"tag": "author",
								"text": "Gerkin\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 72,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"name": "Error",
						"id": 9
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter.error",
						"id": 878
					}
				},
				{
					"id": 1412,
					"name": "filters",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"comment": {
						"shortText": "Hash of functions to cast data store values to JSON standard values in entity.",
						"tags": [
							{
								"tag": "author",
								"text": "Gerkin\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 51,
							"character": 18
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter.filters",
						"id": 875
					}
				},
				{
					"id": 1418,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isConstructorProperty": true,
						"isExported": true,
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 92,
							"character": 22
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter.name",
						"id": 882
					}
				},
				{
					"id": 1413,
					"name": "remaps",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"comment": {
						"shortText": "Hash to transform entity fields to data store fields.",
						"tags": [
							{
								"tag": "author",
								"text": "Gerkin\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 58,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter.remaps",
						"id": 876
					}
				},
				{
					"id": 1414,
					"name": "remapsInverted",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"comment": {
						"shortText": "Hash to transform data store fields to entity fields.",
						"tags": [
							{
								"tag": "author",
								"text": "Gerkin\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 65,
							"character": 25
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter.remapsInverted",
						"id": 877
					}
				},
				{
					"id": 1416,
					"name": "state",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"comment": {
						"shortText": "Describe current adapter status.",
						"tags": [
							{
								"tag": "author",
								"text": "Gerkin\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 79,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"name": "EAdapterState",
						"id": 861
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter.state",
						"id": 879
					}
				},
				{
					"id": 1360,
					"name": "store",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Plain old javascript object used as data store.",
						"tags": [
							{
								"tag": "author",
								"text": "Gerkin\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "adapters/inMemory/adapter.ts",
							"line": 26,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"name": "IDataStoreHash",
						"id": 1354
					}
				},
				{
					"id": 1410,
					"name": "classEntity",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"getSignature": {
						"id": 1411,
						"name": "__get",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"type": {
							"type": "reference",
							"name": "IAdapterEntityCtr",
							"id": 1181,
							"typeArguments": [
								{
									"type": "unknown",
									"name": "T"
								}
							]
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "Adapter.classEntity",
							"id": 873
						}
					},
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 42,
							"character": 23
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter.classEntity",
						"id": 873
					}
				},
				{
					"id": 1400,
					"name": "configureCollection",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 1401,
							"name": "configureCollection",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Create the data store and call {@link Adapters.DiasporaAdapter#configureCollection}.",
								"returns": "This function does not return anything.\n",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 1402,
									"name": "tableName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the table (usually, model name)."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1403,
									"name": "remaps",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Associative hash that links entity field names with data source field names."
									},
									"type": {
										"type": "reference",
										"name": "IRemapsHash",
										"id": 806
									}
								},
								{
									"id": 1404,
									"name": "filters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IFiltersHash",
										"id": 809
									}
								}
							],
							"type": {
								"type": "unknown",
								"name": "this"
							},
							"overwrites": {
								"type": "reference",
								"name": "Adapter.configureCollection",
								"id": 954
							},
							"implementationOf": {
								"type": "reference",
								"name": "DataSourceQuerier.configureCollection",
								"id": 857
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/inMemory/adapter.ts",
							"line": 242,
							"character": 27
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Adapter.configureCollection",
						"id": 954
					},
					"implementationOf": {
						"type": "reference",
						"name": "DataSourceQuerier.configureCollection",
						"id": 856
					}
				},
				{
					"id": 1395,
					"name": "deleteMany",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 1396,
							"name": "deleteMany",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Delete several entities from the memory.",
								"returns": "Promise resolved once items are deleted. Called with (*undefined*).\n",
								"tags": [
									{
										"tag": "summary",
										"text": "This reimplements {@link Adapters.DiasporaAdapter#deleteMany}, modified for in-memory interactions."
									},
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 1397,
									"name": "table",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the table to delete data from."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1398,
									"name": "queryFind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hash representing entities to find."
									},
									"type": {
										"type": "reference",
										"name": "SelectQuery",
										"id": 377
									}
								},
								{
									"id": 1399,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hash of options."
									},
									"type": {
										"type": "reference",
										"name": "QueryOptions",
										"id": 352
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"name": "Adapter.deleteMany",
								"id": 949
							},
							"implementationOf": {
								"type": "reference",
								"name": "DataSourceQuerier.deleteMany",
								"id": 850
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/inMemory/adapter.ts",
							"line": 221,
							"character": 24
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Adapter.deleteMany",
						"id": 949
					},
					"implementationOf": {
						"type": "reference",
						"name": "DataSourceQuerier.deleteMany",
						"id": 849
					}
				},
				{
					"id": 1390,
					"name": "deleteOne",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 1391,
							"name": "deleteOne",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Delete a single entity from the memory.",
								"returns": "Promise resolved once item is found. Called with (*undefined*).\n",
								"tags": [
									{
										"tag": "summary",
										"text": "This reimplements {@link Adapters.DiasporaAdapter#deleteOne}, modified for in-memory interactions."
									},
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 1392,
									"name": "table",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the table to delete data from."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1393,
									"name": "queryFind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hash representing the entity to find."
									},
									"type": {
										"type": "reference",
										"name": "SelectQuery",
										"id": 377
									}
								},
								{
									"id": 1394,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hash of options."
									},
									"type": {
										"type": "reference",
										"name": "QueryOptions",
										"id": 352
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"name": "Adapter.deleteOne",
								"id": 944
							},
							"implementationOf": {
								"type": "reference",
								"name": "DataSourceQuerier.deleteOne",
								"id": 845
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/inMemory/adapter.ts",
							"line": 195,
							"character": 23
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Adapter.deleteOne",
						"id": 944
					},
					"implementationOf": {
						"type": "reference",
						"name": "DataSourceQuerier.deleteOne",
						"id": 844
					}
				},
				{
					"id": 1445,
					"name": "emit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1446,
							"name": "emit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Triggers each corresponding handlers in sequence.",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1447,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the event to trigger"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1448,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"comment": {
										"text": "Arguments to pass to each handler. Note that those arguments will be appended with previous handler resolution value, if any."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.emit"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 30,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "SequentialEvent.emit"
					}
				},
				{
					"id": 1405,
					"name": "ensureCollectionExists",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 1406,
							"name": "ensureCollectionExists",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get or create the store hash.",
								"returns": "In memory table to use.\n",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 1407,
									"name": "table",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the table."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1408,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1409,
											"name": "items",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "adapters/inMemory/adapter.ts",
													"line": 15,
													"character": 23
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IRawAdapterEntityAttributes",
													"id": 1176
												}
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1409
											]
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/inMemory/adapter.ts",
							"line": 259,
							"character": 31
						}
					]
				},
				{
					"id": 1373,
					"name": "findMany",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 1374,
							"name": "findMany",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Retrieve several entities from the memory.",
								"returns": "Promise resolved once items are found. Called with (*{@link InMemoryEntity}[]* `entities`).\n",
								"tags": [
									{
										"tag": "summary",
										"text": "This reimplements {@link Adapters.DiasporaAdapter#findMany}, modified for in-memory interactions."
									},
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 1375,
									"name": "table",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the table to retrieve data from."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1376,
									"name": "queryFind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hash representing entities to find."
									},
									"type": {
										"type": "reference",
										"name": "SelectQuery",
										"id": 377
									}
								},
								{
									"id": 1377,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hash of options."
									},
									"type": {
										"type": "reference",
										"name": "QueryOptions",
										"id": 352
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "IRawAdapterEntityAttributes",
											"id": 1176
										}
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"name": "Adapter.findMany",
								"id": 927
							},
							"implementationOf": {
								"type": "reference",
								"name": "DataSourceQuerier.findMany",
								"id": 828
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/inMemory/adapter.ts",
							"line": 99,
							"character": 22
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Adapter.findMany",
						"id": 927
					},
					"implementationOf": {
						"type": "reference",
						"name": "DataSourceQuerier.findMany",
						"id": 827
					}
				},
				{
					"id": 1368,
					"name": "findOne",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 1369,
							"name": "findOne",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Retrieve a single entity from the memory.",
								"returns": "Promise resolved once item is found. Called with (*{@link InMemoryEntity}* `entity`).\n",
								"tags": [
									{
										"tag": "summary",
										"text": "This reimplements {@link Adapters.DiasporaAdapter#findOne}, modified for in-memory interactions."
									},
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 1370,
									"name": "table",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the table to retrieve data from."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1371,
									"name": "queryFind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hash representing the entity to find."
									},
									"type": {
										"type": "reference",
										"name": "SelectQuery",
										"id": 377
									}
								},
								{
									"id": 1372,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hash of options."
									},
									"type": {
										"type": "reference",
										"name": "QueryOptions",
										"id": 352
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IRawAdapterEntityAttributes",
												"id": 1176
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"name": "Adapter.findOne",
								"id": 922
							},
							"implementationOf": {
								"type": "reference",
								"name": "DataSourceQuerier.findOne",
								"id": 823
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/inMemory/adapter.ts",
							"line": 76,
							"character": 21
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Adapter.findOne",
						"id": 922
					},
					"implementationOf": {
						"type": "reference",
						"name": "DataSourceQuerier.findOne",
						"id": 822
					}
				},
				{
					"id": 1469,
					"name": "has",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1470,
							"name": "has",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Check if this instance has listeners for the provided event. Alias for `hasEvent`",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1471,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the event to check"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.has"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 89,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "SequentialEvent.has"
					}
				},
				{
					"id": 1472,
					"name": "hasEvent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1473,
							"name": "hasEvent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Check if this instance has listeners for the provided event",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1474,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the event to check"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.hasEvent"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 96,
							"character": 12
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "SequentialEvent.hasEvent"
					}
				},
				{
					"id": 1440,
					"name": "insertMany",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 1441,
							"name": "insertMany",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Insert several entities in the data store. This function is a default polyfill if the inheriting adapter does not provide `insertMany` itself.",
								"tags": [
									{
										"tag": "summary",
										"text": "At least one of {@link insertOne} or {@link insertMany} must be reimplemented by adapter."
									},
									{
										"tag": "author",
										"text": "gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1442,
									"name": "table",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1443,
									"name": "entities",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "IRawEntityAttributes",
											"id": 992
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "IRawAdapterEntityAttributes",
											"id": 1176
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Adapter.insertMany",
								"id": 918
							},
							"implementationOf": {
								"type": "reference",
								"name": "DataSourceQuerier.insertMany",
								"id": 819
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 342,
							"character": 24
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter.insertMany",
						"id": 918
					},
					"implementationOf": {
						"type": "reference",
						"name": "DataSourceQuerier.insertMany",
						"id": 818
					}
				},
				{
					"id": 1364,
					"name": "insertOne",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 1365,
							"name": "insertOne",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Insert a single entity in the memory store.",
								"returns": "Promise resolved once insertion is done. Called with (*{@link InMemoryEntity}* `entity`).\n",
								"tags": [
									{
										"tag": "summary",
										"text": "This reimplements {@link Adapters.DiasporaAdapter#insertOne}, modified for in-memory interactions."
									},
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 1366,
									"name": "table",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the table to insert data in."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1367,
									"name": "entity",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hash representing the entity to insert."
									},
									"type": {
										"type": "reference",
										"name": "IRawEntityAttributes",
										"id": 992
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IRawAdapterEntityAttributes",
												"id": 1176
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"name": "Adapter.insertOne",
								"id": 914
							},
							"implementationOf": {
								"type": "reference",
								"name": "DataSourceQuerier.insertOne",
								"id": 815
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/inMemory/adapter.ts",
							"line": 50,
							"character": 23
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Adapter.insertOne",
						"id": 914
					},
					"implementationOf": {
						"type": "reference",
						"name": "DataSourceQuerier.insertOne",
						"id": 814
					}
				},
				{
					"id": 1431,
					"name": "normalizeOptions",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 1432,
							"name": "normalizeOptions",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Transform options to their canonical form. This function must be applied before calling adapters' methods.",
								"returns": "Transformed options (also called `canonical options`).\n",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin"
									},
									{
										"tag": "throws",
										"text": "{TypeError} Thrown if an option does not have an acceptable type."
									},
									{
										"tag": "throws",
										"text": "{ReferenceError} Thrown if a required option is not present."
									},
									{
										"tag": "throws",
										"text": "{Error} Thrown when there isn't more precise description of the error is available (eg. when conflicts occurs)."
									}
								]
							},
							"parameters": [
								{
									"id": 1433,
									"name": "opts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "QueryOptionsRaw",
										"id": 357
									},
									"defaultValue": " {}"
								}
							],
							"type": {
								"type": "reference",
								"name": "QueryOptions",
								"id": 352
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Adapter.normalizeOptions",
								"id": 905
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 225,
							"character": 24
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter.normalizeOptions",
						"id": 905
					}
				},
				{
					"id": 1434,
					"name": "normalizeQuery",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 1435,
							"name": "normalizeQuery",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Transform a search query to its canonical form, replacing aliases or shorthands by full query.",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1436,
									"name": "originalQuery",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "QueryLanguage.SelectQueryOrConditionRaw",
										"id": 409
									}
								},
								{
									"id": 1437,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "QueryOptions",
										"id": 352
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "QueryLanguage.SelectQueryOrCondition",
								"id": 408
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Adapter.normalizeQuery",
								"id": 908
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 248,
							"character": 22
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter.normalizeQuery",
						"id": 908
					}
				},
				{
					"id": 1449,
					"name": "off",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1450,
							"name": "off",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Remove one, many or all event handlers on some events.",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1451,
									"name": "events",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "String containing event names to unbind. You may indicate several events at once by separating with *spaces*"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1452,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "Function or array of functions to unbind on specified events"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IEventHandler"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IEventHandler"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.off"
							}
						},
						{
							"id": 1453,
							"name": "off",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Remove event handlers on several events at once.",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1454,
									"name": "events",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Object with keys as event names containing a handler or an array of handlers to remove."
									},
									"type": {
										"type": "reference",
										"name": "IEventHash"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.off"
							}
						},
						{
							"id": 1455,
							"name": "off",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Remove all events handlers",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1456,
									"name": "all",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Pass true to delete all handlers"
									},
									"type": {
										"type": "intrinsic",
										"name": "true"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.off"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 38,
							"character": 7
						},
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 45,
							"character": 7
						},
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 52,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "SequentialEvent.off"
					}
				},
				{
					"id": 1457,
					"name": "on",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1458,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add one or many event handlers.",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1459,
									"name": "events",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "String containing event names to bind. You may indicate several events at once by separating with *spaces*"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1460,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Function or array of functions to bind on specified events"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IEventHandler"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IEventHandler"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.on"
							}
						},
						{
							"id": 1461,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add event handlers on several events at once.",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1462,
									"name": "events",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Object with keys as event names containing a handler or an array of handlers to add."
									},
									"type": {
										"type": "reference",
										"name": "IEventHash"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.on"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 60,
							"character": 6
						},
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 67,
							"character": 6
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "SequentialEvent.on"
					}
				},
				{
					"id": 1463,
					"name": "once",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1464,
							"name": "once",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add one or many event handlers. These listeners will be executed once, then are removed",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1465,
									"name": "events",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "String containing event names to bind. You may indicate several events at once by separating with *spaces*"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1466,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Function or array of functions to bind on specified events"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IEventHandler"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IEventHandler"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.once"
							}
						},
						{
							"id": 1467,
							"name": "once",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add event handlers on several events at once. These listeners will be executed once, then are removed",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1468,
									"name": "events",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Object with keys as event names containing a handler or an array of handlers to add."
									},
									"type": {
										"type": "reference",
										"name": "IEventHash"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.once"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 75,
							"character": 8
						},
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 82,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "SequentialEvent.once"
					}
				},
				{
					"id": 1421,
					"name": "remapInput",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 1422,
							"name": "remapInput",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "TODO.",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin"
									},
									{
										"tag": "see",
										"text": "TODO remapping."
									},
									{
										"tag": "see",
										"text": "{@link Adapters.Adapter#remapIO remapIO}\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 1423,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IEnumeratedHash",
										"id": 802,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 1424,
									"name": "tableName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1425,
									"name": "query",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "T",
										"constraint": {
											"type": "reference",
											"name": "IEnumeratedHash",
											"id": 802,
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "any"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Dictionary",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Adapter.remapInput",
								"id": 895
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 195,
							"character": 18
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter.remapInput",
						"id": 895
					}
				},
				{
					"id": 1426,
					"name": "remapOutput",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 1427,
							"name": "remapOutput",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "TODO.",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin"
									},
									{
										"tag": "see",
										"text": "TODO remapping."
									},
									{
										"tag": "see",
										"text": "{@link Adapters.Adapter#remapIO remapIO}\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 1428,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IEnumeratedHash",
										"id": 802,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 1429,
									"name": "tableName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1430,
									"name": "query",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "T",
										"constraint": {
											"type": "reference",
											"name": "IEnumeratedHash",
											"id": 802,
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "any"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Dictionary",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Adapter.remapOutput",
								"id": 900
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 209,
							"character": 19
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter.remapOutput",
						"id": 900
					}
				},
				{
					"id": 1438,
					"name": "toJSON",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 1439,
							"name": "toJSON",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a POJO representing the current adapter.",
								"returns": "JSON representation of the adapter.\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "object"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Adapter.toJSON",
								"id": 912
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 310,
							"character": 14
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter.toJSON",
						"id": 912
					}
				},
				{
					"id": 1384,
					"name": "updateMany",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 1385,
							"name": "updateMany",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Update several entities in the memory.",
								"returns": "Promise resolved once update is done. Called with (*{@link InMemoryEntity}[]* `entities`).\n",
								"tags": [
									{
										"tag": "summary",
										"text": "This reimplements {@link Adapters.DiasporaAdapter#updateMany}, modified for in-memory interactions."
									},
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 1386,
									"name": "table",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the table to update data in."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1387,
									"name": "queryFind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hash representing entities to find."
									},
									"type": {
										"type": "reference",
										"name": "SelectQuery",
										"id": 377
									}
								},
								{
									"id": 1388,
									"name": "update",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Object properties to set."
									},
									"type": {
										"type": "reference",
										"name": "IRawEntityAttributes",
										"id": 992
									}
								},
								{
									"id": 1389,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hash of options."
									},
									"type": {
										"type": "reference",
										"name": "QueryOptions",
										"id": 352
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "IRawAdapterEntityAttributes",
											"id": 1176
										}
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"name": "Adapter.updateMany",
								"id": 938
							},
							"implementationOf": {
								"type": "reference",
								"name": "DataSourceQuerier.updateMany",
								"id": 839
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/inMemory/adapter.ts",
							"line": 158,
							"character": 24
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Adapter.updateMany",
						"id": 938
					},
					"implementationOf": {
						"type": "reference",
						"name": "DataSourceQuerier.updateMany",
						"id": 838
					}
				},
				{
					"id": 1378,
					"name": "updateOne",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 1379,
							"name": "updateOne",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Update a single entity in the memory.",
								"returns": "Promise resolved once update is done. Called with (*{@link InMemoryEntity}* `entity`).\n",
								"tags": [
									{
										"tag": "summary",
										"text": "This reimplements {@link Adapters.DiasporaAdapter#updateOne}, modified for in-memory interactions."
									},
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 1380,
									"name": "table",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the table to update data in."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1381,
									"name": "queryFind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hash representing the entity to find."
									},
									"type": {
										"type": "reference",
										"name": "SelectQuery",
										"id": 377
									}
								},
								{
									"id": 1382,
									"name": "update",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Object properties to set."
									},
									"type": {
										"type": "reference",
										"name": "IRawEntityAttributes",
										"id": 992
									}
								},
								{
									"id": 1383,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hash of options."
									},
									"type": {
										"type": "reference",
										"name": "QueryOptions",
										"id": 352
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IRawAdapterEntityAttributes",
												"id": 1176
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"name": "Adapter.updateOne",
								"id": 932
							},
							"implementationOf": {
								"type": "reference",
								"name": "DataSourceQuerier.updateOne",
								"id": 833
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/inMemory/adapter.ts",
							"line": 126,
							"character": 23
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Adapter.updateOne",
						"id": 932
					},
					"implementationOf": {
						"type": "reference",
						"name": "DataSourceQuerier.updateOne",
						"id": 832
					}
				},
				{
					"id": 1419,
					"name": "waitReady",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 1420,
							"name": "waitReady",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a promise resolved once adapter state is ready.",
								"returns": "Promise resolved when adapter is ready, and rejected if an error occured.\n",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin"
									},
									{
										"tag": "listens",
										"text": "Adapters.Adapter#error"
									},
									{
										"tag": "listens",
										"text": "Adapters.Adapter#ready"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "this"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Adapter.waitReady",
								"id": 893
							},
							"implementationOf": {
								"type": "reference",
								"name": "DataSourceQuerier.waitReady",
								"id": 855
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 172,
							"character": 17
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter.waitReady",
						"id": 893
					},
					"implementationOf": {
						"type": "reference",
						"name": "DataSourceQuerier.waitReady",
						"id": 854
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1361
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1444,
						1417,
						1415,
						1412,
						1418,
						1413,
						1414,
						1416,
						1360
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						1410
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1400,
						1395,
						1390,
						1445,
						1405,
						1373,
						1368,
						1469,
						1472,
						1440,
						1364,
						1431,
						1434,
						1449,
						1457,
						1463,
						1421,
						1426,
						1438,
						1384,
						1378,
						1419
					]
				}
			],
			"sources": [
				{
					"fileName": "adapters/inMemory/adapter.ts",
					"line": 20,
					"character": 28
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "Adapter",
					"id": 871,
					"typeArguments": [
						{
							"type": "reference",
							"name": "InMemoryEntity",
							"id": 1324
						}
					]
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "DataSourceQuerier",
					"id": 812,
					"typeArguments": [
						{
							"type": "reference",
							"name": "IRawAdapterEntityAttributes",
							"id": 1176
						}
					]
				}
			]
		},
		{
			"id": 1324,
			"name": "InMemoryEntity",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Entity stored in {@link Adapters.InMemoryDiasporaAdapter the in-memory adapter}."
			},
			"decorators": [
				{
					"name": "SelfMatchingAdapterEntity",
					"type": {
						"type": "reference",
						"name": "SelfMatchingAdapterEntity",
						"id": 1321
					}
				},
				{
					"name": "AutoIdAdapterEntity",
					"type": {
						"type": "reference",
						"name": "AutoIdAdapterEntity",
						"id": 1317
					}
				}
			],
			"children": [
				{
					"id": 1330,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"comment": {
						"shortText": "Construct a new data source entity with specified content & parent.",
						"tags": [
							{
								"tag": "author",
								"text": "gerkin\n"
							}
						]
					},
					"signatures": [
						{
							"id": 1331,
							"name": "new InMemoryEntity",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "Construct a new data source entity with specified content & parent.",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1332,
									"name": "entity",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IRawEntityAttributes",
										"id": 992
									}
								},
								{
									"id": 1333,
									"name": "dataSource",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Adapter",
										"id": 871
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "InMemoryEntity",
								"id": 1324
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AdapterEntity.__constructor",
								"id": 1203
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/entity.ts",
							"line": 42,
							"character": 52
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AdapterEntity.__constructor",
						"id": 1203
					}
				},
				{
					"id": 1329,
					"name": "_attributes",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "adapters/base/entity.ts",
							"line": 42,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"name": "IRawAdapterEntityAttributes",
						"id": 1176
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "AdapterEntity._attributes",
						"id": 1202
					}
				},
				{
					"id": 1328,
					"name": "dataAccessLayer",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "adapters/base/entity.ts",
							"line": 40,
							"character": 32
						}
					],
					"type": {
						"type": "reference",
						"name": "DataAccessLayer",
						"id": 410
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "AdapterEntity.dataAccessLayer",
						"id": 1201
					}
				},
				{
					"id": 1327,
					"name": "dataSource",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "adapters/base/entity.ts",
							"line": 39,
							"character": 27
						}
					],
					"type": {
						"type": "reference",
						"name": "Adapter",
						"id": 871
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "AdapterEntity.dataSource",
						"id": 1200
					}
				},
				{
					"id": 1325,
					"name": "attributes",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"getSignature": {
						"id": 1326,
						"name": "__get",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"type": {
							"type": "reference",
							"name": "IRawAdapterEntityAttributes",
							"id": 1176
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "AdapterEntity.attributes",
							"id": 1198
						}
					},
					"sources": [
						{
							"fileName": "adapters/base/entity.ts",
							"line": 36,
							"character": 22
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AdapterEntity.attributes",
						"id": 1198
					}
				},
				{
					"id": 1344,
					"name": "matches",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 1345,
							"name": "matches",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Is implemented only by decorator"
							},
							"parameters": [
								{
									"id": 1346,
									"name": "query",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Query to match entity against\n"
									},
									"type": {
										"type": "reference",
										"name": "QueryLanguage.SelectQueryOrCondition",
										"id": 408
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AdapterEntity.matches",
								"id": 1217
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/entity.ts",
							"line": 112,
							"character": 15
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AdapterEntity.matches",
						"id": 1217
					}
				},
				{
					"id": 1349,
					"name": "setId",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"signatures": [
						{
							"id": 1350,
							"name": "setId",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Calls the static {@link AdapterEntity.setId} with provided arguments",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 1351,
									"name": "adapter",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Adapter that will persist the entity"
									},
									"type": {
										"type": "reference",
										"name": "Adapter",
										"id": 871
									}
								},
								{
									"id": 1352,
									"name": "propName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Property that should contain the ID"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"id\""
								},
								{
									"id": 1353,
									"name": "id",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Value of the ID\n"
									},
									"type": {
										"type": "reference",
										"name": "EntityUid",
										"id": 1157
									},
									"defaultValue": " this.attributes.id"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AdapterEntity.setId",
								"id": 1222
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/entity.ts",
							"line": 135,
							"character": 16
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AdapterEntity.setId",
						"id": 1222
					}
				},
				{
					"id": 1347,
					"name": "toObject",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 1348,
							"name": "toObject",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a plain object corresponding to this entity attributes.",
								"returns": "Plain object representing this entity.\n",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "IRawAdapterEntityAttributes",
								"id": 1176
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AdapterEntity.toObject",
								"id": 1220
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/entity.ts",
							"line": 122,
							"character": 16
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AdapterEntity.toObject",
						"id": 1220
					}
				},
				{
					"id": 1340,
					"name": "matches",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 1341,
							"name": "matches",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Is implemented only by decorator"
							},
							"parameters": [
								{
									"id": 1342,
									"name": "attributes",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IRawAdapterEntityAttributes",
										"id": 1176
									}
								},
								{
									"id": 1343,
									"name": "query",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Query to match entity against\n"
									},
									"type": {
										"type": "reference",
										"name": "QueryLanguage.SelectQueryOrCondition",
										"id": 408
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AdapterEntity.matches",
								"id": 1213
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/entity.ts",
							"line": 100,
							"character": 22
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AdapterEntity.matches",
						"id": 1213
					}
				},
				{
					"id": 1334,
					"name": "setId",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 1335,
							"name": "setId",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Applies the id in the appropriate field & id hash",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 1336,
									"name": "attributes",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Attributes of the entity"
									},
									"type": {
										"type": "reference",
										"name": "IRawEntityAttributes",
										"id": 992
									}
								},
								{
									"id": 1337,
									"name": "adapter",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Adapter that will persist the entity"
									},
									"type": {
										"type": "reference",
										"name": "Adapter",
										"id": 871
									}
								},
								{
									"id": 1338,
									"name": "propName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Property that should contain the ID"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"id\""
								},
								{
									"id": 1339,
									"name": "id",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Value of the ID\n"
									},
									"type": {
										"type": "reference",
										"name": "EntityUid",
										"id": 1157
									},
									"defaultValue": " attributes.id"
								}
							],
							"type": {
								"type": "reference",
								"name": "IRawAdapterEntityAttributes",
								"id": 1176
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AdapterEntity.setId",
								"id": 1207
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/entity.ts",
							"line": 80,
							"character": 20
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AdapterEntity.setId",
						"id": 1207
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1330
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1329,
						1328,
						1327
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						1325
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1344,
						1349,
						1347,
						1340,
						1334
					]
				}
			],
			"sources": [
				{
					"fileName": "adapters/inMemory/entity.ts",
					"line": 13,
					"character": 27
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "AdapterEntity",
					"id": 1197
				}
			]
		},
		{
			"id": 694,
			"name": "Logger",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true,
				"isAbstract": true
			},
			"children": [
				{
					"id": 700,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 701,
							"name": "new Logger",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 702,
									"name": "logProvider",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ILoggerInterface",
										"id": 687
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Logger",
								"id": 694
							}
						}
					],
					"sources": [
						{
							"fileName": "logger/logger.ts",
							"line": 44,
							"character": 51
						}
					]
				},
				{
					"id": 695,
					"name": "_level",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "logger/logger.ts",
							"line": 42,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"name": "ELoggingLevel",
						"id": 679
					},
					"defaultValue": " ELoggingLevel.Silly"
				},
				{
					"id": 705,
					"name": "debug",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "logger/logger.ts",
							"line": 56,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"name": "LoggingFunction",
						"id": 709
					},
					"implementationOf": {
						"type": "reference",
						"name": "ILoggerInterface.debug",
						"id": 690
					}
				},
				{
					"id": 708,
					"name": "error",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "logger/logger.ts",
							"line": 59,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"name": "LoggingFunction",
						"id": 709
					},
					"implementationOf": {
						"type": "reference",
						"name": "ILoggerInterface.error",
						"id": 693
					}
				},
				{
					"id": 706,
					"name": "log",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "logger/logger.ts",
							"line": 57,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"name": "LoggingFunction",
						"id": 709
					},
					"implementationOf": {
						"type": "reference",
						"name": "ILoggerInterface.log",
						"id": 691
					}
				},
				{
					"id": 703,
					"name": "silly",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "logger/logger.ts",
							"line": 54,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"name": "LoggingFunction",
						"id": 709
					},
					"implementationOf": {
						"type": "reference",
						"name": "ILoggerInterface.silly",
						"id": 688
					}
				},
				{
					"id": 704,
					"name": "verbose",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "logger/logger.ts",
							"line": 55,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"name": "LoggingFunction",
						"id": 709
					},
					"implementationOf": {
						"type": "reference",
						"name": "ILoggerInterface.verbose",
						"id": 689
					}
				},
				{
					"id": 707,
					"name": "warn",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "logger/logger.ts",
							"line": 58,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"name": "LoggingFunction",
						"id": 709
					},
					"implementationOf": {
						"type": "reference",
						"name": "ILoggerInterface.warn",
						"id": 692
					}
				},
				{
					"id": 696,
					"name": "level",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"getSignature": {
						"id": 697,
						"name": "__get",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"type": {
							"type": "reference",
							"name": "ELoggingLevel",
							"id": 679
						}
					},
					"setSignature": {
						"id": 698,
						"name": "__set",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {},
						"parameters": [
							{
								"id": 699,
								"name": "level",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {},
								"type": {
									"type": "reference",
									"name": "ELoggingLevel",
									"id": 679
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "any"
						}
					},
					"sources": [
						{
							"fileName": "logger/logger.ts",
							"line": 43,
							"character": 26
						},
						{
							"fileName": "logger/logger.ts",
							"line": 44,
							"character": 26
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						700
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						695,
						705,
						708,
						706,
						703,
						704,
						707
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						696
					]
				}
			],
			"sources": [
				{
					"fileName": "logger/logger.ts",
					"line": 40,
					"character": 28
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"name": "BrowserLogger",
					"id": 713
				},
				{
					"type": "reference",
					"name": "NodeLogger",
					"id": 732
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "ILoggerInterface",
					"id": 687
				}
			]
		},
		{
			"id": 576,
			"name": "Model",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "The model class is used to interact with the population of all data of the same type."
			},
			"children": [
				{
					"id": 612,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"comment": {
						"shortText": "Create a new Model that is allowed to interact with all entities of data sources tables selected.",
						"tags": [
							{
								"tag": "author",
								"text": "gerkin"
							}
						]
					},
					"signatures": [
						{
							"id": 614,
							"name": "new Model",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "Create a new Model that is allowed to interact with all entities of data sources tables selected.",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 615,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Name of the model."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 616,
									"name": "modelDesc",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Hash representing the configuration of the model.\n"
									},
									"type": {
										"type": "reference",
										"name": "ModelDescriptionRaw",
										"id": 31
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Model",
								"id": 576
							}
						}
					],
					"sources": [
						{
							"fileName": "model.ts",
							"line": 57,
							"character": 2
						}
					]
				},
				{
					"id": 581,
					"name": "_dataSources",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"sources": [
						{
							"fileName": "model.ts",
							"line": 26,
							"character": 30
						}
					],
					"type": {
						"type": "reference",
						"name": "IDataSourceRegistry",
						"id": 515
					}
				},
				{
					"id": 585,
					"name": "_entityFactory",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"sources": [
						{
							"fileName": "model.ts",
							"line": 31,
							"character": 32
						}
					],
					"type": {
						"type": "reference",
						"name": "EntitySpawner",
						"id": 999
					}
				},
				{
					"id": 588,
					"name": "_entityTransformers",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"sources": [
						{
							"fileName": "model.ts",
							"line": 35,
							"character": 37
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 589,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"indexSignature": {
								"id": 592,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 593,
										"name": "key",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"name": "EntityTransformer",
											"id": 137
										},
										{
											"type": "intrinsic",
											"name": "undefined"
										}
									]
								}
							},
							"children": [
								{
									"id": 591,
									"name": "check",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "model.ts",
											"line": 37,
											"character": 7
										}
									],
									"type": {
										"type": "reference",
										"name": "CheckTransformer",
										"id": 198
									}
								},
								{
									"id": 590,
									"name": "default",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "model.ts",
											"line": 36,
											"character": 9
										}
									],
									"type": {
										"type": "reference",
										"name": "DefaultTransformer",
										"id": 550
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										591,
										590
									]
								}
							],
							"sources": [
								{
									"fileName": "model.ts",
									"line": 35,
									"character": 38
								}
							]
						}
					}
				},
				{
					"id": 577,
					"name": "attributes",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "model.ts",
							"line": 24,
							"character": 18
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 578,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"indexSignature": {
								"id": 579,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 580,
										"name": "key",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "reference",
									"name": "FieldDescriptor",
									"id": 115
								}
							},
							"sources": [
								{
									"fileName": "model.ts",
									"line": 24,
									"character": 19
								}
							]
						}
					}
				},
				{
					"id": 584,
					"name": "defaultDataSource",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"sources": [
						{
							"fileName": "model.ts",
							"line": 30,
							"character": 35
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 613,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isConstructorProperty": true,
						"isExported": true,
						"isPublic": true
					},
					"comment": {
						"shortText": "Name of the model."
					},
					"sources": [
						{
							"fileName": "model.ts",
							"line": 67,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 601,
					"name": "ctor",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"getSignature": {
						"id": 602,
						"name": "__get",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"type": {
							"type": "reference",
							"name": "Model",
							"id": 576
						}
					},
					"sources": [
						{
							"fileName": "model.ts",
							"line": 44,
							"character": 16
						}
					]
				},
				{
					"id": 582,
					"name": "dataSources",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"getSignature": {
						"id": 583,
						"name": "__get",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"type": {
							"type": "reference",
							"name": "IDataSourceRegistry",
							"id": 515
						}
					},
					"sources": [
						{
							"fileName": "model.ts",
							"line": 27,
							"character": 23
						}
					]
				},
				{
					"id": 586,
					"name": "entityFactory",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"getSignature": {
						"id": 587,
						"name": "__get",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"type": {
							"type": "reference",
							"name": "EntitySpawner",
							"id": 999
						}
					},
					"sources": [
						{
							"fileName": "model.ts",
							"line": 32,
							"character": 25
						}
					]
				},
				{
					"id": 594,
					"name": "entityTransformers",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"getSignature": {
						"id": 595,
						"name": "__get",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"type": {
							"type": "reflection",
							"declaration": {
								"id": 596,
								"name": "__type",
								"kind": 65536,
								"kindString": "Type literal",
								"flags": {},
								"indexSignature": {
									"id": 599,
									"name": "__index",
									"kind": 8192,
									"kindString": "Index signature",
									"flags": {},
									"parameters": [
										{
											"id": 600,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "EntityTransformer",
												"id": 137
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								},
								"children": [
									{
										"id": 598,
										"name": "check",
										"kind": 32,
										"kindString": "Variable",
										"flags": {},
										"sources": [
											{
												"fileName": "model.ts",
												"line": 37,
												"character": 7
											}
										],
										"type": {
											"type": "reference",
											"name": "CheckTransformer",
											"id": 198
										}
									},
									{
										"id": 597,
										"name": "default",
										"kind": 32,
										"kindString": "Variable",
										"flags": {},
										"sources": [
											{
												"fileName": "model.ts",
												"line": 36,
												"character": 9
											}
										],
										"type": {
											"type": "reference",
											"name": "DefaultTransformer",
											"id": 550
										}
									}
								],
								"groups": [
									{
										"title": "Variables",
										"kind": 32,
										"children": [
											598,
											597
										]
									}
								]
							}
						}
					},
					"sources": [
						{
							"fileName": "model.ts",
							"line": 40,
							"character": 30
						}
					]
				},
				{
					"id": 663,
					"name": "delete",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 664,
							"name": "delete",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Delete a single entity from specified data source that matches provided `queryFind` and `options`.",
								"returns": "Promise resolved with `undefined`.\n",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 665,
									"name": "queryFind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Query to get desired entity."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "QueryLanguage.SelectQueryOrConditionRaw",
												"id": 409
											},
											{
												"type": "reference",
												"name": "EntityUid",
												"id": 1157
											}
										]
									}
								},
								{
									"id": 666,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Options for this query."
									},
									"type": {
										"type": "reference",
										"name": "QueryOptionsRaw",
										"id": 357
									},
									"defaultValue": " {}"
								},
								{
									"id": 667,
									"name": "dataSourceName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the data source to get entity from."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": " this.defaultDataSource"
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "model.ts",
							"line": 333,
							"character": 20
						}
					]
				},
				{
					"id": 668,
					"name": "deleteMany",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 669,
							"name": "deleteMany",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Delete multiple entities from specified data source that matches provided `queryFind` and `options`.",
								"returns": "Promise resolved with `undefined`.\n",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 670,
									"name": "queryFind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Query to get desired entities."
									},
									"type": {
										"type": "reference",
										"name": "QueryLanguage.SelectQueryOrConditionRaw",
										"id": 409
									}
								},
								{
									"id": 671,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Options for this query."
									},
									"type": {
										"type": "reference",
										"name": "QueryOptionsRaw",
										"id": 357
									},
									"defaultValue": " {}"
								},
								{
									"id": 672,
									"name": "dataSourceName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the data source to get entities from."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": " this.defaultDataSource"
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "model.ts",
							"line": 351,
							"character": 24
						}
					]
				},
				{
					"id": 620,
					"name": "ensureQueryObject",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 621,
							"name": "ensureQueryObject",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generates a query object if the only provided parameter is an {@link EntityUid}."
							},
							"parameters": [
								{
									"id": 622,
									"name": "query",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Entity ID or query to potentialy transform"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "QueryLanguage.SelectQueryOrConditionRaw",
												"id": 409
											},
											{
												"type": "reference",
												"name": "EntityUid",
												"id": 1157
											}
										]
									}
								},
								{
									"id": 623,
									"name": "sourceName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the source we want to query\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": " this.defaultDataSource"
								}
							],
							"type": {
								"type": "reference",
								"name": "QueryLanguage.SelectQueryOrConditionRaw",
								"id": 409
							}
						}
					],
					"sources": [
						{
							"fileName": "model.ts",
							"line": 167,
							"character": 25
						}
					]
				},
				{
					"id": 641,
					"name": "find",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 642,
							"name": "find",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Retrieve a single entity from specified data source that matches provided `queryFind` and `options`.",
								"returns": "Promise resolved with the found {@link Entity entity} in *sync* state.\n",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 643,
									"name": "queryFind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Query to get desired entity."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "QueryLanguage.SelectQueryOrConditionRaw",
												"id": 409
											},
											{
												"type": "reference",
												"name": "EntityUid",
												"id": 1157
											}
										]
									}
								},
								{
									"id": 644,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Options for this query."
									},
									"type": {
										"type": "reference",
										"name": "QueryOptionsRaw",
										"id": 357
									},
									"defaultValue": " {}"
								},
								{
									"id": 645,
									"name": "dataSourceName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the data source to get entity from."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": " this.defaultDataSource"
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Entity",
												"id": 1022
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "model.ts",
							"line": 259,
							"character": 18
						}
					]
				},
				{
					"id": 646,
					"name": "findMany",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 647,
							"name": "findMany",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Retrieve multiple entities from specified data source that matches provided `queryFind` and `options`.",
								"returns": "Promise resolved with a {@link Set set} of found entities in *sync* state.\n",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 648,
									"name": "queryFind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Query to get desired entities."
									},
									"type": {
										"type": "reference",
										"name": "QueryLanguage.SelectQueryOrConditionRaw",
										"id": 409
									}
								},
								{
									"id": 649,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Options for this query."
									},
									"type": {
										"type": "reference",
										"name": "QueryOptionsRaw",
										"id": 357
									},
									"defaultValue": " {}"
								},
								{
									"id": 650,
									"name": "dataSourceName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the data source to get entities from."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": " this.defaultDataSource"
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Set",
										"id": 750
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "model.ts",
							"line": 277,
							"character": 22
						}
					]
				},
				{
					"id": 624,
					"name": "getDataSource",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 625,
							"name": "getDataSource",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Create a new Model that is allowed to interact with all entities of data sources tables selected.",
								"returns": "Source adapter with requested name.\n",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin"
									},
									{
										"tag": "throws",
										"text": "{Error} Thrown if requested source name does not exists."
									}
								]
							},
							"parameters": [
								{
									"id": 626,
									"name": "dataSource",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the source to get. It corresponds to one of the sources you set in {@link Model#modelDesc}.Sources."
									},
									"type": {
										"type": "reference",
										"name": "TDataSource",
										"id": 514
									},
									"defaultValue": " this.defaultDataSource"
								}
							],
							"type": {
								"type": "reference",
								"name": "DataAccessLayer",
								"id": 410
							}
						}
					],
					"sources": [
						{
							"fileName": "model.ts",
							"line": 185,
							"character": 21
						}
					]
				},
				{
					"id": 633,
					"name": "insert",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 634,
							"name": "insert",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Insert a raw source object in the data store.",
								"returns": "Promise resolved with new *sync* {@link Entity entity}.\n",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 635,
									"name": "source",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Object to copy attributes from."
									},
									"type": {
										"type": "reference",
										"name": "IRawEntityAttributes",
										"id": 992
									}
								},
								{
									"id": 636,
									"name": "dataSourceName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the data source to insert in."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": " this.defaultDataSource"
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Entity",
												"id": 1022
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "model.ts",
							"line": 228,
							"character": 20
						}
					]
				},
				{
					"id": 637,
					"name": "insertMany",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 638,
							"name": "insertMany",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Insert multiple raw source objects in the data store.",
								"returns": "Promise resolved with a {@link Set set} containing new *sync* entities.\n",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 639,
									"name": "sources",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Array of object to copy attributes from."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "IRawEntityAttributes",
											"id": 992
										}
									}
								},
								{
									"id": 640,
									"name": "dataSourceName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the data source to insert in."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": " this.defaultDataSource"
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Set",
										"id": 750
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "model.ts",
							"line": 243,
							"character": 24
						}
					]
				},
				{
					"id": 676,
					"name": "makeEntity",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"signatures": [
						{
							"id": 677,
							"name": "makeEntity",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generate a new entity from the promise's result",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 678,
									"name": "dataSourceEntityPromise",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Promise that may return an adapter entity to wrap in a newly created `Entity`\n"
									},
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "AdapterEntity",
														"id": 1197
													},
													{
														"type": "intrinsic",
														"name": "undefined"
													}
												]
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "null"
											},
											{
												"type": "reference",
												"name": "Entity",
												"id": 1022
											}
										]
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "model.ts",
							"line": 382,
							"character": 27
						}
					]
				},
				{
					"id": 673,
					"name": "makeSet",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"signatures": [
						{
							"id": 674,
							"name": "makeSet",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generate a new Set containing provided `AdapterEntities` wrapped in `Entities`"
							},
							"parameters": [
								{
									"id": 675,
									"name": "dataSourceEntitiesPromise",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Promise that may return adapter entities to wrap in a newly created `Set`\n"
									},
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Array",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "reference",
																"name": "AdapterEntity",
																"id": 1197
															},
															{
																"type": "intrinsic",
																"name": "undefined"
															}
														]
													}
												]
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Set",
										"id": 750
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "model.ts",
							"line": 364,
							"character": 24
						}
					]
				},
				{
					"id": 627,
					"name": "spawn",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 628,
							"name": "spawn",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Create a new *orphan* {@link Entity entity}.",
								"returns": "New *orphan* entity.\n",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 629,
									"name": "source",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Object to copy attributes from."
									},
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Entity",
								"id": 1022
							}
						}
					],
					"sources": [
						{
							"fileName": "model.ts",
							"line": 204,
							"character": 13
						}
					]
				},
				{
					"id": 630,
					"name": "spawnMany",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 631,
							"name": "spawnMany",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Create multiple new *orphan* {@link Entity entities}.",
								"returns": "Set with new *orphan* entities.\n",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 632,
									"name": "sources",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Array of objects to copy attributes from."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Set",
								"id": 750
							}
						}
					],
					"sources": [
						{
							"fileName": "model.ts",
							"line": 216,
							"character": 17
						}
					]
				},
				{
					"id": 651,
					"name": "update",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 652,
							"name": "update",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Update a single entity from specified data source that matches provided `queryFind` and `options`.",
								"returns": "Promise resolved with the updated {@link Entity entity} in *sync* state.\n",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 653,
									"name": "queryFind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Query to get desired entity."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "QueryLanguage.SelectQueryOrConditionRaw",
												"id": 409
											},
											{
												"type": "reference",
												"name": "EntityUid",
												"id": 1157
											}
										]
									}
								},
								{
									"id": 654,
									"name": "update",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Attributes to update on matched set."
									},
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 655,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Options for this query."
									},
									"type": {
										"type": "reference",
										"name": "QueryOptionsRaw",
										"id": 357
									},
									"defaultValue": " {}"
								},
								{
									"id": 656,
									"name": "dataSourceName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the data source to get entity from."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": " this.defaultDataSource"
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Entity",
												"id": 1022
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "model.ts",
							"line": 295,
							"character": 20
						}
					]
				},
				{
					"id": 657,
					"name": "updateMany",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 658,
							"name": "updateMany",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Update multiple entities from specified data source that matches provided `queryFind` and `options`.",
								"returns": "Promise resolved with the {@link Set set} of found entities in *sync* state.\n",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 659,
									"name": "queryFind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Query to get desired entities."
									},
									"type": {
										"type": "reference",
										"name": "QueryLanguage.SelectQueryOrConditionRaw",
										"id": 409
									}
								},
								{
									"id": 660,
									"name": "update",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Attributes to update on matched set."
									},
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 661,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Options for this query."
									},
									"type": {
										"type": "reference",
										"name": "QueryOptionsRaw",
										"id": 357
									},
									"defaultValue": " {}"
								},
								{
									"id": 662,
									"name": "dataSourceName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the data source to get entities from."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": " this.defaultDataSource"
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Set",
										"id": 750
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "model.ts",
							"line": 315,
							"character": 24
						}
					]
				},
				{
					"id": 603,
					"name": "normalizeAttributesDescription",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isPrivate": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 604,
							"name": "normalizeAttributesDescription",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Modifies the raw attributes description to standardize it",
								"returns": "Attributes description map normalized, with properties defaulted",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 605,
									"name": "desc",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Attributes description map to transform"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 606,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"indexSignature": {
												"id": 607,
												"name": "__index",
												"kind": 8192,
												"kindString": "Index signature",
												"flags": {},
												"parameters": [
													{
														"id": 608,
														"name": "key",
														"kind": 32768,
														"kindString": "Parameter",
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"type": {
													"type": "union",
													"types": [
														{
															"type": "reference",
															"name": "FieldDescriptor",
															"id": 115
														},
														{
															"type": "intrinsic",
															"name": "string"
														}
													]
												}
											},
											"sources": [
												{
													"fileName": "model.ts",
													"line": 55,
													"character": 53
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 609,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 610,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 611,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "FieldDescriptor",
											"id": 115
										}
									},
									"sources": [
										{
											"fileName": "model.ts",
											"line": 55,
											"character": 99
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "model.ts",
							"line": 55,
							"character": 46
						}
					]
				},
				{
					"id": 617,
					"name": "normalizeRemaps",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isProtected": true
					},
					"signatures": [
						{
							"id": 618,
							"name": "normalizeRemaps",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "TODO",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 619,
									"name": "modelDesc",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Description of the model to normalize remaps for\n"
									},
									"type": {
										"type": "reference",
										"name": "ModelDescriptionRaw",
										"id": 31
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "SourcesHash",
								"id": 28
							}
						}
					],
					"sources": [
						{
							"fileName": "model.ts",
							"line": 136,
							"character": 33
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						612
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						581,
						585,
						588,
						577,
						584,
						613
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						601,
						582,
						586,
						594
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						663,
						668,
						620,
						641,
						646,
						624,
						633,
						637,
						676,
						673,
						627,
						630,
						651,
						657,
						603,
						617
					]
				}
			],
			"sources": [
				{
					"fileName": "model.ts",
					"line": 23,
					"character": 18
				}
			]
		},
		{
			"id": 732,
			"name": "NodeLogger",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 738,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 739,
							"name": "new NodeLogger",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "NodeLogger",
								"id": 732
							},
							"overwrites": {
								"type": "reference",
								"name": "Logger.__constructor",
								"id": 700
							}
						}
					],
					"sources": [
						{
							"fileName": "logger/nodeLogger.ts",
							"line": 25,
							"character": 27
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Logger.__constructor",
						"id": 700
					}
				},
				{
					"id": 740,
					"name": "_level",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "logger/logger.ts",
							"line": 42,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"name": "ELoggingLevel",
						"id": 679
					},
					"defaultValue": " ELoggingLevel.Silly",
					"inheritedFrom": {
						"type": "reference",
						"name": "Logger._level",
						"id": 695
					}
				},
				{
					"id": 743,
					"name": "debug",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "logger/logger.ts",
							"line": 56,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"name": "LoggingFunction",
						"id": 709
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Logger.debug",
						"id": 705
					},
					"implementationOf": {
						"type": "reference",
						"name": "ILoggerInterface.debug",
						"id": 690
					}
				},
				{
					"id": 746,
					"name": "error",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "logger/logger.ts",
							"line": 59,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"name": "LoggingFunction",
						"id": 709
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Logger.error",
						"id": 708
					},
					"implementationOf": {
						"type": "reference",
						"name": "ILoggerInterface.error",
						"id": 693
					}
				},
				{
					"id": 744,
					"name": "log",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "logger/logger.ts",
							"line": 57,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"name": "LoggingFunction",
						"id": 709
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Logger.log",
						"id": 706
					},
					"implementationOf": {
						"type": "reference",
						"name": "ILoggerInterface.log",
						"id": 691
					}
				},
				{
					"id": 737,
					"name": "logger",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "logger/nodeLogger.ts",
							"line": 25,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"name": "WLogger"
					}
				},
				{
					"id": 741,
					"name": "silly",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "logger/logger.ts",
							"line": 54,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"name": "LoggingFunction",
						"id": 709
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Logger.silly",
						"id": 703
					},
					"implementationOf": {
						"type": "reference",
						"name": "ILoggerInterface.silly",
						"id": 688
					}
				},
				{
					"id": 742,
					"name": "verbose",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "logger/logger.ts",
							"line": 55,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"name": "LoggingFunction",
						"id": 709
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Logger.verbose",
						"id": 704
					},
					"implementationOf": {
						"type": "reference",
						"name": "ILoggerInterface.verbose",
						"id": 689
					}
				},
				{
					"id": 745,
					"name": "warn",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "logger/logger.ts",
							"line": 58,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"name": "LoggingFunction",
						"id": 709
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Logger.warn",
						"id": 707
					},
					"implementationOf": {
						"type": "reference",
						"name": "ILoggerInterface.warn",
						"id": 692
					}
				},
				{
					"id": 733,
					"name": "level",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"getSignature": {
						"id": 736,
						"name": "__get",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"type": {
							"type": "reference",
							"name": "ELoggingLevel",
							"id": 679
						},
						"overwrites": {
							"type": "reference",
							"name": "Logger.level",
							"id": 696
						}
					},
					"setSignature": {
						"id": 734,
						"name": "__set",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {},
						"parameters": [
							{
								"id": 735,
								"name": "level",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {},
								"type": {
									"type": "reference",
									"name": "ELoggingLevel",
									"id": 679
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"overwrites": {
							"type": "reference",
							"name": "Logger.level",
							"id": 696
						}
					},
					"sources": [
						{
							"fileName": "logger/nodeLogger.ts",
							"line": 18,
							"character": 17
						},
						{
							"fileName": "logger/nodeLogger.ts",
							"line": 22,
							"character": 17
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Logger.level",
						"id": 696
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						738
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						740,
						743,
						746,
						744,
						737,
						741,
						742,
						745
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						733
					]
				}
			],
			"sources": [
				{
					"fileName": "logger/nodeLogger.ts",
					"line": 16,
					"character": 23
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "Logger",
					"id": 694
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "ILoggerInterface",
					"id": 687
				}
			]
		},
		{
			"id": 2161,
			"name": "NodeWebApiAdapter",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 2162,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 2163,
							"name": "new NodeWebApiAdapter",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 2164,
									"name": "dataSourceName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2165,
									"name": "config",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "INodeWebApiAdapterConfig",
										"id": 2152
									}
								},
								{
									"id": 2166,
									"name": "eventProviders",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "IEventProvider",
											"id": 1671
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "NodeWebApiAdapter",
								"id": 2161
							},
							"overwrites": {
								"type": "reference",
								"name": "WebApiAdapter.__constructor",
								"id": 1839
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/webApi/subAdapters/nodeAdapter.ts",
							"line": 17,
							"character": 53
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "WebApiAdapter.__constructor",
						"id": 1839
					}
				},
				{
					"id": 2264,
					"name": "__events",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"comment": {
						"shortText": "Events hash attached to this SequentialEvent instance"
					},
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 16,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"name": "IEventsHash"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SequentialEvent.__events"
					}
				},
				{
					"id": 2236,
					"name": "_classEntity",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isConstructorProperty": true,
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 91,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"name": "IAdapterEntityCtr",
						"id": 1181,
						"typeArguments": [
							{
								"type": "reference",
								"name": "WebApiEntity",
								"id": 1475
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter._classEntity",
						"id": 881
					}
				},
				{
					"id": 2234,
					"name": "error",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Error triggered by adapter initialization.",
						"tags": [
							{
								"tag": "author",
								"text": "Gerkin\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 72,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"name": "Error",
						"id": 9
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter.error",
						"id": 878
					}
				},
				{
					"id": 2231,
					"name": "filters",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"comment": {
						"shortText": "Hash of functions to cast data store values to JSON standard values in entity.",
						"tags": [
							{
								"tag": "author",
								"text": "Gerkin\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 51,
							"character": 18
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter.filters",
						"id": 875
					}
				},
				{
					"id": 2237,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isConstructorProperty": true,
						"isExported": true,
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 92,
							"character": 22
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter.name",
						"id": 882
					}
				},
				{
					"id": 2232,
					"name": "remaps",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"comment": {
						"shortText": "Hash to transform entity fields to data store fields.",
						"tags": [
							{
								"tag": "author",
								"text": "Gerkin\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 58,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter.remaps",
						"id": 876
					}
				},
				{
					"id": 2233,
					"name": "remapsInverted",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"comment": {
						"shortText": "Hash to transform data store fields to entity fields.",
						"tags": [
							{
								"tag": "author",
								"text": "Gerkin\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 65,
							"character": 25
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter.remapsInverted",
						"id": 877
					}
				},
				{
					"id": 2235,
					"name": "state",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"comment": {
						"shortText": "Describe current adapter status.",
						"tags": [
							{
								"tag": "author",
								"text": "Gerkin\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 79,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"name": "EAdapterState",
						"id": 861
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter.state",
						"id": 879
					}
				},
				{
					"id": 2229,
					"name": "classEntity",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"getSignature": {
						"id": 2230,
						"name": "__get",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"type": {
							"type": "reference",
							"name": "IAdapterEntityCtr",
							"id": 1181,
							"typeArguments": [
								{
									"type": "unknown",
									"name": "T"
								}
							]
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "Adapter.classEntity",
							"id": 873
						}
					},
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 42,
							"character": 23
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter.classEntity",
						"id": 873
					}
				},
				{
					"id": 2259,
					"name": "configureCollection",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 2260,
							"name": "configureCollection",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Saves the remapping table, the reversed remapping table and the filter table in the adapter. Those tables will be used later when manipulating models & entities.",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2261,
									"name": "tableName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2262,
									"name": "remaps",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IRemapsHash",
										"id": 806
									}
								},
								{
									"id": 2263,
									"name": "filters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IFiltersHash",
										"id": 809
									},
									"defaultValue": " {}"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Adapter.configureCollection",
								"id": 954
							},
							"implementationOf": {
								"type": "reference",
								"name": "DataSourceQuerier.configureCollection",
								"id": 857
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 465,
							"character": 27
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter.configureCollection",
						"id": 954
					},
					"implementationOf": {
						"type": "reference",
						"name": "DataSourceQuerier.configureCollection",
						"id": 856
					}
				},
				{
					"id": 2218,
					"name": "deleteMany",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 2219,
							"name": "deleteMany",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Destroy several entities from the web api store",
								"returns": "Promise resolved once items are deleted. Called with (*undefined*).\n",
								"tags": [
									{
										"tag": "summary",
										"text": "This reimplements {@link Adapters.DiasporaAdapter#deleteMany}, modified for use of web api."
									},
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 2220,
									"name": "table",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the table to delete data from."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2221,
									"name": "queryFind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hash representing entities to find."
									},
									"type": {
										"type": "reference",
										"name": "SelectQuery",
										"id": 377
									}
								},
								{
									"id": 2222,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hash of options."
									},
									"type": {
										"type": "reference",
										"name": "QueryOptions",
										"id": 352
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"name": "Adapter.deleteMany",
								"id": 949
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "WebApiAdapter.deleteMany",
								"id": 1893
							},
							"implementationOf": {
								"type": "reference",
								"name": "DataSourceQuerier.deleteMany",
								"id": 850
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/webApi/adapter.ts",
							"line": 409,
							"character": 24
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Adapter.deleteMany",
						"id": 949
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "WebApiAdapter.deleteMany",
						"id": 1893
					},
					"implementationOf": {
						"type": "reference",
						"name": "DataSourceQuerier.deleteMany",
						"id": 849
					}
				},
				{
					"id": 2213,
					"name": "deleteOne",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 2214,
							"name": "deleteOne",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Destroy a single entity from the web api store",
								"returns": "Promise resolved once item is found. Called with (*undefined*).\n",
								"tags": [
									{
										"tag": "summary",
										"text": "This reimplements {@link Adapters.DiasporaAdapter#deleteOne}, modified for use of web api."
									},
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 2215,
									"name": "table",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the table to delete data from."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2216,
									"name": "queryFind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hash representing the entity to find."
									},
									"type": {
										"type": "reference",
										"name": "SelectQuery",
										"id": 377
									}
								},
								{
									"id": 2217,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hash of options."
									},
									"type": {
										"type": "reference",
										"name": "QueryOptions",
										"id": 352
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"name": "Adapter.deleteOne",
								"id": 944
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "WebApiAdapter.deleteOne",
								"id": 1888
							},
							"implementationOf": {
								"type": "reference",
								"name": "DataSourceQuerier.deleteOne",
								"id": 845
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/webApi/adapter.ts",
							"line": 386,
							"character": 23
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Adapter.deleteOne",
						"id": 944
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "WebApiAdapter.deleteOne",
						"id": 1888
					},
					"implementationOf": {
						"type": "reference",
						"name": "DataSourceQuerier.deleteOne",
						"id": 844
					}
				},
				{
					"id": 2265,
					"name": "emit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2266,
							"name": "emit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Triggers each corresponding handlers in sequence.",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2267,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the event to trigger"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2268,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"comment": {
										"text": "Arguments to pass to each handler. Note that those arguments will be appended with previous handler resolution value, if any."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.emit"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 30,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "SequentialEvent.emit"
					}
				},
				{
					"id": 2196,
					"name": "findMany",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 2197,
							"name": "findMany",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Find several entities from the web api store",
								"returns": "Promise resolved once items are found. Called with (*{@link InMemoryEntity}[]* `entities`).\n",
								"tags": [
									{
										"tag": "summary",
										"text": "This reimplements {@link Adapters.DiasporaAdapter#findMany}, modified for use of web api."
									},
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 2198,
									"name": "table",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the table to retrieve data from."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2199,
									"name": "queryFind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hash representing entities to find."
									},
									"type": {
										"type": "reference",
										"name": "SelectQuery",
										"id": 377
									}
								},
								{
									"id": 2200,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hash of options."
									},
									"type": {
										"type": "reference",
										"name": "QueryOptions",
										"id": 352
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "IRawAdapterEntityAttributes",
											"id": 1176
										}
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"name": "Adapter.findMany",
								"id": 927
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "WebApiAdapter.findMany",
								"id": 1871
							},
							"implementationOf": {
								"type": "reference",
								"name": "DataSourceQuerier.findMany",
								"id": 828
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/webApi/adapter.ts",
							"line": 288,
							"character": 22
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Adapter.findMany",
						"id": 927
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "WebApiAdapter.findMany",
						"id": 1871
					},
					"implementationOf": {
						"type": "reference",
						"name": "DataSourceQuerier.findMany",
						"id": 827
					}
				},
				{
					"id": 2191,
					"name": "findOne",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 2192,
							"name": "findOne",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Find a single entity from the web api store",
								"returns": "Promise resolved once item is found. Called with (*{@link InMemoryEntity}* `entity`).\n",
								"tags": [
									{
										"tag": "summary",
										"text": "This reimplements {@link Adapters.DiasporaAdapter#findOne}, modified for use of web api."
									},
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 2193,
									"name": "table",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the table to retrieve data from."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2194,
									"name": "queryFind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hash representing the entity to find."
									},
									"type": {
										"type": "reference",
										"name": "SelectQuery",
										"id": 377
									}
								},
								{
									"id": 2195,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hash of options."
									},
									"type": {
										"type": "reference",
										"name": "QueryOptions",
										"id": 352
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IRawAdapterEntityAttributes",
												"id": 1176
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"name": "Adapter.findOne",
								"id": 922
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "WebApiAdapter.findOne",
								"id": 1866
							},
							"implementationOf": {
								"type": "reference",
								"name": "DataSourceQuerier.findOne",
								"id": 823
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/webApi/adapter.ts",
							"line": 251,
							"character": 21
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Adapter.findOne",
						"id": 922
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "WebApiAdapter.findOne",
						"id": 1866
					},
					"implementationOf": {
						"type": "reference",
						"name": "DataSourceQuerier.findOne",
						"id": 822
					}
				},
				{
					"id": 2223,
					"name": "generateBaseEndPoint",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"signatures": [
						{
							"id": 2224,
							"name": "generateBaseEndPoint",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generates the URL to the base of the API",
								"returns": "The URI string to the base of the API\n"
							},
							"parameters": [
								{
									"id": 2225,
									"name": "scheme",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Represents the protocol (`http` or `https` most of the time)"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "false"
											}
										]
									}
								},
								{
									"id": 2226,
									"name": "host",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hostname to target (domain name, IP, ...)"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "false"
											}
										]
									}
								},
								{
									"id": 2227,
									"name": "port",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Port of the target to point to"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "false"
											}
										]
									}
								},
								{
									"id": 2228,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Absolute URI on the API"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "WebApiAdapter.generateBaseEndPoint",
								"id": 1904
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/webApi/adapter.ts",
							"line": 446,
							"character": 31
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "WebApiAdapter.generateBaseEndPoint",
						"id": 1904
					}
				},
				{
					"id": 2289,
					"name": "has",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2290,
							"name": "has",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Check if this instance has listeners for the provided event. Alias for `hasEvent`",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2291,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the event to check"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.has"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 89,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "SequentialEvent.has"
					}
				},
				{
					"id": 2292,
					"name": "hasEvent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2293,
							"name": "hasEvent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Check if this instance has listeners for the provided event",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2294,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the event to check"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.hasEvent"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 96,
							"character": 12
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "SequentialEvent.hasEvent"
					}
				},
				{
					"id": 2167,
					"name": "httpRequest",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"signatures": [
						{
							"id": 2168,
							"name": "httpRequest",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Creates a request, send it and get the result"
							},
							"parameters": [
								{
									"id": 2169,
									"name": "method",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "HTTP verb that describes the request type"
									},
									"type": {
										"type": "reference",
										"name": "EHttpVerb",
										"id": 1672
									}
								},
								{
									"id": 2170,
									"name": "endPoint",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Url to send on"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2171,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "Object to send"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "true"
											}
										]
									}
								},
								{
									"id": 2172,
									"name": "queryObject",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "Object to put in query string\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "object"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "TEntitiesJsonResponse",
										"id": 1996
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"name": "WebApiAdapter.httpRequest",
								"id": 1898
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/webApi/subAdapters/nodeAdapter.ts",
							"line": 36,
							"character": 28
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "WebApiAdapter.httpRequest",
						"id": 1898
					}
				},
				{
					"id": 2187,
					"name": "insertMany",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 2188,
							"name": "insertMany",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Insert several entities through an HTTP API.",
								"returns": "Promise resolved once insertion is done. Called with (*{@link WebApiEntity[]}* `entities`).\n",
								"tags": [
									{
										"tag": "summary",
										"text": "This reimplements {@link Adapters.DiasporaAdapter#insertMany}, modified for use of web api."
									},
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 2189,
									"name": "table",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the table to insert data in."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2190,
									"name": "entities",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hash representing entities to insert."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "IRawEntityAttributes",
											"id": 992
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "IRawAdapterEntityAttributes",
											"id": 1176
										}
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"name": "Adapter.insertMany",
								"id": 918
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "WebApiAdapter.insertMany",
								"id": 1862
							},
							"implementationOf": {
								"type": "reference",
								"name": "DataSourceQuerier.insertMany",
								"id": 819
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/webApi/adapter.ts",
							"line": 225,
							"character": 24
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Adapter.insertMany",
						"id": 918
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "WebApiAdapter.insertMany",
						"id": 1862
					},
					"implementationOf": {
						"type": "reference",
						"name": "DataSourceQuerier.insertMany",
						"id": 818
					}
				},
				{
					"id": 2183,
					"name": "insertOne",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 2184,
							"name": "insertOne",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Insert a single entity through an HTTP API.",
								"returns": "Promise resolved once insertion is done. Called with (*{@link WebApiEntity}* `entity`).\n",
								"tags": [
									{
										"tag": "summary",
										"text": "This reimplements {@link Adapters.DiasporaAdapter#insertOne}, modified for use of web api."
									},
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 2185,
									"name": "table",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the table to insert data in."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2186,
									"name": "entity",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hash representing the entity to insert."
									},
									"type": {
										"type": "reference",
										"name": "IRawEntityAttributes",
										"id": 992
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IRawAdapterEntityAttributes",
												"id": 1176
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"name": "Adapter.insertOne",
								"id": 914
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "WebApiAdapter.insertOne",
								"id": 1858
							},
							"implementationOf": {
								"type": "reference",
								"name": "DataSourceQuerier.insertOne",
								"id": 815
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/webApi/adapter.ts",
							"line": 204,
							"character": 23
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Adapter.insertOne",
						"id": 914
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "WebApiAdapter.insertOne",
						"id": 1858
					},
					"implementationOf": {
						"type": "reference",
						"name": "DataSourceQuerier.insertOne",
						"id": 814
					}
				},
				{
					"id": 2250,
					"name": "normalizeOptions",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 2251,
							"name": "normalizeOptions",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Transform options to their canonical form. This function must be applied before calling adapters' methods.",
								"returns": "Transformed options (also called `canonical options`).\n",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin"
									},
									{
										"tag": "throws",
										"text": "{TypeError} Thrown if an option does not have an acceptable type."
									},
									{
										"tag": "throws",
										"text": "{ReferenceError} Thrown if a required option is not present."
									},
									{
										"tag": "throws",
										"text": "{Error} Thrown when there isn't more precise description of the error is available (eg. when conflicts occurs)."
									}
								]
							},
							"parameters": [
								{
									"id": 2252,
									"name": "opts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "QueryOptionsRaw",
										"id": 357
									},
									"defaultValue": " {}"
								}
							],
							"type": {
								"type": "reference",
								"name": "QueryOptions",
								"id": 352
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Adapter.normalizeOptions",
								"id": 905
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 225,
							"character": 24
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter.normalizeOptions",
						"id": 905
					}
				},
				{
					"id": 2253,
					"name": "normalizeQuery",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 2254,
							"name": "normalizeQuery",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Transform a search query to its canonical form, replacing aliases or shorthands by full query.",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2255,
									"name": "originalQuery",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "QueryLanguage.SelectQueryOrConditionRaw",
										"id": 409
									}
								},
								{
									"id": 2256,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "QueryOptions",
										"id": 352
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "QueryLanguage.SelectQueryOrCondition",
								"id": 408
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Adapter.normalizeQuery",
								"id": 908
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 248,
							"character": 22
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter.normalizeQuery",
						"id": 908
					}
				},
				{
					"id": 2269,
					"name": "off",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2270,
							"name": "off",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Remove one, many or all event handlers on some events.",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2271,
									"name": "events",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "String containing event names to unbind. You may indicate several events at once by separating with *spaces*"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2272,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "Function or array of functions to unbind on specified events"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IEventHandler"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IEventHandler"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.off"
							}
						},
						{
							"id": 2273,
							"name": "off",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Remove event handlers on several events at once.",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2274,
									"name": "events",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Object with keys as event names containing a handler or an array of handlers to remove."
									},
									"type": {
										"type": "reference",
										"name": "IEventHash"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.off"
							}
						},
						{
							"id": 2275,
							"name": "off",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Remove all events handlers",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2276,
									"name": "all",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Pass true to delete all handlers"
									},
									"type": {
										"type": "intrinsic",
										"name": "true"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.off"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 38,
							"character": 7
						},
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 45,
							"character": 7
						},
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 52,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "SequentialEvent.off"
					}
				},
				{
					"id": 2277,
					"name": "on",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2278,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add one or many event handlers.",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2279,
									"name": "events",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "String containing event names to bind. You may indicate several events at once by separating with *spaces*"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2280,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Function or array of functions to bind on specified events"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IEventHandler"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IEventHandler"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.on"
							}
						},
						{
							"id": 2281,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add event handlers on several events at once.",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2282,
									"name": "events",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Object with keys as event names containing a handler or an array of handlers to add."
									},
									"type": {
										"type": "reference",
										"name": "IEventHash"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.on"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 60,
							"character": 6
						},
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 67,
							"character": 6
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "SequentialEvent.on"
					}
				},
				{
					"id": 2283,
					"name": "once",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2284,
							"name": "once",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add one or many event handlers. These listeners will be executed once, then are removed",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2285,
									"name": "events",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "String containing event names to bind. You may indicate several events at once by separating with *spaces*"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2286,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Function or array of functions to bind on specified events"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IEventHandler"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IEventHandler"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.once"
							}
						},
						{
							"id": 2287,
							"name": "once",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add event handlers on several events at once. These listeners will be executed once, then are removed",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2288,
									"name": "events",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Object with keys as event names containing a handler or an array of handlers to add."
									},
									"type": {
										"type": "reference",
										"name": "IEventHash"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.once"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 75,
							"character": 8
						},
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 82,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "SequentialEvent.once"
					}
				},
				{
					"id": 2240,
					"name": "remapInput",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 2241,
							"name": "remapInput",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "TODO.",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin"
									},
									{
										"tag": "see",
										"text": "TODO remapping."
									},
									{
										"tag": "see",
										"text": "{@link Adapters.Adapter#remapIO remapIO}\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 2242,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IEnumeratedHash",
										"id": 802,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 2243,
									"name": "tableName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2244,
									"name": "query",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "T",
										"constraint": {
											"type": "reference",
											"name": "IEnumeratedHash",
											"id": 802,
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "any"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Dictionary",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Adapter.remapInput",
								"id": 895
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 195,
							"character": 18
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter.remapInput",
						"id": 895
					}
				},
				{
					"id": 2245,
					"name": "remapOutput",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 2246,
							"name": "remapOutput",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "TODO.",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin"
									},
									{
										"tag": "see",
										"text": "TODO remapping."
									},
									{
										"tag": "see",
										"text": "{@link Adapters.Adapter#remapIO remapIO}\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 2247,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IEnumeratedHash",
										"id": 802,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 2248,
									"name": "tableName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2249,
									"name": "query",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "T",
										"constraint": {
											"type": "reference",
											"name": "IEnumeratedHash",
											"id": 802,
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "any"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Dictionary",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Adapter.remapOutput",
								"id": 900
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 209,
							"character": 19
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter.remapOutput",
						"id": 900
					}
				},
				{
					"id": 2257,
					"name": "toJSON",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 2258,
							"name": "toJSON",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a POJO representing the current adapter.",
								"returns": "JSON representation of the adapter.\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "object"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Adapter.toJSON",
								"id": 912
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 310,
							"character": 14
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter.toJSON",
						"id": 912
					}
				},
				{
					"id": 2207,
					"name": "updateMany",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 2208,
							"name": "updateMany",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Update several entities from the web api store",
								"returns": "Promise resolved once update is done. Called with (*{@link InMemoryEntity}[]* `entities`).\n",
								"tags": [
									{
										"tag": "summary",
										"text": "This reimplements {@link Adapters.DiasporaAdapter#updateMany}, modified for use of web api."
									},
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 2209,
									"name": "table",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the table to update data in."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2210,
									"name": "queryFind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hash representing entities to find."
									},
									"type": {
										"type": "reference",
										"name": "SelectQuery",
										"id": 377
									}
								},
								{
									"id": 2211,
									"name": "update",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Object properties to set."
									},
									"type": {
										"type": "reference",
										"name": "IRawEntityAttributes",
										"id": 992
									}
								},
								{
									"id": 2212,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hash of options."
									},
									"type": {
										"type": "reference",
										"name": "QueryOptions",
										"id": 352
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "IRawAdapterEntityAttributes",
											"id": 1176
										}
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"name": "Adapter.updateMany",
								"id": 938
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "WebApiAdapter.updateMany",
								"id": 1882
							},
							"implementationOf": {
								"type": "reference",
								"name": "DataSourceQuerier.updateMany",
								"id": 839
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/webApi/adapter.ts",
							"line": 357,
							"character": 24
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Adapter.updateMany",
						"id": 938
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "WebApiAdapter.updateMany",
						"id": 1882
					},
					"implementationOf": {
						"type": "reference",
						"name": "DataSourceQuerier.updateMany",
						"id": 838
					}
				},
				{
					"id": 2201,
					"name": "updateOne",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 2202,
							"name": "updateOne",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Update a single entity from the web api store",
								"returns": "Promise resolved once update is done. Called with (*{@link InMemoryEntity}* `entity`).\n",
								"tags": [
									{
										"tag": "summary",
										"text": "This reimplements {@link Adapters.DiasporaAdapter#updateOne}, modified for use of web api."
									},
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 2203,
									"name": "table",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the table to update data in."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2204,
									"name": "queryFind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hash representing the entity to find."
									},
									"type": {
										"type": "reference",
										"name": "SelectQuery",
										"id": 377
									}
								},
								{
									"id": 2205,
									"name": "update",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Object properties to set."
									},
									"type": {
										"type": "reference",
										"name": "IRawEntityAttributes",
										"id": 992
									}
								},
								{
									"id": 2206,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hash of options."
									},
									"type": {
										"type": "reference",
										"name": "QueryOptions",
										"id": 352
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IRawAdapterEntityAttributes",
												"id": 1176
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"name": "Adapter.updateOne",
								"id": 932
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "WebApiAdapter.updateOne",
								"id": 1876
							},
							"implementationOf": {
								"type": "reference",
								"name": "DataSourceQuerier.updateOne",
								"id": 833
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/webApi/adapter.ts",
							"line": 326,
							"character": 23
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Adapter.updateOne",
						"id": 932
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "WebApiAdapter.updateOne",
						"id": 1876
					},
					"implementationOf": {
						"type": "reference",
						"name": "DataSourceQuerier.updateOne",
						"id": 832
					}
				},
				{
					"id": 2238,
					"name": "waitReady",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 2239,
							"name": "waitReady",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a promise resolved once adapter state is ready.",
								"returns": "Promise resolved when adapter is ready, and rejected if an error occured.\n",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin"
									},
									{
										"tag": "listens",
										"text": "Adapters.Adapter#error"
									},
									{
										"tag": "listens",
										"text": "Adapters.Adapter#ready"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "this"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Adapter.waitReady",
								"id": 893
							},
							"implementationOf": {
								"type": "reference",
								"name": "DataSourceQuerier.waitReady",
								"id": 855
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 172,
							"character": 17
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter.waitReady",
						"id": 893
					},
					"implementationOf": {
						"type": "reference",
						"name": "DataSourceQuerier.waitReady",
						"id": 854
					}
				},
				{
					"id": 2173,
					"name": "httpErrorFactories",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isProtected": true
					},
					"children": [
						{
							"id": 2174,
							"name": "400",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2175,
									"name": "400",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2176,
											"name": "xhr",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IXhrResponse",
												"id": 1518
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Error"
									}
								}
							],
							"sources": [
								{
									"fileName": "adapters/webApi/adapter.ts",
									"line": 84,
									"character": 5
								}
							]
						},
						{
							"id": 2177,
							"name": "404",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2178,
									"name": "404",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2179,
											"name": "xhr",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IXhrResponse",
												"id": 1518
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Error"
									}
								}
							],
							"sources": [
								{
									"fileName": "adapters/webApi/adapter.ts",
									"line": 90,
									"character": 5
								}
							]
						},
						{
							"id": 2180,
							"name": "_",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2181,
									"name": "_",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2182,
											"name": "xhr",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IXhrResponse",
												"id": 1518
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Error"
									}
								}
							],
							"sources": [
								{
									"fileName": "adapters/webApi/adapter.ts",
									"line": 92,
									"character": 3
								}
							]
						}
					],
					"groups": [
						{
							"title": "Functions",
							"kind": 64,
							"children": [
								2174,
								2177,
								2180
							]
						}
					],
					"sources": [
						{
							"fileName": "adapters/webApi/adapter.ts",
							"line": 83,
							"character": 45
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "WebApiAdapter.httpErrorFactories",
						"id": 1824
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						2162
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						2264,
						2236,
						2234,
						2231,
						2237,
						2232,
						2233,
						2235
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						2229
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						2259,
						2218,
						2213,
						2265,
						2196,
						2191,
						2223,
						2289,
						2292,
						2167,
						2187,
						2183,
						2250,
						2253,
						2269,
						2277,
						2283,
						2240,
						2245,
						2257,
						2207,
						2201,
						2238
					]
				},
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						2173
					]
				}
			],
			"sources": [
				{
					"fileName": "adapters/webApi/subAdapters/nodeAdapter.ts",
					"line": 17,
					"character": 30
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "WebApiAdapter",
					"id": 1823
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "DataSourceQuerier",
					"id": 812,
					"typeArguments": [
						{
							"type": "reference",
							"name": "IRawAdapterEntityAttributes",
							"id": 1176
						}
					]
				}
			]
		},
		{
			"id": 116,
			"name": "PathStack",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "The PathStack class allows model validation to follow different paths in model description & entity."
			},
			"children": [
				{
					"id": 119,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"comment": {
						"shortText": "Constructs a pathstack.\nConstructs a pathstack.",
						"tags": [
							{
								"tag": "author",
								"text": "gerkin\n"
							},
							{
								"tag": "author",
								"text": "gerkin\n"
							}
						]
					},
					"signatures": [
						{
							"id": 120,
							"name": "new PathStack",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "Constructs a pathstack.\nConstructs a pathstack."
							},
							"parameters": [
								{
									"id": 121,
									"name": "segments",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "PathStack",
								"id": 116
							}
						}
					],
					"sources": [
						{
							"fileName": "entityTransformers/pathStack.ts",
							"line": 8,
							"character": 37
						},
						{
							"fileName": "entityTransformers/pathStack.ts",
							"line": 10,
							"character": 42
						}
					]
				},
				{
					"id": 117,
					"name": "segmentsEntity",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "entityTransformers/pathStack.ts",
							"line": 7,
							"character": 22
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 118,
					"name": "segmentsValidation",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "entityTransformers/pathStack.ts",
							"line": 8,
							"character": 26
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 135,
					"name": "clone",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 136,
							"name": "clone",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Duplicate this PathStack, detaching its state from the new.",
								"returns": "Clone of caller PathStack.\n"
							},
							"type": {
								"type": "reference",
								"name": "PathStack",
								"id": 116
							}
						}
					],
					"sources": [
						{
							"fileName": "entityTransformers/pathStack.ts",
							"line": 90,
							"character": 13
						}
					]
				},
				{
					"id": 122,
					"name": "pushEntityProp",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 123,
							"name": "pushEntityProp",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add a path segment for entity navigation.",
								"returns": "Returns `this`.\n"
							},
							"parameters": [
								{
									"id": 124,
									"name": "prop",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"comment": {
										"text": "Properties to add."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					],
					"sources": [
						{
							"fileName": "entityTransformers/pathStack.ts",
							"line": 37,
							"character": 22
						}
					]
				},
				{
					"id": 128,
					"name": "pushProp",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 129,
							"name": "pushProp",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add a path segment for both entity & model description navigation.",
								"returns": "Returns `this`.\n"
							},
							"parameters": [
								{
									"id": 130,
									"name": "prop",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"comment": {
										"text": "Properties to add."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					],
					"sources": [
						{
							"fileName": "entityTransformers/pathStack.ts",
							"line": 65,
							"character": 16
						}
					]
				},
				{
					"id": 125,
					"name": "pushValidationProp",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 126,
							"name": "pushValidationProp",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add a path segment for model description navigation.",
								"returns": "Returns `this`.\n"
							},
							"parameters": [
								{
									"id": 127,
									"name": "prop",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"comment": {
										"text": "Properties to add."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					],
					"sources": [
						{
							"fileName": "entityTransformers/pathStack.ts",
							"line": 51,
							"character": 26
						}
					]
				},
				{
					"id": 133,
					"name": "toArray",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 134,
							"name": "toArray",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Cast this PathStack to its representing arrays."
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "array",
									"elementType": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "entityTransformers/pathStack.ts",
							"line": 81,
							"character": 15
						}
					]
				},
				{
					"id": 131,
					"name": "toValidatePath",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 132,
							"name": "toValidatePath",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get a string version of entity segments.",
								"returns": "String representation of path in entity.\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "entityTransformers/pathStack.ts",
							"line": 74,
							"character": 22
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						119
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						117,
						118
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						135,
						122,
						128,
						125,
						133,
						131
					]
				}
			],
			"sources": [
				{
					"fileName": "entityTransformers/pathStack.ts",
					"line": 6,
					"character": 22
				}
			]
		},
		{
			"id": 750,
			"name": "Set",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Collections are used to manage multiple entities at the same time. You may try to use this class as an array."
			},
			"children": [
				{
					"id": 763,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"comment": {
						"shortText": "Create a new set, managing provided `entities` that must be generated from provided `model`."
					},
					"signatures": [
						{
							"id": 764,
							"name": "new Set",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "Create a new set, managing provided `entities` that must be generated from provided `model`."
							},
							"parameters": [
								{
									"id": 765,
									"name": "model",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Model describing entities managed by this set."
									},
									"type": {
										"type": "reference",
										"name": "Model",
										"id": 576
									}
								},
								{
									"id": 766,
									"name": "entities",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"comment": {
										"shortText": "Entities to manage with this set. Arguments are flattened, so you can provide as many nested arrays as you want.\n"
									},
									"type": {
										"type": "reference",
										"name": "Array",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Entity",
														"id": 1022
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "Entity",
															"id": 1022
														}
													}
												]
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Set",
								"id": 750
							}
						}
					],
					"sources": [
						{
							"fileName": "entities/set.ts",
							"line": 108,
							"character": 32
						}
					]
				},
				{
					"id": 761,
					"name": "_entities",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"comment": {
						"shortText": "List entities of this set.",
						"tags": [
							{
								"tag": "author",
								"text": "Gerkin\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "entities/set.ts",
							"line": 101,
							"character": 18
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "Entity",
							"id": 1022
						}
					}
				},
				{
					"id": 762,
					"name": "_model",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Model that generated this set.",
						"tags": [
							{
								"tag": "author",
								"text": "Gerkin\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "entities/set.ts",
							"line": 108,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"name": "Model",
						"id": 576
					}
				},
				{
					"id": 751,
					"name": "entities",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"getSignature": {
						"id": 752,
						"name": "__get",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"type": {
							"type": "array",
							"elementType": {
								"type": "reference",
								"name": "Entity",
								"id": 1022
							}
						}
					},
					"setSignature": {
						"id": 753,
						"name": "__set",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {},
						"parameters": [
							{
								"id": 754,
								"name": "newEntities",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {},
								"type": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"name": "Entity",
										"id": 1022
									}
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						}
					},
					"sources": [
						{
							"fileName": "entities/set.ts",
							"line": 68,
							"character": 20
						},
						{
							"fileName": "entities/set.ts",
							"line": 71,
							"character": 20
						}
					]
				},
				{
					"id": 759,
					"name": "length",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"comment": {
						"shortText": "Number of entities in this set.",
						"tags": [
							{
								"tag": "author",
								"text": "Gerkin\n"
							}
						]
					},
					"getSignature": {
						"id": 760,
						"name": "__get",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"comment": {
							"shortText": "Number of entities in this set.",
							"tags": [
								{
									"tag": "author",
									"text": "Gerkin\n"
								}
							]
						},
						"type": {
							"type": "intrinsic",
							"name": "number"
						}
					},
					"sources": [
						{
							"fileName": "entities/set.ts",
							"line": 92,
							"character": 18
						}
					]
				},
				{
					"id": 757,
					"name": "model",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"getSignature": {
						"id": 758,
						"name": "__get",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"type": {
							"type": "reference",
							"name": "Model",
							"id": 576
						}
					},
					"sources": [
						{
							"fileName": "entities/set.ts",
							"line": 83,
							"character": 17
						}
					]
				},
				{
					"id": 755,
					"name": "toChainable",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"getSignature": {
						"id": 756,
						"name": "__get",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"type": {
							"type": "reference",
							"name": "LoDashExplicitWrapper",
							"typeArguments": [
								{
									"type": "array",
									"elementType": {
										"type": "reference",
										"name": "Entity",
										"id": 1022
									}
								}
							]
						}
					},
					"sources": [
						{
							"fileName": "entities/set.ts",
							"line": 79,
							"character": 23
						}
					]
				},
				{
					"id": 777,
					"name": "destroy",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 778,
							"name": "destroy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Destroy all entities from this collection.",
								"returns": "Promise resolved once all items are destroyed.",
								"tags": [
									{
										"tag": "fires",
										"text": "EntityFactory.Entity#beforeDelete"
									},
									{
										"tag": "fires",
										"text": "EntityFactory.Entity#afterDelete"
									},
									{
										"tag": "author",
										"text": "gerkin"
									},
									{
										"tag": "see",
										"text": "{@link EntityFactory.Entity#destroy}\n"
									}
								]
							},
							"parameters": [
								{
									"id": 779,
									"name": "sourceName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "Name of the data source to delete entities from."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Set",
										"id": 750
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "entities/set.ts",
							"line": 217,
							"character": 21
						}
					]
				},
				{
					"id": 774,
					"name": "fetch",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 775,
							"name": "fetch",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Reload all entities of this collection.",
								"returns": "Promise resolved once all items are reloaded.",
								"tags": [
									{
										"tag": "fires",
										"text": "EntityFactory.Entity#beforeFind"
									},
									{
										"tag": "fires",
										"text": "EntityFactory.Entity#afterFind"
									},
									{
										"tag": "author",
										"text": "gerkin"
									},
									{
										"tag": "see",
										"text": "{@link EntityFactory.Entity#fetch}\n"
									}
								]
							},
							"parameters": [
								{
									"id": 776,
									"name": "sourceName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "Data source name to reload entities from."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Set",
										"id": 750
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "entities/set.ts",
							"line": 202,
							"character": 19
						}
					]
				},
				{
					"id": 771,
					"name": "persist",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 772,
							"name": "persist",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Persist all entities of this collection.",
								"returns": "Promise resolved once all items are persisted.",
								"tags": [
									{
										"tag": "fires",
										"text": "EntityFactory.Entity#beforeUpdate"
									},
									{
										"tag": "fires",
										"text": "EntityFactory.Entity#afterUpdate"
									},
									{
										"tag": "author",
										"text": "gerkin"
									},
									{
										"tag": "see",
										"text": "{@link EntityFactory.Entity#persist}\n"
									}
								]
							},
							"parameters": [
								{
									"id": 773,
									"name": "sourceName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "Data source name to persist in."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Set",
										"id": 750
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "entities/set.ts",
							"line": 157,
							"character": 21
						}
					]
				},
				{
					"id": 783,
					"name": "toObject",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 784,
							"name": "toObject",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a POJO representation of this set's data.",
								"returns": "POJO representation of set & children.\n",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IRawEntityAttributes",
												"id": 992
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "entities/set.ts",
							"line": 242,
							"character": 16
						}
					]
				},
				{
					"id": 780,
					"name": "update",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 781,
							"name": "update",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Update all entities in the set with given object.",
								"returns": "`this`.\n",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 782,
									"name": "newData",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Attributes to change in each entity of the collection."
									},
									"type": {
										"type": "reference",
										"name": "IRawEntityAttributes",
										"id": 992
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Set",
								"id": 750
							}
						}
					],
					"sources": [
						{
							"fileName": "entities/set.ts",
							"line": 229,
							"character": 14
						}
					]
				},
				{
					"id": 767,
					"name": "checkEntitiesFromModel",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 768,
							"name": "checkEntitiesFromModel",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Check if all entities in the first argument are from the expected model.",
								"returns": "This function does not return anything.\n",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin"
									},
									{
										"tag": "throws",
										"text": "{TypeError} Thrown if one of the entity is not from provided `model`."
									}
								]
							},
							"parameters": [
								{
									"id": 769,
									"name": "entities",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Array of entities to check."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Entity",
											"id": 1022
										}
									}
								},
								{
									"id": 770,
									"name": "model",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Model expected to be the source of all entities."
									},
									"type": {
										"type": "reference",
										"name": "Model",
										"id": 576
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "entities/set.ts",
							"line": 135,
							"character": 37
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						763
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						761,
						762
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						751,
						759,
						757,
						755
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						777,
						774,
						771,
						783,
						780,
						767
					]
				}
			],
			"sources": [
				{
					"fileName": "entities/set.ts",
					"line": 67,
					"character": 16
				}
			]
		},
		{
			"id": 329,
			"name": "SetValidationError",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "This class represents an error related to validation on a set."
			},
			"children": [
				{
					"id": 331,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"comment": {
						"shortText": "Construct a new set validation error.",
						"tags": [
							{
								"tag": "author",
								"text": "gerkin"
							},
							{
								"tag": "see",
								"text": "Diaspora.check"
							}
						]
					},
					"signatures": [
						{
							"id": 332,
							"name": "new SetValidationError",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "Construct a new set validation error.",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin"
									},
									{
										"tag": "see",
										"text": "Diaspora.check"
									}
								]
							},
							"parameters": [
								{
									"id": 333,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Message of this error."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 334,
									"name": "validationErrors",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Array of validation errors."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "EntityValidationError",
											"id": 308
										}
									}
								},
								{
									"id": 335,
									"name": "errorArgs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"comment": {
										"shortText": "Arguments to transfer to parent Error.\n"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "SetValidationError",
								"id": 329
							},
							"overwrites": {
								"type": "reference",
								"name": "ExtendableError.__constructor",
								"id": 2
							}
						}
					],
					"sources": [
						{
							"fileName": "errors/setValidationError.ts",
							"line": 10,
							"character": 60
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "ExtendableError.__constructor",
						"id": 2
					}
				},
				{
					"id": 330,
					"name": "validationErrors",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"sources": [
						{
							"fileName": "errors/setValidationError.ts",
							"line": 10,
							"character": 34
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "EntityValidationError",
							"id": 308
						}
					}
				},
				{
					"id": 339,
					"name": "message",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExported": true
					},
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.es5.d.ts",
							"line": 886,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Error.message"
					}
				},
				{
					"id": 338,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExported": true
					},
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.es5.d.ts",
							"line": 885,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Error.name"
					}
				},
				{
					"id": 340,
					"name": "stack",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.es5.d.ts",
							"line": 887,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"overwrites": {
						"type": "reference",
						"name": "Error.stack"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Error.stack"
					}
				},
				{
					"id": 336,
					"name": "stringifyValidationError",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"signatures": [
						{
							"id": 337,
							"name": "stringifyValidationError",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Concatenate each validation error to generate a readable message",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "ValidationError.stringifyValidationError",
								"id": 19
							}
						}
					],
					"sources": [
						{
							"fileName": "errors/setValidationError.ts",
							"line": 36,
							"character": 35
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "ValidationError.stringifyValidationError",
						"id": 19
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						331
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						330,
						339,
						338,
						340
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						336
					]
				}
			],
			"sources": [
				{
					"fileName": "errors/setValidationError.ts",
					"line": 9,
					"character": 31
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "ValidationError",
					"id": 18
				}
			]
		},
		{
			"id": 18,
			"name": "ValidationError",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true,
				"isAbstract": true
			},
			"comment": {
				"shortText": "This class represents an error related to validation.",
				"tags": [
					{
						"tag": "author",
						"text": "Gerkin\n"
					}
				]
			},
			"children": [
				{
					"id": 21,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"comment": {
						"shortText": "Construct a new extendable error.",
						"tags": [
							{
								"tag": "author",
								"text": "gerkin"
							}
						]
					},
					"signatures": [
						{
							"id": 22,
							"name": "new ValidationError",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "Construct a new extendable error.",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 23,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Message of this error."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 24,
									"name": "errorArgs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"comment": {
										"shortText": "Arguments to transfer to parent Error.\n"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "ValidationError",
								"id": 18
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ExtendableError.__constructor",
								"id": 2
							}
						}
					],
					"sources": [
						{
							"fileName": "errors/extendableError.ts",
							"line": 6,
							"character": 53
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "ExtendableError.__constructor",
						"id": 2
					}
				},
				{
					"id": 26,
					"name": "message",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExported": true
					},
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.es5.d.ts",
							"line": 886,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Error.message"
					}
				},
				{
					"id": 25,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExported": true
					},
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.es5.d.ts",
							"line": 885,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Error.name"
					}
				},
				{
					"id": 27,
					"name": "stack",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.es5.d.ts",
							"line": 887,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"overwrites": {
						"type": "reference",
						"name": "Error.stack"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Error.stack"
					}
				},
				{
					"id": 19,
					"name": "stringifyValidationError",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isProtected": true,
						"isAbstract": true
					},
					"signatures": [
						{
							"id": 20,
							"name": "stringifyValidationError",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a displayable string to resume the validation error.",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "errors/validationError.ts",
							"line": 14,
							"character": 44
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						21
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						26,
						25,
						27
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						19
					]
				}
			],
			"sources": [
				{
					"fileName": "errors/validationError.ts",
					"line": 8,
					"character": 37
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "ExtendableError",
					"id": 1
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"name": "EntityValidationError",
					"id": 308
				},
				{
					"type": "reference",
					"name": "SetValidationError",
					"id": 329
				}
			]
		},
		{
			"id": 1823,
			"name": "WebApiAdapter",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true,
				"isAbstract": true
			},
			"comment": {
				"shortText": "Adapter for RESTful HTTP APIs.",
				"tags": [
					{
						"tag": "see",
						"text": "https://www.npmjs.com/package/diaspora-server Diaspora-Server: Package built on Diaspora & Express.js to easily configure HTTP APIs compatible with this adapter.\n"
					}
				]
			},
			"children": [
				{
					"id": 1839,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"comment": {
						"shortText": "Create a new instance of web api adapter.",
						"tags": [
							{
								"tag": "author",
								"text": "Gerkin\n"
							}
						]
					},
					"signatures": [
						{
							"id": 1840,
							"name": "new WebApiAdapter",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "Create a new instance of web api adapter.",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1841,
									"name": "dataSourceName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1842,
									"name": "config",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Configuration of this adapter."
									},
									"type": {
										"type": "reference",
										"name": "IWebApiAdapterInternalConfig",
										"id": 1658
									}
								},
								{
									"id": 1843,
									"name": "eventProviders",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Event providers that will catch requests and pre/post process around them."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "IEventProvider",
											"id": 1671
										}
									},
									"defaultValue": " [DefaultQueryTransformerFactory()]"
								}
							],
							"type": {
								"type": "reference",
								"name": "WebApiAdapter",
								"id": 1823
							},
							"overwrites": {
								"type": "reference",
								"name": "Adapter.__constructor",
								"id": 880
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/webApi/adapter.ts",
							"line": 107,
							"character": 56
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Adapter.__constructor",
						"id": 880
					}
				},
				{
					"id": 1965,
					"name": "__events",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"comment": {
						"shortText": "Events hash attached to this SequentialEvent instance"
					},
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 16,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"name": "IEventsHash"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SequentialEvent.__events"
					}
				},
				{
					"id": 1937,
					"name": "_classEntity",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isConstructorProperty": true,
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 91,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"name": "IAdapterEntityCtr",
						"id": 1181,
						"typeArguments": [
							{
								"type": "reference",
								"name": "WebApiEntity",
								"id": 1475
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter._classEntity",
						"id": 881
					}
				},
				{
					"id": 1834,
					"name": "baseEndPoint",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"sources": [
						{
							"fileName": "adapters/webApi/adapter.ts",
							"line": 100,
							"character": 30
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1935,
					"name": "error",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Error triggered by adapter initialization.",
						"tags": [
							{
								"tag": "author",
								"text": "Gerkin\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 72,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"name": "Error",
						"id": 9
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter.error",
						"id": 878
					}
				},
				{
					"id": 1932,
					"name": "filters",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"comment": {
						"shortText": "Hash of functions to cast data store values to JSON standard values in entity.",
						"tags": [
							{
								"tag": "author",
								"text": "Gerkin\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 51,
							"character": 18
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter.filters",
						"id": 875
					}
				},
				{
					"id": 1938,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isConstructorProperty": true,
						"isExported": true,
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 92,
							"character": 22
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter.name",
						"id": 882
					}
				},
				{
					"id": 1835,
					"name": "pluralApis",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Hash mapping singular API names to plural API names",
						"tags": [
							{
								"tag": "author",
								"text": "Gerkin\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "adapters/webApi/adapter.ts",
							"line": 107,
							"character": 28
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1836,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"indexSignature": {
								"id": 1837,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 1838,
										"name": "key",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"sources": [
								{
									"fileName": "adapters/webApi/adapter.ts",
									"line": 107,
									"character": 29
								}
							]
						}
					}
				},
				{
					"id": 1933,
					"name": "remaps",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"comment": {
						"shortText": "Hash to transform entity fields to data store fields.",
						"tags": [
							{
								"tag": "author",
								"text": "Gerkin\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 58,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter.remaps",
						"id": 876
					}
				},
				{
					"id": 1934,
					"name": "remapsInverted",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"comment": {
						"shortText": "Hash to transform data store fields to entity fields.",
						"tags": [
							{
								"tag": "author",
								"text": "Gerkin\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 65,
							"character": 25
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter.remapsInverted",
						"id": 877
					}
				},
				{
					"id": 1936,
					"name": "state",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"comment": {
						"shortText": "Describe current adapter status.",
						"tags": [
							{
								"tag": "author",
								"text": "Gerkin\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 79,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"name": "EAdapterState",
						"id": 861
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter.state",
						"id": 879
					}
				},
				{
					"id": 1930,
					"name": "classEntity",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"getSignature": {
						"id": 1931,
						"name": "__get",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"type": {
							"type": "reference",
							"name": "IAdapterEntityCtr",
							"id": 1181,
							"typeArguments": [
								{
									"type": "unknown",
									"name": "T"
								}
							]
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "Adapter.classEntity",
							"id": 873
						}
					},
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 42,
							"character": 23
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter.classEntity",
						"id": 873
					}
				},
				{
					"id": 1910,
					"name": "apiQuery",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 1911,
							"name": "apiQuery",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Send an http query to the targeted `endPoint` using `method` as verb.",
								"returns": "Promise resolved with the resulting data.\n",
								"tags": [
									{
										"tag": "async",
										"text": ""
									}
								]
							},
							"parameters": [
								{
									"id": 1912,
									"name": "verb",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Valid HTTP verb. This adapter uses `GET`, `POST`, `PATCH` & `DELETE`."
									},
									"type": {
										"type": "reference",
										"name": "EHttpVerb",
										"id": 1672
									}
								},
								{
									"id": 1913,
									"name": "endPoint",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the endpoint to interact with. It will be prepended with {@link Adapters.WebApiDiasporaAdapter#baseEndPoint}."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1914,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "Optionnal data to send within the body of the request."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "object"
											}
										]
									}
								},
								{
									"id": 1915,
									"name": "queryObject",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "Optionnal query object to send along with the request."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "object"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IRawAdapterEntityAttributes",
												"id": 1176
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								]
							}
						},
						{
							"id": 1916,
							"name": "apiQuery",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1917,
									"name": "verb",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "EHttpVerb",
										"id": 1672
									}
								},
								{
									"id": 1918,
									"name": "endPoint",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "PluralEndpoint",
										"id": 1677
									}
								},
								{
									"id": 1919,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "object"
											}
										]
									}
								},
								{
									"id": 1920,
									"name": "queryObject",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "object"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "IRawAdapterEntityAttributes",
											"id": 1176
										}
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/webApi/adapter.ts",
							"line": 462,
							"character": 17
						},
						{
							"fileName": "adapters/webApi/adapter.ts",
							"line": 468,
							"character": 17
						},
						{
							"fileName": "adapters/webApi/adapter.ts",
							"line": 474,
							"character": 17
						}
					]
				},
				{
					"id": 1960,
					"name": "configureCollection",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 1961,
							"name": "configureCollection",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Saves the remapping table, the reversed remapping table and the filter table in the adapter. Those tables will be used later when manipulating models & entities.",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1962,
									"name": "tableName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1963,
									"name": "remaps",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IRemapsHash",
										"id": 806
									}
								},
								{
									"id": 1964,
									"name": "filters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IFiltersHash",
										"id": 809
									},
									"defaultValue": " {}"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Adapter.configureCollection",
								"id": 954
							},
							"implementationOf": {
								"type": "reference",
								"name": "DataSourceQuerier.configureCollection",
								"id": 857
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 465,
							"character": 27
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter.configureCollection",
						"id": 954
					},
					"implementationOf": {
						"type": "reference",
						"name": "DataSourceQuerier.configureCollection",
						"id": 856
					}
				},
				{
					"id": 1893,
					"name": "deleteMany",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 1894,
							"name": "deleteMany",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Destroy several entities from the web api store",
								"returns": "Promise resolved once items are deleted. Called with (*undefined*).\n",
								"tags": [
									{
										"tag": "summary",
										"text": "This reimplements {@link Adapters.DiasporaAdapter#deleteMany}, modified for use of web api."
									},
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 1895,
									"name": "table",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the table to delete data from."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1896,
									"name": "queryFind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hash representing entities to find."
									},
									"type": {
										"type": "reference",
										"name": "SelectQuery",
										"id": 377
									}
								},
								{
									"id": 1897,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hash of options."
									},
									"type": {
										"type": "reference",
										"name": "QueryOptions",
										"id": 352
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"name": "Adapter.deleteMany",
								"id": 949
							},
							"implementationOf": {
								"type": "reference",
								"name": "DataSourceQuerier.deleteMany",
								"id": 850
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/webApi/adapter.ts",
							"line": 409,
							"character": 24
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Adapter.deleteMany",
						"id": 949
					},
					"implementationOf": {
						"type": "reference",
						"name": "DataSourceQuerier.deleteMany",
						"id": 849
					}
				},
				{
					"id": 1888,
					"name": "deleteOne",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 1889,
							"name": "deleteOne",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Destroy a single entity from the web api store",
								"returns": "Promise resolved once item is found. Called with (*undefined*).\n",
								"tags": [
									{
										"tag": "summary",
										"text": "This reimplements {@link Adapters.DiasporaAdapter#deleteOne}, modified for use of web api."
									},
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 1890,
									"name": "table",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the table to delete data from."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1891,
									"name": "queryFind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hash representing the entity to find."
									},
									"type": {
										"type": "reference",
										"name": "SelectQuery",
										"id": 377
									}
								},
								{
									"id": 1892,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hash of options."
									},
									"type": {
										"type": "reference",
										"name": "QueryOptions",
										"id": 352
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"name": "Adapter.deleteOne",
								"id": 944
							},
							"implementationOf": {
								"type": "reference",
								"name": "DataSourceQuerier.deleteOne",
								"id": 845
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/webApi/adapter.ts",
							"line": 386,
							"character": 23
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Adapter.deleteOne",
						"id": 944
					},
					"implementationOf": {
						"type": "reference",
						"name": "DataSourceQuerier.deleteOne",
						"id": 844
					}
				},
				{
					"id": 1966,
					"name": "emit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1967,
							"name": "emit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Triggers each corresponding handlers in sequence.",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1968,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the event to trigger"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1969,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"comment": {
										"text": "Arguments to pass to each handler. Note that those arguments will be appended with previous handler resolution value, if any."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.emit"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 30,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "SequentialEvent.emit"
					}
				},
				{
					"id": 1871,
					"name": "findMany",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 1872,
							"name": "findMany",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Find several entities from the web api store",
								"returns": "Promise resolved once items are found. Called with (*{@link InMemoryEntity}[]* `entities`).\n",
								"tags": [
									{
										"tag": "summary",
										"text": "This reimplements {@link Adapters.DiasporaAdapter#findMany}, modified for use of web api."
									},
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 1873,
									"name": "table",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the table to retrieve data from."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1874,
									"name": "queryFind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hash representing entities to find."
									},
									"type": {
										"type": "reference",
										"name": "SelectQuery",
										"id": 377
									}
								},
								{
									"id": 1875,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hash of options."
									},
									"type": {
										"type": "reference",
										"name": "QueryOptions",
										"id": 352
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "IRawAdapterEntityAttributes",
											"id": 1176
										}
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"name": "Adapter.findMany",
								"id": 927
							},
							"implementationOf": {
								"type": "reference",
								"name": "DataSourceQuerier.findMany",
								"id": 828
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/webApi/adapter.ts",
							"line": 288,
							"character": 22
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Adapter.findMany",
						"id": 927
					},
					"implementationOf": {
						"type": "reference",
						"name": "DataSourceQuerier.findMany",
						"id": 827
					}
				},
				{
					"id": 1866,
					"name": "findOne",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 1867,
							"name": "findOne",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Find a single entity from the web api store",
								"returns": "Promise resolved once item is found. Called with (*{@link InMemoryEntity}* `entity`).\n",
								"tags": [
									{
										"tag": "summary",
										"text": "This reimplements {@link Adapters.DiasporaAdapter#findOne}, modified for use of web api."
									},
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 1868,
									"name": "table",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the table to retrieve data from."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1869,
									"name": "queryFind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hash representing the entity to find."
									},
									"type": {
										"type": "reference",
										"name": "SelectQuery",
										"id": 377
									}
								},
								{
									"id": 1870,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hash of options."
									},
									"type": {
										"type": "reference",
										"name": "QueryOptions",
										"id": 352
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IRawAdapterEntityAttributes",
												"id": 1176
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"name": "Adapter.findOne",
								"id": 922
							},
							"implementationOf": {
								"type": "reference",
								"name": "DataSourceQuerier.findOne",
								"id": 823
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/webApi/adapter.ts",
							"line": 251,
							"character": 21
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Adapter.findOne",
						"id": 922
					},
					"implementationOf": {
						"type": "reference",
						"name": "DataSourceQuerier.findOne",
						"id": 822
					}
				},
				{
					"id": 1904,
					"name": "generateBaseEndPoint",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"signatures": [
						{
							"id": 1905,
							"name": "generateBaseEndPoint",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generates the URL to the base of the API",
								"returns": "The URI string to the base of the API\n"
							},
							"parameters": [
								{
									"id": 1906,
									"name": "scheme",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Represents the protocol (`http` or `https` most of the time)"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "false"
											}
										]
									}
								},
								{
									"id": 1907,
									"name": "host",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hostname to target (domain name, IP, ...)"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "false"
											}
										]
									}
								},
								{
									"id": 1908,
									"name": "port",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Port of the target to point to"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "false"
											}
										]
									}
								},
								{
									"id": 1909,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Absolute URI on the API"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/webApi/adapter.ts",
							"line": 446,
							"character": 31
						}
					]
				},
				{
					"id": 1927,
					"name": "getPluralEndpoint",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 1928,
							"name": "getPluralEndpoint",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the endpoint that corresponds to the plural variant of the provided endpoint.",
								"tags": [
									{
										"tag": "see",
										"text": "WebApiAdapter.pluralApis"
									},
									{
										"tag": "author",
										"text": "Gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 1929,
									"name": "endpoint",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the endpoint\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "PluralEndpoint",
								"id": 1677
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/webApi/adapter.ts",
							"line": 525,
							"character": 26
						}
					]
				},
				{
					"id": 1990,
					"name": "has",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1991,
							"name": "has",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Check if this instance has listeners for the provided event. Alias for `hasEvent`",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1992,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the event to check"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.has"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 89,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "SequentialEvent.has"
					}
				},
				{
					"id": 1993,
					"name": "hasEvent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1994,
							"name": "hasEvent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Check if this instance has listeners for the provided event",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1995,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the event to check"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.hasEvent"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 96,
							"character": 12
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "SequentialEvent.hasEvent"
					}
				},
				{
					"id": 1898,
					"name": "httpRequest",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isProtected": true,
						"isAbstract": true
					},
					"signatures": [
						{
							"id": 1899,
							"name": "httpRequest",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Creates a request, send it and get the result"
							},
							"parameters": [
								{
									"id": 1900,
									"name": "method",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "HTTP verb that describes the request type"
									},
									"type": {
										"type": "reference",
										"name": "EHttpVerb",
										"id": 1672
									}
								},
								{
									"id": 1901,
									"name": "endPoint",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Url to send on"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1902,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "Object to send"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "true"
											}
										]
									}
								},
								{
									"id": 1903,
									"name": "queryObject",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "Object to put in query string\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "object"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "TEntitiesJsonResponse",
										"id": 1996
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/webApi/adapter.ts",
							"line": 430,
							"character": 37
						}
					]
				},
				{
					"id": 1862,
					"name": "insertMany",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 1863,
							"name": "insertMany",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Insert several entities through an HTTP API.",
								"returns": "Promise resolved once insertion is done. Called with (*{@link WebApiEntity[]}* `entities`).\n",
								"tags": [
									{
										"tag": "summary",
										"text": "This reimplements {@link Adapters.DiasporaAdapter#insertMany}, modified for use of web api."
									},
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 1864,
									"name": "table",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the table to insert data in."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1865,
									"name": "entities",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hash representing entities to insert."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "IRawEntityAttributes",
											"id": 992
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "IRawAdapterEntityAttributes",
											"id": 1176
										}
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"name": "Adapter.insertMany",
								"id": 918
							},
							"implementationOf": {
								"type": "reference",
								"name": "DataSourceQuerier.insertMany",
								"id": 819
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/webApi/adapter.ts",
							"line": 225,
							"character": 24
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Adapter.insertMany",
						"id": 918
					},
					"implementationOf": {
						"type": "reference",
						"name": "DataSourceQuerier.insertMany",
						"id": 818
					}
				},
				{
					"id": 1858,
					"name": "insertOne",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 1859,
							"name": "insertOne",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Insert a single entity through an HTTP API.",
								"returns": "Promise resolved once insertion is done. Called with (*{@link WebApiEntity}* `entity`).\n",
								"tags": [
									{
										"tag": "summary",
										"text": "This reimplements {@link Adapters.DiasporaAdapter#insertOne}, modified for use of web api."
									},
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 1860,
									"name": "table",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the table to insert data in."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1861,
									"name": "entity",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hash representing the entity to insert."
									},
									"type": {
										"type": "reference",
										"name": "IRawEntityAttributes",
										"id": 992
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IRawAdapterEntityAttributes",
												"id": 1176
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"name": "Adapter.insertOne",
								"id": 914
							},
							"implementationOf": {
								"type": "reference",
								"name": "DataSourceQuerier.insertOne",
								"id": 815
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/webApi/adapter.ts",
							"line": 204,
							"character": 23
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Adapter.insertOne",
						"id": 914
					},
					"implementationOf": {
						"type": "reference",
						"name": "DataSourceQuerier.insertOne",
						"id": 814
					}
				},
				{
					"id": 1951,
					"name": "normalizeOptions",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 1952,
							"name": "normalizeOptions",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Transform options to their canonical form. This function must be applied before calling adapters' methods.",
								"returns": "Transformed options (also called `canonical options`).\n",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin"
									},
									{
										"tag": "throws",
										"text": "{TypeError} Thrown if an option does not have an acceptable type."
									},
									{
										"tag": "throws",
										"text": "{ReferenceError} Thrown if a required option is not present."
									},
									{
										"tag": "throws",
										"text": "{Error} Thrown when there isn't more precise description of the error is available (eg. when conflicts occurs)."
									}
								]
							},
							"parameters": [
								{
									"id": 1953,
									"name": "opts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "QueryOptionsRaw",
										"id": 357
									},
									"defaultValue": " {}"
								}
							],
							"type": {
								"type": "reference",
								"name": "QueryOptions",
								"id": 352
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Adapter.normalizeOptions",
								"id": 905
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 225,
							"character": 24
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter.normalizeOptions",
						"id": 905
					}
				},
				{
					"id": 1954,
					"name": "normalizeQuery",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 1955,
							"name": "normalizeQuery",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Transform a search query to its canonical form, replacing aliases or shorthands by full query.",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1956,
									"name": "originalQuery",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "QueryLanguage.SelectQueryOrConditionRaw",
										"id": 409
									}
								},
								{
									"id": 1957,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "QueryOptions",
										"id": 352
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "QueryLanguage.SelectQueryOrCondition",
								"id": 408
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Adapter.normalizeQuery",
								"id": 908
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 248,
							"character": 22
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter.normalizeQuery",
						"id": 908
					}
				},
				{
					"id": 1970,
					"name": "off",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1971,
							"name": "off",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Remove one, many or all event handlers on some events.",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1972,
									"name": "events",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "String containing event names to unbind. You may indicate several events at once by separating with *spaces*"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1973,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "Function or array of functions to unbind on specified events"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IEventHandler"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IEventHandler"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.off"
							}
						},
						{
							"id": 1974,
							"name": "off",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Remove event handlers on several events at once.",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1975,
									"name": "events",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Object with keys as event names containing a handler or an array of handlers to remove."
									},
									"type": {
										"type": "reference",
										"name": "IEventHash"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.off"
							}
						},
						{
							"id": 1976,
							"name": "off",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Remove all events handlers",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1977,
									"name": "all",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Pass true to delete all handlers"
									},
									"type": {
										"type": "intrinsic",
										"name": "true"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.off"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 38,
							"character": 7
						},
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 45,
							"character": 7
						},
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 52,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "SequentialEvent.off"
					}
				},
				{
					"id": 1978,
					"name": "on",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1979,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add one or many event handlers.",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1980,
									"name": "events",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "String containing event names to bind. You may indicate several events at once by separating with *spaces*"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1981,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Function or array of functions to bind on specified events"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IEventHandler"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IEventHandler"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.on"
							}
						},
						{
							"id": 1982,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add event handlers on several events at once.",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1983,
									"name": "events",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Object with keys as event names containing a handler or an array of handlers to add."
									},
									"type": {
										"type": "reference",
										"name": "IEventHash"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.on"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 60,
							"character": 6
						},
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 67,
							"character": 6
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "SequentialEvent.on"
					}
				},
				{
					"id": 1984,
					"name": "once",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1985,
							"name": "once",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add one or many event handlers. These listeners will be executed once, then are removed",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1986,
									"name": "events",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "String containing event names to bind. You may indicate several events at once by separating with *spaces*"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1987,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Function or array of functions to bind on specified events"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IEventHandler"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IEventHandler"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.once"
							}
						},
						{
							"id": 1988,
							"name": "once",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add event handlers on several events at once. These listeners will be executed once, then are removed",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1989,
									"name": "events",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Object with keys as event names containing a handler or an array of handlers to add."
									},
									"type": {
										"type": "reference",
										"name": "IEventHash"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.once"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 75,
							"character": 8
						},
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 82,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "SequentialEvent.once"
					}
				},
				{
					"id": 1941,
					"name": "remapInput",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 1942,
							"name": "remapInput",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "TODO.",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin"
									},
									{
										"tag": "see",
										"text": "TODO remapping."
									},
									{
										"tag": "see",
										"text": "{@link Adapters.Adapter#remapIO remapIO}\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 1943,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IEnumeratedHash",
										"id": 802,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 1944,
									"name": "tableName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1945,
									"name": "query",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "T",
										"constraint": {
											"type": "reference",
											"name": "IEnumeratedHash",
											"id": 802,
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "any"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Dictionary",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Adapter.remapInput",
								"id": 895
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 195,
							"character": 18
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter.remapInput",
						"id": 895
					}
				},
				{
					"id": 1946,
					"name": "remapOutput",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 1947,
							"name": "remapOutput",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "TODO.",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin"
									},
									{
										"tag": "see",
										"text": "TODO remapping."
									},
									{
										"tag": "see",
										"text": "{@link Adapters.Adapter#remapIO remapIO}\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 1948,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IEnumeratedHash",
										"id": 802,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 1949,
									"name": "tableName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1950,
									"name": "query",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "T",
										"constraint": {
											"type": "reference",
											"name": "IEnumeratedHash",
											"id": 802,
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "any"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Dictionary",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Adapter.remapOutput",
								"id": 900
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 209,
							"character": 19
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter.remapOutput",
						"id": 900
					}
				},
				{
					"id": 1921,
					"name": "sendRequest",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 1922,
							"name": "sendRequest",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Send the query, and log inputs & outputs",
								"tags": [
									{
										"tag": "see",
										"text": "WebApiAdapter.httpRequest"
									},
									{
										"tag": "author",
										"text": "Gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 1923,
									"name": "verb",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "EHttpVerb",
										"id": 1672
									}
								},
								{
									"id": 1924,
									"name": "endPoint",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Url to send on"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1925,
									"name": "body",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "object"
											}
										]
									}
								},
								{
									"id": 1926,
									"name": "queryString",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "object"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"name": "IRawAdapterEntityAttributes",
												"id": 1176
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IRawAdapterEntityAttributes",
													"id": 1176
												}
											}
										]
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/webApi/adapter.ts",
							"line": 498,
							"character": 26
						}
					]
				},
				{
					"id": 1958,
					"name": "toJSON",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 1959,
							"name": "toJSON",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a POJO representing the current adapter.",
								"returns": "JSON representation of the adapter.\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "object"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Adapter.toJSON",
								"id": 912
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 310,
							"character": 14
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter.toJSON",
						"id": 912
					}
				},
				{
					"id": 1882,
					"name": "updateMany",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 1883,
							"name": "updateMany",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Update several entities from the web api store",
								"returns": "Promise resolved once update is done. Called with (*{@link InMemoryEntity}[]* `entities`).\n",
								"tags": [
									{
										"tag": "summary",
										"text": "This reimplements {@link Adapters.DiasporaAdapter#updateMany}, modified for use of web api."
									},
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 1884,
									"name": "table",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the table to update data in."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1885,
									"name": "queryFind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hash representing entities to find."
									},
									"type": {
										"type": "reference",
										"name": "SelectQuery",
										"id": 377
									}
								},
								{
									"id": 1886,
									"name": "update",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Object properties to set."
									},
									"type": {
										"type": "reference",
										"name": "IRawEntityAttributes",
										"id": 992
									}
								},
								{
									"id": 1887,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hash of options."
									},
									"type": {
										"type": "reference",
										"name": "QueryOptions",
										"id": 352
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "IRawAdapterEntityAttributes",
											"id": 1176
										}
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"name": "Adapter.updateMany",
								"id": 938
							},
							"implementationOf": {
								"type": "reference",
								"name": "DataSourceQuerier.updateMany",
								"id": 839
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/webApi/adapter.ts",
							"line": 357,
							"character": 24
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Adapter.updateMany",
						"id": 938
					},
					"implementationOf": {
						"type": "reference",
						"name": "DataSourceQuerier.updateMany",
						"id": 838
					}
				},
				{
					"id": 1876,
					"name": "updateOne",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 1877,
							"name": "updateOne",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Update a single entity from the web api store",
								"returns": "Promise resolved once update is done. Called with (*{@link InMemoryEntity}* `entity`).\n",
								"tags": [
									{
										"tag": "summary",
										"text": "This reimplements {@link Adapters.DiasporaAdapter#updateOne}, modified for use of web api."
									},
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 1878,
									"name": "table",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the table to update data in."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1879,
									"name": "queryFind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hash representing the entity to find."
									},
									"type": {
										"type": "reference",
										"name": "SelectQuery",
										"id": 377
									}
								},
								{
									"id": 1880,
									"name": "update",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Object properties to set."
									},
									"type": {
										"type": "reference",
										"name": "IRawEntityAttributes",
										"id": 992
									}
								},
								{
									"id": 1881,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hash of options."
									},
									"type": {
										"type": "reference",
										"name": "QueryOptions",
										"id": 352
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IRawAdapterEntityAttributes",
												"id": 1176
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"name": "Adapter.updateOne",
								"id": 932
							},
							"implementationOf": {
								"type": "reference",
								"name": "DataSourceQuerier.updateOne",
								"id": 833
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/webApi/adapter.ts",
							"line": 326,
							"character": 23
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Adapter.updateOne",
						"id": 932
					},
					"implementationOf": {
						"type": "reference",
						"name": "DataSourceQuerier.updateOne",
						"id": 832
					}
				},
				{
					"id": 1939,
					"name": "waitReady",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 1940,
							"name": "waitReady",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a promise resolved once adapter state is ready.",
								"returns": "Promise resolved when adapter is ready, and rejected if an error occured.\n",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin"
									},
									{
										"tag": "listens",
										"text": "Adapters.Adapter#error"
									},
									{
										"tag": "listens",
										"text": "Adapters.Adapter#ready"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "this"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Adapter.waitReady",
								"id": 893
							},
							"implementationOf": {
								"type": "reference",
								"name": "DataSourceQuerier.waitReady",
								"id": 855
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 172,
							"character": 17
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter.waitReady",
						"id": 893
					},
					"implementationOf": {
						"type": "reference",
						"name": "DataSourceQuerier.waitReady",
						"id": 854
					}
				},
				{
					"id": 1844,
					"name": "getMessage",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isPrivate": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 1845,
							"name": "getMessage",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the field 'message' in an XHR\nTODO: Check if relevant"
							},
							"parameters": [
								{
									"id": 1846,
									"name": "xhr",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "XHR to get field from\n"
									},
									"type": {
										"type": "reference",
										"name": "IXhrResponse",
										"id": 1518
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/webApi/adapter.ts",
							"line": 151,
							"character": 26
						}
					]
				},
				{
					"id": 1847,
					"name": "getQueryObject",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isPrivate": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 1848,
							"name": "getQueryObject",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Filters the query object for non-http query relevant informations"
							},
							"parameters": [
								{
									"id": 1849,
									"name": "queryFind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Selection query object"
									},
									"type": {
										"type": "reference",
										"name": "SelectQuery",
										"id": 377
									}
								},
								{
									"id": 1850,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Options object\n"
									},
									"type": {
										"type": "reference",
										"name": "QueryOptions",
										"id": 352
									}
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reflection",
										"declaration": {
											"id": 1851,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {}
										}
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1852,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1853,
													"name": "where",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "adapters/webApi/adapter.ts",
															"line": 175,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"name": "SelectQuery",
														"id": 377
													},
													"defaultValue": " queryFind"
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														1853
													]
												}
											]
										}
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/webApi/adapter.ts",
							"line": 163,
							"character": 30
						}
					]
				},
				{
					"id": 1854,
					"name": "maybeAddIdHashToEntities",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isPrivate": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 1855,
							"name": "maybeAddIdHashToEntities",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Fills the id of entities"
							},
							"parameters": [
								{
									"id": 1856,
									"name": "entities",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Entities received"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "IRawEntityAttributes",
											"id": 992
										}
									}
								},
								{
									"id": 1857,
									"name": "adapter",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Source of those entities\n"
									},
									"type": {
										"type": "reference",
										"name": "WebApiAdapter",
										"id": 1823
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "IRawAdapterEntityAttributes",
									"id": 1176
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/webApi/adapter.ts",
							"line": 185,
							"character": 40
						}
					]
				},
				{
					"id": 1824,
					"name": "httpErrorFactories",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isProtected": true
					},
					"children": [
						{
							"id": 1825,
							"name": "400",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1826,
									"name": "400",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1827,
											"name": "xhr",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IXhrResponse",
												"id": 1518
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Error"
									}
								}
							],
							"sources": [
								{
									"fileName": "adapters/webApi/adapter.ts",
									"line": 84,
									"character": 5
								}
							]
						},
						{
							"id": 1828,
							"name": "404",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1829,
									"name": "404",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1830,
											"name": "xhr",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IXhrResponse",
												"id": 1518
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Error"
									}
								}
							],
							"sources": [
								{
									"fileName": "adapters/webApi/adapter.ts",
									"line": 90,
									"character": 5
								}
							]
						},
						{
							"id": 1831,
							"name": "_",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1832,
									"name": "_",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1833,
											"name": "xhr",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IXhrResponse",
												"id": 1518
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Error"
									}
								}
							],
							"sources": [
								{
									"fileName": "adapters/webApi/adapter.ts",
									"line": 92,
									"character": 3
								}
							]
						}
					],
					"groups": [
						{
							"title": "Functions",
							"kind": 64,
							"children": [
								1825,
								1828,
								1831
							]
						}
					],
					"sources": [
						{
							"fileName": "adapters/webApi/adapter.ts",
							"line": 83,
							"character": 45
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1839
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1965,
						1937,
						1834,
						1935,
						1932,
						1938,
						1835,
						1933,
						1934,
						1936
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						1930
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1910,
						1960,
						1893,
						1888,
						1966,
						1871,
						1866,
						1904,
						1927,
						1990,
						1993,
						1898,
						1862,
						1858,
						1951,
						1954,
						1970,
						1978,
						1984,
						1941,
						1946,
						1921,
						1958,
						1882,
						1876,
						1939,
						1844,
						1847,
						1854
					]
				},
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						1824
					]
				}
			],
			"sources": [
				{
					"fileName": "adapters/webApi/adapter.ts",
					"line": 82,
					"character": 35
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "Adapter",
					"id": 871,
					"typeArguments": [
						{
							"type": "reference",
							"name": "WebApiEntity",
							"id": 1475
						}
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"name": "NodeWebApiAdapter",
					"id": 2161
				},
				{
					"type": "reference",
					"name": "BrowserWebApiAdapter",
					"id": 2339
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "DataSourceQuerier",
					"id": 812,
					"typeArguments": [
						{
							"type": "reference",
							"name": "IRawAdapterEntityAttributes",
							"id": 1176
						}
					]
				}
			]
		},
		{
			"id": 1475,
			"name": "WebApiEntity",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Entity stored in {@link Adapters.WebApiDiasporaAdapter the web API adapter}."
			},
			"children": [
				{
					"id": 1481,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"comment": {
						"shortText": "Construct a new data source entity with specified content & parent.",
						"tags": [
							{
								"tag": "author",
								"text": "gerkin\n"
							}
						]
					},
					"signatures": [
						{
							"id": 1482,
							"name": "new WebApiEntity",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "Construct a new data source entity with specified content & parent.",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1483,
									"name": "entity",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IRawEntityAttributes",
										"id": 992
									}
								},
								{
									"id": 1484,
									"name": "dataSource",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Adapter",
										"id": 871
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "WebApiEntity",
								"id": 1475
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AdapterEntity.__constructor",
								"id": 1203
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/entity.ts",
							"line": 42,
							"character": 52
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AdapterEntity.__constructor",
						"id": 1203
					}
				},
				{
					"id": 1480,
					"name": "_attributes",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "adapters/base/entity.ts",
							"line": 42,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"name": "IRawAdapterEntityAttributes",
						"id": 1176
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "AdapterEntity._attributes",
						"id": 1202
					}
				},
				{
					"id": 1479,
					"name": "dataAccessLayer",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "adapters/base/entity.ts",
							"line": 40,
							"character": 32
						}
					],
					"type": {
						"type": "reference",
						"name": "DataAccessLayer",
						"id": 410
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "AdapterEntity.dataAccessLayer",
						"id": 1201
					}
				},
				{
					"id": 1478,
					"name": "dataSource",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "adapters/base/entity.ts",
							"line": 39,
							"character": 27
						}
					],
					"type": {
						"type": "reference",
						"name": "Adapter",
						"id": 871
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "AdapterEntity.dataSource",
						"id": 1200
					}
				},
				{
					"id": 1476,
					"name": "attributes",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"getSignature": {
						"id": 1477,
						"name": "__get",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"type": {
							"type": "reference",
							"name": "IRawAdapterEntityAttributes",
							"id": 1176
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "AdapterEntity.attributes",
							"id": 1198
						}
					},
					"sources": [
						{
							"fileName": "adapters/base/entity.ts",
							"line": 36,
							"character": 22
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AdapterEntity.attributes",
						"id": 1198
					}
				},
				{
					"id": 1495,
					"name": "matches",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 1496,
							"name": "matches",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Is implemented only by decorator"
							},
							"parameters": [
								{
									"id": 1497,
									"name": "query",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Query to match entity against\n"
									},
									"type": {
										"type": "reference",
										"name": "QueryLanguage.SelectQueryOrCondition",
										"id": 408
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AdapterEntity.matches",
								"id": 1217
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/entity.ts",
							"line": 112,
							"character": 15
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AdapterEntity.matches",
						"id": 1217
					}
				},
				{
					"id": 1500,
					"name": "setId",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"signatures": [
						{
							"id": 1501,
							"name": "setId",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Calls the static {@link AdapterEntity.setId} with provided arguments",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 1502,
									"name": "adapter",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Adapter that will persist the entity"
									},
									"type": {
										"type": "reference",
										"name": "Adapter",
										"id": 871
									}
								},
								{
									"id": 1503,
									"name": "propName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Property that should contain the ID"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"id\""
								},
								{
									"id": 1504,
									"name": "id",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Value of the ID\n"
									},
									"type": {
										"type": "reference",
										"name": "EntityUid",
										"id": 1157
									},
									"defaultValue": " this.attributes.id"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AdapterEntity.setId",
								"id": 1222
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/entity.ts",
							"line": 135,
							"character": 16
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AdapterEntity.setId",
						"id": 1222
					}
				},
				{
					"id": 1498,
					"name": "toObject",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 1499,
							"name": "toObject",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a plain object corresponding to this entity attributes.",
								"returns": "Plain object representing this entity.\n",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "IRawAdapterEntityAttributes",
								"id": 1176
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AdapterEntity.toObject",
								"id": 1220
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/entity.ts",
							"line": 122,
							"character": 16
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AdapterEntity.toObject",
						"id": 1220
					}
				},
				{
					"id": 1491,
					"name": "matches",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 1492,
							"name": "matches",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Is implemented only by decorator"
							},
							"parameters": [
								{
									"id": 1493,
									"name": "attributes",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IRawAdapterEntityAttributes",
										"id": 1176
									}
								},
								{
									"id": 1494,
									"name": "query",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Query to match entity against\n"
									},
									"type": {
										"type": "reference",
										"name": "QueryLanguage.SelectQueryOrCondition",
										"id": 408
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AdapterEntity.matches",
								"id": 1213
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/entity.ts",
							"line": 100,
							"character": 22
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AdapterEntity.matches",
						"id": 1213
					}
				},
				{
					"id": 1485,
					"name": "setId",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 1486,
							"name": "setId",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Applies the id in the appropriate field & id hash",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 1487,
									"name": "attributes",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Attributes of the entity"
									},
									"type": {
										"type": "reference",
										"name": "IRawEntityAttributes",
										"id": 992
									}
								},
								{
									"id": 1488,
									"name": "adapter",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Adapter that will persist the entity"
									},
									"type": {
										"type": "reference",
										"name": "Adapter",
										"id": 871
									}
								},
								{
									"id": 1489,
									"name": "propName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Property that should contain the ID"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"id\""
								},
								{
									"id": 1490,
									"name": "id",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Value of the ID\n"
									},
									"type": {
										"type": "reference",
										"name": "EntityUid",
										"id": 1157
									},
									"defaultValue": " attributes.id"
								}
							],
							"type": {
								"type": "reference",
								"name": "IRawAdapterEntityAttributes",
								"id": 1176
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AdapterEntity.setId",
								"id": 1207
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/entity.ts",
							"line": 80,
							"character": 20
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AdapterEntity.setId",
						"id": 1207
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1481
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1480,
						1479,
						1478
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						1476
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1495,
						1500,
						1498,
						1491,
						1485
					]
				}
			],
			"sources": [
				{
					"fileName": "adapters/webApi/entity.ts",
					"line": 6,
					"character": 25
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "AdapterEntity",
					"id": 1197
				}
			]
		},
		{
			"id": 2029,
			"name": "WebStorageAdapter",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "This class is used to use local storage or session storage as a data store. This adapter should be used only by the browser."
			},
			"children": [
				{
					"id": 2031,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"comment": {
						"shortText": "Create a new instance of local storage adapter.",
						"tags": [
							{
								"tag": "author",
								"text": "gerkin"
							}
						]
					},
					"signatures": [
						{
							"id": 2032,
							"name": "new WebStorageAdapter",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "Create a new instance of local storage adapter.",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 2033,
									"name": "dataSourceName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2034,
									"name": "config",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Configuration object.\n"
									},
									"type": {
										"type": "reference",
										"name": "IWebStorageAdapterConfig",
										"id": 2027
									},
									"defaultValue": " { session: false }"
								}
							],
							"type": {
								"type": "reference",
								"name": "WebStorageAdapter",
								"id": 2029
							},
							"overwrites": {
								"type": "reference",
								"name": "Adapter.__constructor",
								"id": 880
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/webStorage/adapter.ts",
							"line": 32,
							"character": 34
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Adapter.__constructor",
						"id": 880
					}
				},
				{
					"id": 2121,
					"name": "__events",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"comment": {
						"shortText": "Events hash attached to this SequentialEvent instance"
					},
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 16,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"name": "IEventsHash"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SequentialEvent.__events"
					}
				},
				{
					"id": 2087,
					"name": "_classEntity",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isConstructorProperty": true,
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 91,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"name": "IAdapterEntityCtr",
						"id": 1181,
						"typeArguments": [
							{
								"type": "reference",
								"name": "WebStorageEntity",
								"id": 1997
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter._classEntity",
						"id": 881
					}
				},
				{
					"id": 2085,
					"name": "error",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Error triggered by adapter initialization.",
						"tags": [
							{
								"tag": "author",
								"text": "Gerkin\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 72,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"name": "Error",
						"id": 9
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter.error",
						"id": 878
					}
				},
				{
					"id": 2082,
					"name": "filters",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"comment": {
						"shortText": "Hash of functions to cast data store values to JSON standard values in entity.",
						"tags": [
							{
								"tag": "author",
								"text": "Gerkin\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 51,
							"character": 18
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter.filters",
						"id": 875
					}
				},
				{
					"id": 2088,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isConstructorProperty": true,
						"isExported": true,
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 92,
							"character": 22
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter.name",
						"id": 882
					}
				},
				{
					"id": 2083,
					"name": "remaps",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"comment": {
						"shortText": "Hash to transform entity fields to data store fields.",
						"tags": [
							{
								"tag": "author",
								"text": "Gerkin\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 58,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter.remaps",
						"id": 876
					}
				},
				{
					"id": 2084,
					"name": "remapsInverted",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"comment": {
						"shortText": "Hash to transform data store fields to entity fields.",
						"tags": [
							{
								"tag": "author",
								"text": "Gerkin\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 65,
							"character": 25
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter.remapsInverted",
						"id": 877
					}
				},
				{
					"id": 2030,
					"name": "source",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"comment": {
						"shortText": "{@link https://developer.mozilla.org/en-US/docs/Web/API/Storage Storage api} where to store data.",
						"tags": [
							{
								"tag": "author",
								"text": "Gerkin"
							},
							{
								"tag": "see",
								"text": "{@link https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage localStorage} and {@link https://developer.mozilla.org/en-US/docs/Web/API/Window/sessionStorage sessionStorage} on MDN web docs."
							},
							{
								"tag": "see",
								"text": "{@link Adapters.WebStorageDiasporaAdapter}:config.session parameter.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "adapters/webStorage/adapter.ts",
							"line": 32,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"name": "Storage"
					}
				},
				{
					"id": 2086,
					"name": "state",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"comment": {
						"shortText": "Describe current adapter status.",
						"tags": [
							{
								"tag": "author",
								"text": "Gerkin\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 79,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"name": "EAdapterState",
						"id": 861
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter.state",
						"id": 879
					}
				},
				{
					"id": 2080,
					"name": "classEntity",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"getSignature": {
						"id": 2081,
						"name": "__get",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"type": {
							"type": "reference",
							"name": "IAdapterEntityCtr",
							"id": 1181,
							"typeArguments": [
								{
									"type": "unknown",
									"name": "T"
								}
							]
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "Adapter.classEntity",
							"id": 873
						}
					},
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 42,
							"character": 23
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter.classEntity",
						"id": 873
					}
				},
				{
					"id": 2039,
					"name": "configureCollection",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 2040,
							"name": "configureCollection",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Create the collection index and call {@link Adapters.DiasporaAdapter#configureCollection}.",
								"returns": "This function does not return anything.\n",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 2041,
									"name": "tableName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the table (usually, model name)."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2042,
									"name": "remaps",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Associative hash that links entity field names with data source field names."
									},
									"type": {
										"type": "reference",
										"name": "IRemapsHash",
										"id": 806
									}
								},
								{
									"id": 2043,
									"name": "filters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IFiltersHash",
										"id": 809
									}
								}
							],
							"type": {
								"type": "unknown",
								"name": "this"
							},
							"overwrites": {
								"type": "reference",
								"name": "Adapter.configureCollection",
								"id": 954
							},
							"implementationOf": {
								"type": "reference",
								"name": "DataSourceQuerier.configureCollection",
								"id": 857
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/webStorage/adapter.ts",
							"line": 74,
							"character": 27
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Adapter.configureCollection",
						"id": 954
					},
					"implementationOf": {
						"type": "reference",
						"name": "DataSourceQuerier.configureCollection",
						"id": 856
					}
				},
				{
					"id": 2072,
					"name": "deleteMany",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 2073,
							"name": "deleteMany",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Delete several entities from the local storage.",
								"returns": "Promise resolved once items are deleted. Called with (*undefined*).\n",
								"tags": [
									{
										"tag": "summary",
										"text": "This reimplements {@link Adapters.DiasporaAdapter#deleteMany}, modified for local storage or session storage interactions."
									},
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 2074,
									"name": "table",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the table to delete data from."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2075,
									"name": "queryFind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hash representing entities to find."
									},
									"type": {
										"type": "reference",
										"name": "SelectQuery",
										"id": 377
									}
								},
								{
									"id": 2076,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hash of options."
									},
									"type": {
										"type": "reference",
										"name": "QueryOptions",
										"id": 352
									},
									"defaultValue": " this.normalizeOptions()"
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"name": "Adapter.deleteMany",
								"id": 949
							},
							"implementationOf": {
								"type": "reference",
								"name": "DataSourceQuerier.deleteMany",
								"id": 850
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/webStorage/adapter.ts",
							"line": 300,
							"character": 24
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Adapter.deleteMany",
						"id": 949
					},
					"implementationOf": {
						"type": "reference",
						"name": "DataSourceQuerier.deleteMany",
						"id": 849
					}
				},
				{
					"id": 2067,
					"name": "deleteOne",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 2068,
							"name": "deleteOne",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Delete a single entity from the local storage.",
								"returns": "Promise resolved once item is deleted. Called with (*undefined*).\n",
								"tags": [
									{
										"tag": "summary",
										"text": "This reimplements {@link Adapters.DiasporaAdapter#deleteOne}, modified for local storage or session storage interactions."
									},
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 2069,
									"name": "table",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the table to delete data from."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2070,
									"name": "queryFind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hash representing the entity to find."
									},
									"type": {
										"type": "reference",
										"name": "SelectQuery",
										"id": 377
									}
								},
								{
									"id": 2071,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hash of options."
									},
									"type": {
										"type": "reference",
										"name": "QueryOptions",
										"id": 352
									},
									"defaultValue": " this.normalizeOptions()"
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"name": "Adapter.deleteOne",
								"id": 944
							},
							"implementationOf": {
								"type": "reference",
								"name": "DataSourceQuerier.deleteOne",
								"id": 845
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/webStorage/adapter.ts",
							"line": 272,
							"character": 23
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Adapter.deleteOne",
						"id": 944
					},
					"implementationOf": {
						"type": "reference",
						"name": "DataSourceQuerier.deleteOne",
						"id": 844
					}
				},
				{
					"id": 2122,
					"name": "emit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2123,
							"name": "emit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Triggers each corresponding handlers in sequence.",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2124,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the event to trigger"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2125,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"comment": {
										"text": "Arguments to pass to each handler. Note that those arguments will be appended with previous handler resolution value, if any."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.emit"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 30,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "SequentialEvent.emit"
					}
				},
				{
					"id": 2077,
					"name": "ensureCollectionExists",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 2078,
							"name": "ensureCollectionExists",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Create the table key if it does not exist.",
								"returns": "Index of the collection.\n",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 2079,
									"name": "table",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the table."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/webStorage/adapter.ts",
							"line": 324,
							"character": 31
						}
					]
				},
				{
					"id": 2110,
					"name": "findMany",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 2111,
							"name": "findMany",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Retrieve several entities from the data store. This function is a default polyfill if the inheriting adapter does not provide `findMany` itself.",
								"tags": [
									{
										"tag": "summary",
										"text": "At least one of {@link findOne} or {@link findMany} must be reimplemented by adapter."
									},
									{
										"tag": "author",
										"text": "gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2112,
									"name": "table",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2113,
									"name": "queryFind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "QueryLanguage.SelectQueryOrCondition",
										"id": 408
									}
								},
								{
									"id": 2114,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "QueryOptions",
										"id": 352
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "IRawAdapterEntityAttributes",
											"id": 1176
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Adapter.findMany",
								"id": 927
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 377,
							"character": 22
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter.findMany",
						"id": 927
					},
					"implementationOf": {
						"type": "reference",
						"name": "DataSourceQuerier.findMany",
						"id": 827
					}
				},
				{
					"id": 2056,
					"name": "findOne",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 2057,
							"name": "findOne",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Retrieve a single entity from the local storage.",
								"returns": "Promise resolved once item is found. Called with (*{@link DataStoreEntities.WebStorageEntity}* `entity`).\n",
								"tags": [
									{
										"tag": "summary",
										"text": "This reimplements {@link Adapters.DiasporaAdapter#findOne}, modified for local storage or session storage interactions."
									},
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 2058,
									"name": "table",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the model to retrieve data from."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2059,
									"name": "queryFind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hash representing the entity to find."
									},
									"type": {
										"type": "reference",
										"name": "SelectQuery",
										"id": 377
									}
								},
								{
									"id": 2060,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hash of options."
									},
									"type": {
										"type": "reference",
										"name": "QueryOptions",
										"id": 352
									},
									"defaultValue": " this.normalizeOptions()"
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IRawAdapterEntityAttributes",
												"id": 1176
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"name": "Adapter.findOne",
								"id": 922
							},
							"implementationOf": {
								"type": "reference",
								"name": "DataSourceQuerier.findOne",
								"id": 823
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/webStorage/adapter.ts",
							"line": 182,
							"character": 21
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Adapter.findOne",
						"id": 922
					},
					"implementationOf": {
						"type": "reference",
						"name": "DataSourceQuerier.findOne",
						"id": 822
					}
				},
				{
					"id": 2052,
					"name": "findOneById",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 2053,
							"name": "findOneById",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Find a single local storage entity using its id.",
								"returns": "Found entity, or undefined if not found.\n",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 2054,
									"name": "table",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the collection to search entity in."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2055,
									"name": "id",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Id of the entity to search."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "IRawAdapterEntityAttributes",
										"id": 1176
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/webStorage/adapter.ts",
							"line": 161,
							"character": 19
						}
					]
				},
				{
					"id": 2146,
					"name": "has",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2147,
							"name": "has",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Check if this instance has listeners for the provided event. Alias for `hasEvent`",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2148,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the event to check"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.has"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 89,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "SequentialEvent.has"
					}
				},
				{
					"id": 2149,
					"name": "hasEvent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2150,
							"name": "hasEvent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Check if this instance has listeners for the provided event",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2151,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the event to check"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.hasEvent"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 96,
							"character": 12
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "SequentialEvent.hasEvent"
					}
				},
				{
					"id": 2048,
					"name": "insertMany",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 2049,
							"name": "insertMany",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Insert several entities in the local storage.",
								"returns": "Promise resolved once insertion is done. Called with (*{@link DataStoreEntities.WebStorageEntity}[]* `entities`).\n",
								"tags": [
									{
										"tag": "summary",
										"text": "This reimplements {@link Adapters.DiasporaAdapter#insertMany}, modified for local storage or session storage interactions."
									},
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 2050,
									"name": "table",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the table to insert data in."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2051,
									"name": "entities",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Array of hashes representing entities to insert."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "IRawEntityAttributes",
											"id": 992
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "IRawAdapterEntityAttributes",
											"id": 1176
										}
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"name": "Adapter.insertMany",
								"id": 918
							},
							"implementationOf": {
								"type": "reference",
								"name": "DataSourceQuerier.insertMany",
								"id": 819
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/webStorage/adapter.ts",
							"line": 126,
							"character": 24
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Adapter.insertMany",
						"id": 918
					},
					"implementationOf": {
						"type": "reference",
						"name": "DataSourceQuerier.insertMany",
						"id": 818
					}
				},
				{
					"id": 2044,
					"name": "insertOne",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 2045,
							"name": "insertOne",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Insert a single entity in the local storage.",
								"returns": "Promise resolved once insertion is done. Called with (*{@link DataStoreEntities.WebStorageEntity}* `entity`).\n",
								"tags": [
									{
										"tag": "summary",
										"text": "This reimplements {@link Adapters.DiasporaAdapter#insertOne}, modified for local storage or session storage interactions."
									},
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 2046,
									"name": "table",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the table to insert data in."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2047,
									"name": "entity",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hash representing the entity to insert."
									},
									"type": {
										"type": "reference",
										"name": "IRawEntityAttributes",
										"id": 992
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IRawAdapterEntityAttributes",
												"id": 1176
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"name": "Adapter.insertOne",
								"id": 914
							},
							"implementationOf": {
								"type": "reference",
								"name": "DataSourceQuerier.insertOne",
								"id": 815
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/webStorage/adapter.ts",
							"line": 96,
							"character": 23
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Adapter.insertOne",
						"id": 914
					},
					"implementationOf": {
						"type": "reference",
						"name": "DataSourceQuerier.insertOne",
						"id": 814
					}
				},
				{
					"id": 2101,
					"name": "normalizeOptions",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 2102,
							"name": "normalizeOptions",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Transform options to their canonical form. This function must be applied before calling adapters' methods.",
								"returns": "Transformed options (also called `canonical options`).\n",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin"
									},
									{
										"tag": "throws",
										"text": "{TypeError} Thrown if an option does not have an acceptable type."
									},
									{
										"tag": "throws",
										"text": "{ReferenceError} Thrown if a required option is not present."
									},
									{
										"tag": "throws",
										"text": "{Error} Thrown when there isn't more precise description of the error is available (eg. when conflicts occurs)."
									}
								]
							},
							"parameters": [
								{
									"id": 2103,
									"name": "opts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "QueryOptionsRaw",
										"id": 357
									},
									"defaultValue": " {}"
								}
							],
							"type": {
								"type": "reference",
								"name": "QueryOptions",
								"id": 352
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Adapter.normalizeOptions",
								"id": 905
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 225,
							"character": 24
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter.normalizeOptions",
						"id": 905
					}
				},
				{
					"id": 2104,
					"name": "normalizeQuery",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 2105,
							"name": "normalizeQuery",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Transform a search query to its canonical form, replacing aliases or shorthands by full query.",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2106,
									"name": "originalQuery",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "QueryLanguage.SelectQueryOrConditionRaw",
										"id": 409
									}
								},
								{
									"id": 2107,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "QueryOptions",
										"id": 352
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "QueryLanguage.SelectQueryOrCondition",
								"id": 408
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Adapter.normalizeQuery",
								"id": 908
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 248,
							"character": 22
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter.normalizeQuery",
						"id": 908
					}
				},
				{
					"id": 2126,
					"name": "off",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2127,
							"name": "off",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Remove one, many or all event handlers on some events.",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2128,
									"name": "events",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "String containing event names to unbind. You may indicate several events at once by separating with *spaces*"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2129,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "Function or array of functions to unbind on specified events"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IEventHandler"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IEventHandler"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.off"
							}
						},
						{
							"id": 2130,
							"name": "off",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Remove event handlers on several events at once.",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2131,
									"name": "events",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Object with keys as event names containing a handler or an array of handlers to remove."
									},
									"type": {
										"type": "reference",
										"name": "IEventHash"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.off"
							}
						},
						{
							"id": 2132,
							"name": "off",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Remove all events handlers",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2133,
									"name": "all",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Pass true to delete all handlers"
									},
									"type": {
										"type": "intrinsic",
										"name": "true"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.off"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 38,
							"character": 7
						},
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 45,
							"character": 7
						},
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 52,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "SequentialEvent.off"
					}
				},
				{
					"id": 2134,
					"name": "on",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2135,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add one or many event handlers.",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2136,
									"name": "events",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "String containing event names to bind. You may indicate several events at once by separating with *spaces*"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2137,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Function or array of functions to bind on specified events"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IEventHandler"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IEventHandler"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.on"
							}
						},
						{
							"id": 2138,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add event handlers on several events at once.",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2139,
									"name": "events",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Object with keys as event names containing a handler or an array of handlers to add."
									},
									"type": {
										"type": "reference",
										"name": "IEventHash"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.on"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 60,
							"character": 6
						},
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 67,
							"character": 6
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "SequentialEvent.on"
					}
				},
				{
					"id": 2140,
					"name": "once",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2141,
							"name": "once",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add one or many event handlers. These listeners will be executed once, then are removed",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2142,
									"name": "events",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "String containing event names to bind. You may indicate several events at once by separating with *spaces*"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2143,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Function or array of functions to bind on specified events"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IEventHandler"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IEventHandler"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.once"
							}
						},
						{
							"id": 2144,
							"name": "once",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add event handlers on several events at once. These listeners will be executed once, then are removed",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2145,
									"name": "events",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Object with keys as event names containing a handler or an array of handlers to add."
									},
									"type": {
										"type": "reference",
										"name": "IEventHash"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SequentialEvent.once"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 75,
							"character": 8
						},
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/sequential-event/dist/types/sequential-event.d.ts",
							"line": 82,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "SequentialEvent.once"
					}
				},
				{
					"id": 2091,
					"name": "remapInput",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 2092,
							"name": "remapInput",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "TODO.",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin"
									},
									{
										"tag": "see",
										"text": "TODO remapping."
									},
									{
										"tag": "see",
										"text": "{@link Adapters.Adapter#remapIO remapIO}\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 2093,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IEnumeratedHash",
										"id": 802,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 2094,
									"name": "tableName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2095,
									"name": "query",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "T",
										"constraint": {
											"type": "reference",
											"name": "IEnumeratedHash",
											"id": 802,
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "any"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Dictionary",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Adapter.remapInput",
								"id": 895
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 195,
							"character": 18
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter.remapInput",
						"id": 895
					}
				},
				{
					"id": 2096,
					"name": "remapOutput",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 2097,
							"name": "remapOutput",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "TODO.",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin"
									},
									{
										"tag": "see",
										"text": "TODO remapping."
									},
									{
										"tag": "see",
										"text": "{@link Adapters.Adapter#remapIO remapIO}\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 2098,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IEnumeratedHash",
										"id": 802,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 2099,
									"name": "tableName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2100,
									"name": "query",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "T",
										"constraint": {
											"type": "reference",
											"name": "IEnumeratedHash",
											"id": 802,
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "any"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Dictionary",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Adapter.remapOutput",
								"id": 900
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 209,
							"character": 19
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter.remapOutput",
						"id": 900
					}
				},
				{
					"id": 2108,
					"name": "toJSON",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 2109,
							"name": "toJSON",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a POJO representing the current adapter.",
								"returns": "JSON representation of the adapter.\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "object"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Adapter.toJSON",
								"id": 912
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 310,
							"character": 14
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter.toJSON",
						"id": 912
					}
				},
				{
					"id": 2115,
					"name": "updateMany",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 2116,
							"name": "updateMany",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Update several entities from the data store. This function is a default polyfill if the inheriting adapter does not provide `updateMany` itself.",
								"tags": [
									{
										"tag": "summary",
										"text": "At least one of {@link updateOne} or {@link updateMany} must be reimplemented by adapter."
									},
									{
										"tag": "author",
										"text": "gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2117,
									"name": "table",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2118,
									"name": "queryFind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "QueryLanguage.SelectQueryOrCondition",
										"id": 408
									}
								},
								{
									"id": 2119,
									"name": "update",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IRawEntityAttributes",
										"id": 992
									}
								},
								{
									"id": 2120,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "QueryOptions",
										"id": 352
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "IRawAdapterEntityAttributes",
											"id": 1176
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Adapter.updateMany",
								"id": 938
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 411,
							"character": 24
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter.updateMany",
						"id": 938
					},
					"implementationOf": {
						"type": "reference",
						"name": "DataSourceQuerier.updateMany",
						"id": 838
					}
				},
				{
					"id": 2061,
					"name": "updateOne",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 2062,
							"name": "updateOne",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Update a single entity in the memory.",
								"returns": "Promise resolved once update is done. Called with (*{@link DataStoreEntities.WebStorageEntity}* `entity`).\n",
								"tags": [
									{
										"tag": "summary",
										"text": "This reimplements {@link Adapters.DiasporaAdapter#updateOne}, modified for local storage or session storage interactions."
									},
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 2063,
									"name": "table",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the table to update data in."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2064,
									"name": "queryFind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hash representing the entity to find."
									},
									"type": {
										"type": "reference",
										"name": "SelectQuery",
										"id": 377
									}
								},
								{
									"id": 2065,
									"name": "update",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Object properties to set."
									},
									"type": {
										"type": "reference",
										"name": "IRawEntityAttributes",
										"id": 992
									}
								},
								{
									"id": 2066,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hash of options."
									},
									"type": {
										"type": "reference",
										"name": "QueryOptions",
										"id": 352
									},
									"defaultValue": " this.normalizeOptions()"
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IRawAdapterEntityAttributes",
												"id": 1176
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"name": "Adapter.updateOne",
								"id": 932
							},
							"implementationOf": {
								"type": "reference",
								"name": "DataSourceQuerier.updateOne",
								"id": 833
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/webStorage/adapter.ts",
							"line": 237,
							"character": 23
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Adapter.updateOne",
						"id": 932
					},
					"implementationOf": {
						"type": "reference",
						"name": "DataSourceQuerier.updateOne",
						"id": 832
					}
				},
				{
					"id": 2089,
					"name": "waitReady",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 2090,
							"name": "waitReady",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a promise resolved once adapter state is ready.",
								"returns": "Promise resolved when adapter is ready, and rejected if an error occured.\n",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin"
									},
									{
										"tag": "listens",
										"text": "Adapters.Adapter#error"
									},
									{
										"tag": "listens",
										"text": "Adapters.Adapter#ready"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "this"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Adapter.waitReady",
								"id": 893
							},
							"implementationOf": {
								"type": "reference",
								"name": "DataSourceQuerier.waitReady",
								"id": 855
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 172,
							"character": 17
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Adapter.waitReady",
						"id": 893
					},
					"implementationOf": {
						"type": "reference",
						"name": "DataSourceQuerier.waitReady",
						"id": 854
					}
				},
				{
					"id": 2035,
					"name": "getItemName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isPrivate": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 2036,
							"name": "getItemName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Deduce the item name from table name and item ID.",
								"returns": "Name of the item.\n",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 2037,
									"name": "table",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the table to construct name for."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2038,
									"name": "id",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Id of the item to find."
									},
									"type": {
										"type": "reference",
										"name": "EntityUid",
										"id": 1157
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/webStorage/adapter.ts",
							"line": 62,
							"character": 27
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						2031
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						2121,
						2087,
						2085,
						2082,
						2088,
						2083,
						2084,
						2030,
						2086
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						2080
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						2039,
						2072,
						2067,
						2122,
						2077,
						2110,
						2056,
						2052,
						2146,
						2149,
						2048,
						2044,
						2101,
						2104,
						2126,
						2134,
						2140,
						2091,
						2096,
						2108,
						2115,
						2061,
						2089,
						2035
					]
				}
			],
			"sources": [
				{
					"fileName": "adapters/webStorage/adapter.ts",
					"line": 24,
					"character": 30
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "Adapter",
					"id": 871,
					"typeArguments": [
						{
							"type": "reference",
							"name": "WebStorageEntity",
							"id": 1997
						}
					]
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "DataSourceQuerier",
					"id": 812,
					"typeArguments": [
						{
							"type": "reference",
							"name": "IRawAdapterEntityAttributes",
							"id": 1176
						}
					]
				}
			]
		},
		{
			"id": 1997,
			"name": "WebStorageEntity",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Entity stored in {@link Adapters.WebStorageDiasporaAdapter the local storage adapter}."
			},
			"decorators": [
				{
					"name": "SelfMatchingAdapterEntity",
					"type": {
						"type": "reference",
						"name": "SelfMatchingAdapterEntity",
						"id": 1321
					}
				},
				{
					"name": "AutoIdAdapterEntity",
					"type": {
						"type": "reference",
						"name": "AutoIdAdapterEntity",
						"id": 1317
					}
				}
			],
			"children": [
				{
					"id": 2003,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"comment": {
						"shortText": "Construct a new data source entity with specified content & parent.",
						"tags": [
							{
								"tag": "author",
								"text": "gerkin\n"
							}
						]
					},
					"signatures": [
						{
							"id": 2004,
							"name": "new WebStorageEntity",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "Construct a new data source entity with specified content & parent.",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2005,
									"name": "entity",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IRawEntityAttributes",
										"id": 992
									}
								},
								{
									"id": 2006,
									"name": "dataSource",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Adapter",
										"id": 871
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "WebStorageEntity",
								"id": 1997
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AdapterEntity.__constructor",
								"id": 1203
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/entity.ts",
							"line": 42,
							"character": 52
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AdapterEntity.__constructor",
						"id": 1203
					}
				},
				{
					"id": 2002,
					"name": "_attributes",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "adapters/base/entity.ts",
							"line": 42,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"name": "IRawAdapterEntityAttributes",
						"id": 1176
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "AdapterEntity._attributes",
						"id": 1202
					}
				},
				{
					"id": 2001,
					"name": "dataAccessLayer",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "adapters/base/entity.ts",
							"line": 40,
							"character": 32
						}
					],
					"type": {
						"type": "reference",
						"name": "DataAccessLayer",
						"id": 410
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "AdapterEntity.dataAccessLayer",
						"id": 1201
					}
				},
				{
					"id": 2000,
					"name": "dataSource",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "adapters/base/entity.ts",
							"line": 39,
							"character": 27
						}
					],
					"type": {
						"type": "reference",
						"name": "Adapter",
						"id": 871
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "AdapterEntity.dataSource",
						"id": 1200
					}
				},
				{
					"id": 1998,
					"name": "attributes",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"getSignature": {
						"id": 1999,
						"name": "__get",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"type": {
							"type": "reference",
							"name": "IRawAdapterEntityAttributes",
							"id": 1176
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "AdapterEntity.attributes",
							"id": 1198
						}
					},
					"sources": [
						{
							"fileName": "adapters/base/entity.ts",
							"line": 36,
							"character": 22
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AdapterEntity.attributes",
						"id": 1198
					}
				},
				{
					"id": 2017,
					"name": "matches",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 2018,
							"name": "matches",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Is implemented only by decorator"
							},
							"parameters": [
								{
									"id": 2019,
									"name": "query",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Query to match entity against\n"
									},
									"type": {
										"type": "reference",
										"name": "QueryLanguage.SelectQueryOrCondition",
										"id": 408
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AdapterEntity.matches",
								"id": 1217
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/entity.ts",
							"line": 112,
							"character": 15
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AdapterEntity.matches",
						"id": 1217
					}
				},
				{
					"id": 2022,
					"name": "setId",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"signatures": [
						{
							"id": 2023,
							"name": "setId",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Calls the static {@link AdapterEntity.setId} with provided arguments",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 2024,
									"name": "adapter",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Adapter that will persist the entity"
									},
									"type": {
										"type": "reference",
										"name": "Adapter",
										"id": 871
									}
								},
								{
									"id": 2025,
									"name": "propName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Property that should contain the ID"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"id\""
								},
								{
									"id": 2026,
									"name": "id",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Value of the ID\n"
									},
									"type": {
										"type": "reference",
										"name": "EntityUid",
										"id": 1157
									},
									"defaultValue": " this.attributes.id"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AdapterEntity.setId",
								"id": 1222
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/entity.ts",
							"line": 135,
							"character": 16
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AdapterEntity.setId",
						"id": 1222
					}
				},
				{
					"id": 2020,
					"name": "toObject",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 2021,
							"name": "toObject",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a plain object corresponding to this entity attributes.",
								"returns": "Plain object representing this entity.\n",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "IRawAdapterEntityAttributes",
								"id": 1176
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AdapterEntity.toObject",
								"id": 1220
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/entity.ts",
							"line": 122,
							"character": 16
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AdapterEntity.toObject",
						"id": 1220
					}
				},
				{
					"id": 2013,
					"name": "matches",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 2014,
							"name": "matches",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Is implemented only by decorator"
							},
							"parameters": [
								{
									"id": 2015,
									"name": "attributes",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IRawAdapterEntityAttributes",
										"id": 1176
									}
								},
								{
									"id": 2016,
									"name": "query",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Query to match entity against\n"
									},
									"type": {
										"type": "reference",
										"name": "QueryLanguage.SelectQueryOrCondition",
										"id": 408
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AdapterEntity.matches",
								"id": 1213
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/entity.ts",
							"line": 100,
							"character": 22
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AdapterEntity.matches",
						"id": 1213
					}
				},
				{
					"id": 2007,
					"name": "setId",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 2008,
							"name": "setId",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Applies the id in the appropriate field & id hash",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 2009,
									"name": "attributes",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Attributes of the entity"
									},
									"type": {
										"type": "reference",
										"name": "IRawEntityAttributes",
										"id": 992
									}
								},
								{
									"id": 2010,
									"name": "adapter",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Adapter that will persist the entity"
									},
									"type": {
										"type": "reference",
										"name": "Adapter",
										"id": 871
									}
								},
								{
									"id": 2011,
									"name": "propName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Property that should contain the ID"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"id\""
								},
								{
									"id": 2012,
									"name": "id",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Value of the ID\n"
									},
									"type": {
										"type": "reference",
										"name": "EntityUid",
										"id": 1157
									},
									"defaultValue": " attributes.id"
								}
							],
							"type": {
								"type": "reference",
								"name": "IRawAdapterEntityAttributes",
								"id": 1176
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AdapterEntity.setId",
								"id": 1207
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/entity.ts",
							"line": 80,
							"character": 20
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AdapterEntity.setId",
						"id": 1207
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						2003
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						2002,
						2001,
						2000
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						1998
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						2017,
						2022,
						2020,
						2013,
						2007
					]
				}
			],
			"sources": [
				{
					"fileName": "adapters/webStorage/entity.ts",
					"line": 10,
					"character": 29
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "AdapterEntity",
					"id": 1197
				}
			]
		},
		{
			"id": 75,
			"name": "ArrayFieldDescriptor",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 80,
					"name": "default",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "types/modelDescription.ts",
							"line": 73,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "Function"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "BaseFieldDescriptor.default",
						"id": 74
					}
				},
				{
					"id": 76,
					"name": "of",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Description (or array of descriptions) of possible values for this field",
						"tags": [
							{
								"tag": "author",
								"text": "gerkin\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "types/modelDescription.ts",
							"line": 81,
							"character": 3
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "FieldDescriptor",
								"id": 115
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "FieldDescriptor",
									"id": 115
								}
							}
						]
					}
				},
				{
					"id": 79,
					"name": "required",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Set to `true` to require a value. Even when `true`, empty arrays are allowed. To require at least one element in an array, use the `minLength` property",
						"tags": [
							{
								"tag": "author",
								"text": "gerkin\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "types/modelDescription.ts",
							"line": 72,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "true"
							},
							{
								"type": "intrinsic",
								"name": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "BaseFieldDescriptor.required",
						"id": 73
					}
				},
				{
					"id": 77,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Expected type of the value. Either `type` or `model` should be defined, or none.",
						"tags": [
							{
								"tag": "author",
								"text": "gerkin\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "types/modelDescription.ts",
							"line": 60,
							"character": 5
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "BaseFieldDescriptor.type",
						"id": 71
					}
				},
				{
					"id": 78,
					"name": "validate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Custom validation callback.",
						"tags": [
							{
								"tag": "author",
								"text": "gerkin\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "types/modelDescription.ts",
							"line": 66,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "Function"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Function"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "BaseFieldDescriptor.validate",
						"id": 72
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						80,
						76,
						79,
						77,
						78
					]
				}
			],
			"sources": [
				{
					"fileName": "types/modelDescription.ts",
					"line": 75,
					"character": 37
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "BaseFieldDescriptor",
					"id": 70
				}
			]
		},
		{
			"id": 70,
			"name": "BaseFieldDescriptor",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Object describing the attributes of a {@link Model~Model}.",
				"tags": [
					{
						"tag": "author",
						"text": "gerkin\n"
					}
				]
			},
			"children": [
				{
					"id": 74,
					"name": "default",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "types/modelDescription.ts",
							"line": 73,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "Function"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 73,
					"name": "required",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Set to `true` to require a value. Even when `true`, empty arrays are allowed. To require at least one element in an array, use the `minLength` property",
						"tags": [
							{
								"tag": "author",
								"text": "gerkin\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "types/modelDescription.ts",
							"line": 72,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "true"
							},
							{
								"type": "intrinsic",
								"name": "false"
							}
						]
					}
				},
				{
					"id": 71,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Expected type of the value. Either `type` or `model` should be defined, or none.",
						"tags": [
							{
								"tag": "author",
								"text": "gerkin\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "types/modelDescription.ts",
							"line": 60,
							"character": 5
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 72,
					"name": "validate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Custom validation callback.",
						"tags": [
							{
								"tag": "author",
								"text": "gerkin\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "types/modelDescription.ts",
							"line": 66,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "Function"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Function"
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						74,
						73,
						71,
						72
					]
				}
			],
			"sources": [
				{
					"fileName": "types/modelDescription.ts",
					"line": 54,
					"character": 36
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"name": "ArrayFieldDescriptor",
					"id": 75
				},
				{
					"type": "reference",
					"name": "ObjectFieldDescriptor",
					"id": 81
				},
				{
					"type": "reference",
					"name": "EnumFieldDescriptor",
					"id": 90
				},
				{
					"type": "reference",
					"name": "RelationalFieldDescriptor",
					"id": 96
				}
			]
		},
		{
			"id": 1227,
			"name": "Constructable",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"typeParameter": [
				{
					"id": 1228,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"children": [
				{
					"id": 1229,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1230,
							"name": "new Constructable",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 1231,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "T"
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/adapter-utils.ts",
							"line": 8,
							"character": 35
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1229
					]
				}
			],
			"sources": [
				{
					"fileName": "adapters/base/adapter-utils.ts",
					"line": 8,
					"character": 30
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"name": "IAdapterCtr",
					"id": 865
				}
			]
		},
		{
			"id": 812,
			"name": "DataSourceQuerier",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"typeParameter": [
				{
					"id": 813,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"children": [
				{
					"id": 856,
					"name": "configureCollection",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 857,
							"name": "configureCollection",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Saves the remapping table, the reversed remapping table and the filter table in the adapter. Those tables will be used later when manipulating models & entities.",
								"tags": [
									{
										"tag": "author",
										"text": "gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 858,
									"name": "tableName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 859,
									"name": "remaps",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IRemapsHash",
										"id": 806
									}
								},
								{
									"id": 860,
									"name": "filters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IFiltersHash",
										"id": 809
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					],
					"sources": [
						{
							"fileName": "types/dataSourceQuerier.ts",
							"line": 137,
							"character": 20
						}
					]
				},
				{
					"id": 849,
					"name": "deleteMany",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 850,
							"name": "deleteMany",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Delete several entities from the data store. This function is a default polyfill if the inheriting adapter does not provide `deleteMany` itself.",
								"returns": "Promise resolved once item is found. Called with (*{@link DataStoreEntity}[]* `entities`).\n",
								"tags": [
									{
										"tag": "summary",
										"text": "At least one of {@link deleteOne} or {@link deleteMany} must be reimplemented by adapter."
									},
									{
										"tag": "author",
										"text": "gerkin"
									}
								]
							},
							"parameters": [
								{
									"id": 851,
									"name": "table",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name of the table to delete data from."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 852,
									"name": "queryFind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hash representing the entities to find."
									},
									"type": {
										"type": "reference",
										"name": "SelectQuery",
										"id": 377
									}
								},
								{
									"id": 853,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Hash of options."
									},
									"type": {
										"type": "reference",
										"name": "QueryOptions",
										"id": 352
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "types/dataSourceQuerier.ts",
							"line": 121,
							"character": 11
						}
					]
				},
				{
					"id": 844,
					"name": "deleteOne",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 845,
							"name": "deleteOne",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Delete a single entity from the data store. This function is a default polyfill if the inheriting adapter does not provide `deleteOne` itself.",
								"tags": [
									{
										"tag": "summary",
										"text": "At least one of {@link deleteOne} or {@link deleteMany} must be reimplemented by adapter."
									},
									{
										"tag": "author",
										"text": "gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 846,
									"name": "table",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 847,
									"name": "queryFind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "SelectQuery",
										"id": 377
									}
								},
								{
									"id": 848,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "QueryOptions",
										"id": 352
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "types/dataSourceQuerier.ts",
							"line": 105,
							"character": 10
						}
					]
				},
				{
					"id": 827,
					"name": "findMany",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 828,
							"name": "findMany",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Retrieve several entities from the data store. This function is a default polyfill if the inheriting adapter does not provide `findMany` itself.",
								"tags": [
									{
										"tag": "summary",
										"text": "At least one of {@link findOne} or {@link findMany} must be reimplemented by adapter."
									},
									{
										"tag": "author",
										"text": "gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 829,
									"name": "table",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 830,
									"name": "queryFind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "SelectQuery",
										"id": 377
									}
								},
								{
									"id": 831,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "QueryOptions",
										"id": 352
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "T"
										}
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "types/dataSourceQuerier.ts",
							"line": 61,
							"character": 9
						}
					]
				},
				{
					"id": 822,
					"name": "findOne",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 823,
							"name": "findOne",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Retrieve a single entity from the data store. This function is a default polyfill if the inheriting adapter does not provide `findOne` itself.",
								"tags": [
									{
										"tag": "summary",
										"text": "At least one of {@link findOne} or {@link findMany} must be reimplemented by adapter."
									},
									{
										"tag": "author",
										"text": "gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 824,
									"name": "table",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 825,
									"name": "queryFind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "SelectQuery",
										"id": 377
									}
								},
								{
									"id": 826,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "QueryOptions",
										"id": 352
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "T"
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "types/dataSourceQuerier.ts",
							"line": 49,
							"character": 8
						}
					]
				},
				{
					"id": 818,
					"name": "insertMany",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 819,
							"name": "insertMany",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Insert several entities in the data store. This function is a default polyfill if the inheriting adapter does not provide `insertMany` itself.",
								"tags": [
									{
										"tag": "summary",
										"text": "At least one of {@link insertOne} or {@link insertMany} must be reimplemented by adapter."
									},
									{
										"tag": "author",
										"text": "gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 820,
									"name": "table",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 821,
									"name": "entities",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "IRawEntityAttributes",
											"id": 992
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "T"
										}
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "types/dataSourceQuerier.ts",
							"line": 35,
							"character": 11
						}
					]
				},
				{
					"id": 814,
					"name": "insertOne",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 815,
							"name": "insertOne",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Insert a single entity in the data store. This function is a default polyfill if the inheriting adapter does not provide `insertOne` itself.",
								"tags": [
									{
										"tag": "summary",
										"text": "At least one of {@link insertOne} or {@link insertMany} must be reimplemented by adapter."
									},
									{
										"tag": "author",
										"text": "gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 816,
									"name": "table",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 817,
									"name": "entity",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IRawEntityAttributes",
										"id": 992
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "T"
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "types/dataSourceQuerier.ts",
							"line": 24,
							"character": 10
						}
					]
				},
				{
					"id": 838,
					"name": "updateMany",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 839,
							"name": "updateMany",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Update several entities from the data store. This function is a default polyfill if the inheriting adapter does not provide `updateMany` itself.",
								"tags": [
									{
										"tag": "summary",
										"text": "At least one of {@link updateOne} or {@link updateMany} must be reimplemented by adapter."
									},
									{
										"tag": "author",
										"text": "gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 840,
									"name": "table",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 841,
									"name": "queryFind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "SelectQuery",
										"id": 377
									}
								},
								{
									"id": 842,
									"name": "update",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IRawEntityAttributes",
										"id": 992
									}
								},
								{
									"id": 843,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "QueryOptions",
										"id": 352
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "T"
										}
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "types/dataSourceQuerier.ts",
							"line": 89,
							"character": 11
						}
					]
				},
				{
					"id": 832,
					"name": "updateOne",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 833,
							"name": "updateOne",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Update a single entity from the data store. This function is a default polyfill if the inheriting adapter does not provide `updateOne` itself.",
								"tags": [
									{
										"tag": "summary",
										"text": "At least one of {@link updateOne} or {@link updateMany} must be reimplemented by adapter."
									},
									{
										"tag": "author",
										"text": "gerkin\n"
									}
								]
							},
							"parameters": [
								{
									"id": 834,
									"name": "table",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 835,
									"name": "queryFind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "SelectQuery",
										"id": 377
									}
								},
								{
									"id": 836,
									"name": "update",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IRawEntityAttributes",
										"id": 992
									}
								},
								{
									"id": 837,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "QueryOptions",
										"id": 352
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "T"
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "types/dataSourceQuerier.ts",
							"line": 76,
							"character": 10
						}
					]
				},
				{
					"id": 854,
					"name": "waitReady",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 855,
							"name": "waitReady",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "this"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "types/dataSourceQuerier.ts",
							"line": 130,
							"character": 10
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						856,
						849,
						844,
						827,
						822,
						818,
						814,
						838,
						832,
						854
					]
				}
			],
			"sources": [
				{
					"fileName": "types/dataSourceQuerier.ts",
					"line": 13,
					"character": 34
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"name": "Adapter",
					"id": 871
				},
				{
					"type": "reference",
					"name": "BrowserWebApiAdapter",
					"id": 2339
				},
				{
					"type": "reference",
					"name": "DataAccessLayer",
					"id": 410
				},
				{
					"type": "reference",
					"name": "InMemoryAdapter",
					"id": 1359
				},
				{
					"type": "reference",
					"name": "NodeWebApiAdapter",
					"id": 2161
				},
				{
					"type": "reference",
					"name": "WebApiAdapter",
					"id": 1823
				},
				{
					"type": "reference",
					"name": "WebStorageAdapter",
					"id": 2029
				}
			]
		},
		{
			"id": 999,
			"name": "EntitySpawner",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 1002,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1003,
							"name": "new EntitySpawner",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 1004,
									"name": "source",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "IRawEntityAttributes",
										"id": 797
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Entity",
								"id": 1022
							}
						}
					],
					"sources": [
						{
							"fileName": "entities/entityFactory.ts",
							"line": 38,
							"character": 14
						}
					]
				},
				{
					"id": 1000,
					"name": "model",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "entities/entityFactory.ts",
							"line": 37,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"name": "Model",
						"id": 576
					}
				},
				{
					"id": 1001,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "entities/entityFactory.ts",
							"line": 38,
							"character": 5
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1002
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1000,
						1001
					]
				}
			],
			"sources": [
				{
					"fileName": "entities/entityFactory.ts",
					"line": 36,
					"character": 30
				}
			]
		},
		{
			"id": 90,
			"name": "EnumFieldDescriptor",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 95,
					"name": "default",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "types/modelDescription.ts",
							"line": 73,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "Function"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "BaseFieldDescriptor.default",
						"id": 74
					}
				},
				{
					"id": 91,
					"name": "enum",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "types/modelDescription.ts",
							"line": 87,
							"character": 5
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "any"
						}
					}
				},
				{
					"id": 94,
					"name": "required",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Set to `true` to require a value. Even when `true`, empty arrays are allowed. To require at least one element in an array, use the `minLength` property",
						"tags": [
							{
								"tag": "author",
								"text": "gerkin\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "types/modelDescription.ts",
							"line": 72,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "true"
							},
							{
								"type": "intrinsic",
								"name": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "BaseFieldDescriptor.required",
						"id": 73
					}
				},
				{
					"id": 92,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Expected type of the value. Either `type` or `model` should be defined, or none.",
						"tags": [
							{
								"tag": "author",
								"text": "gerkin\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "types/modelDescription.ts",
							"line": 60,
							"character": 5
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "BaseFieldDescriptor.type",
						"id": 71
					}
				},
				{
					"id": 93,
					"name": "validate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Custom validation callback.",
						"tags": [
							{
								"tag": "author",
								"text": "gerkin\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "types/modelDescription.ts",
							"line": 66,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "Function"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Function"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "BaseFieldDescriptor.validate",
						"id": 72
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						95,
						91,
						94,
						92,
						93
					]
				}
			],
			"sources": [
				{
					"fileName": "types/modelDescription.ts",
					"line": 86,
					"character": 36
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "BaseFieldDescriptor",
					"id": 70
				}
			]
		},
		{
			"id": 162,
			"name": "ErrorObject",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 168,
					"name": "children",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "entityTransformers/checkTransformer.ts",
							"line": 66,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "ErrorObjectFinal",
									"id": 172
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 169,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 170,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 171,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ErrorObjectFinal",
											"id": 172
										}
									},
									"sources": [
										{
											"fileName": "entityTransformers/checkTransformer.ts",
											"line": 66,
											"character": 32
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 167,
					"name": "enum",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "entityTransformers/checkTransformer.ts",
							"line": 65,
							"character": 5
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 166,
					"name": "required",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "entityTransformers/checkTransformer.ts",
							"line": 64,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 165,
					"name": "spec",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "entityTransformers/checkTransformer.ts",
							"line": 63,
							"character": 5
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 164,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "entityTransformers/checkTransformer.ts",
							"line": 62,
							"character": 5
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 163,
					"name": "validate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "entityTransformers/checkTransformer.ts",
							"line": 61,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						168,
						167,
						166,
						165,
						164,
						163
					]
				}
			],
			"sources": [
				{
					"fileName": "entityTransformers/checkTransformer.ts",
					"line": 60,
					"character": 28
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"name": "ErrorObjectFinal",
					"id": 172
				},
				{
					"type": "reference",
					"name": "TypeErrorObject",
					"id": 183
				}
			]
		},
		{
			"id": 172,
			"name": "ErrorObjectFinal",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 179,
					"name": "children",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "entityTransformers/checkTransformer.ts",
							"line": 66,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "ErrorObjectFinal",
									"id": 172
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 180,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 181,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 182,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ErrorObjectFinal",
											"id": 172
										}
									},
									"sources": [
										{
											"fileName": "entityTransformers/checkTransformer.ts",
											"line": 66,
											"character": 32
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ErrorObject.children",
						"id": 168
					}
				},
				{
					"id": 178,
					"name": "enum",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "entityTransformers/checkTransformer.ts",
							"line": 65,
							"character": 5
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ErrorObject.enum",
						"id": 167
					}
				},
				{
					"id": 177,
					"name": "required",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "entityTransformers/checkTransformer.ts",
							"line": 64,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ErrorObject.required",
						"id": 166
					}
				},
				{
					"id": 176,
					"name": "spec",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "entityTransformers/checkTransformer.ts",
							"line": 63,
							"character": 5
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ErrorObject.spec",
						"id": 165
					}
				},
				{
					"id": 175,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "entityTransformers/checkTransformer.ts",
							"line": 62,
							"character": 5
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ErrorObject.type",
						"id": 164
					}
				},
				{
					"id": 174,
					"name": "validate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "entityTransformers/checkTransformer.ts",
							"line": 61,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ErrorObject.validate",
						"id": 163
					}
				},
				{
					"id": 173,
					"name": "value",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "entityTransformers/checkTransformer.ts",
							"line": 70,
							"character": 6
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						179,
						178,
						177,
						176,
						175,
						174,
						173
					]
				}
			],
			"sources": [
				{
					"fileName": "entityTransformers/checkTransformer.ts",
					"line": 69,
					"character": 33
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "ErrorObject",
					"id": 162
				}
			]
		},
		{
			"id": 865,
			"name": "IAdapterCtr",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"typeParameter": [
				{
					"id": 866,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "AdapterEntity",
						"id": 1197
					}
				}
			],
			"children": [
				{
					"id": 867,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 868,
							"name": "new IAdapterCtr",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 869,
									"name": "dataSourceName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 870,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Adapter",
								"id": 871
							},
							"overwrites": {
								"type": "reference",
								"name": "Constructable.__new",
								"id": 1229
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/adapter.ts",
							"line": 29,
							"character": 32
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Constructable.__new",
						"id": 1229
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						867
					]
				}
			],
			"sources": [
				{
					"fileName": "adapters/base/adapter.ts",
					"line": 28,
					"character": 28
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "Constructable",
					"id": 1227,
					"typeArguments": [
						{
							"type": "reference",
							"name": "Adapter",
							"id": 871
						}
					]
				}
			]
		},
		{
			"id": 1181,
			"name": "IAdapterEntityCtr",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"typeParameter": [
				{
					"id": 1182,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "AdapterEntity",
						"id": 1197
					}
				}
			],
			"children": [
				{
					"id": 1183,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1184,
							"name": "new IAdapterEntityCtr",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 1185,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IRawEntityAttributes",
										"id": 992
									}
								},
								{
									"id": 1186,
									"name": "adapter",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Adapter",
										"id": 871,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T",
												"constraint": {
													"type": "reference",
													"name": "AdapterEntity",
													"id": 1197
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "T",
								"constraint": {
									"type": "reference",
									"name": "AdapterEntity",
									"id": 1197
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/entity.ts",
							"line": 17,
							"character": 60
						}
					]
				},
				{
					"id": 1187,
					"name": "matches",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1188,
							"name": "matches",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1189,
									"name": "attributes",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IRawAdapterEntityAttributes",
										"id": 1176
									}
								},
								{
									"id": 1190,
									"name": "query",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "SelectQuery",
										"id": 377
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/entity.ts",
							"line": 20,
							"character": 8
						}
					]
				},
				{
					"id": 1191,
					"name": "setId",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1192,
							"name": "setId",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1193,
									"name": "attributes",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IRawEntityAttributes",
										"id": 992
									}
								},
								{
									"id": 1194,
									"name": "adapter",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Adapter",
										"id": 871,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T",
												"constraint": {
													"type": "reference",
													"name": "AdapterEntity",
													"id": 1197
												}
											}
										]
									}
								},
								{
									"id": 1195,
									"name": "propName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1196,
									"name": "id",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "EntityUid",
										"id": 1157
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "IRawAdapterEntityAttributes",
								"id": 1176
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/entity.ts",
							"line": 25,
							"character": 6
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1183
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1187,
						1191
					]
				}
			],
			"sources": [
				{
					"fileName": "adapters/base/entity.ts",
					"line": 17,
					"character": 34
				}
			]
		},
		{
			"id": 2295,
			"name": "IAdapterRegistry",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"indexSignature": {
				"id": 2296,
				"name": "__index",
				"kind": 8192,
				"kindString": "Index signature",
				"flags": {},
				"parameters": [
					{
						"id": 2297,
						"name": "key",
						"kind": 32768,
						"kindString": "Parameter",
						"flags": {},
						"type": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				],
				"type": {
					"type": "reference",
					"name": "IAdapterCtr",
					"id": 865
				}
			},
			"sources": [
				{
					"fileName": "diaspora.ts",
					"line": 16,
					"character": 26
				}
			]
		},
		{
			"id": 1818,
			"name": "IApiDescription",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 1821,
					"name": "body",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "adapters/webApi/adapter.ts",
							"line": 68,
							"character": 5
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 1820,
					"name": "endPoint",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "adapters/webApi/adapter.ts",
							"line": 67,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1819,
					"name": "method",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "adapters/webApi/adapter.ts",
							"line": 66,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"name": "EHttpVerb",
						"id": 1672
					}
				},
				{
					"id": 1822,
					"name": "queryString",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "adapters/webApi/adapter.ts",
							"line": 69,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1821,
						1820,
						1819,
						1822
					]
				}
			],
			"sources": [
				{
					"fileName": "adapters/webApi/adapter.ts",
					"line": 65,
					"character": 32
				}
			]
		},
		{
			"id": 1005,
			"name": "IDataSourceMap",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"typeParameter": [
				{
					"id": 1006,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "AdapterEntity",
						"id": 1197
					}
				}
			],
			"children": [
				{
					"id": 1021,
					"name": "WeakMap",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.es2015.collection.d.ts",
							"line": 57,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"name": "WeakMapConstructor"
					}
				},
				{
					"id": 1007,
					"name": "__@toStringTag",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
							"line": 134,
							"character": 33
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "WeakMap"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "WeakMap.[Symbol.toStringTag]"
					}
				},
				{
					"id": 1008,
					"name": "delete",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1009,
							"name": "delete",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1010,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "DataAccessLayer",
										"id": 410,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T",
												"constraint": {
													"type": "reference",
													"name": "AdapterEntity",
													"id": 1197
												}
											},
											{
												"type": "reference",
												"name": "Adapter",
												"id": 871,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "T",
														"constraint": {
															"type": "reference",
															"name": "AdapterEntity",
															"id": 1197
														}
													}
												]
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "WeakMap.delete"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.es2015.collection.d.ts",
							"line": 46,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "WeakMap.delete"
					}
				},
				{
					"id": 1011,
					"name": "get",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1012,
							"name": "get",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1013,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "DataAccessLayer",
										"id": 410,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T",
												"constraint": {
													"type": "reference",
													"name": "AdapterEntity",
													"id": 1197
												}
											},
											{
												"type": "reference",
												"name": "Adapter",
												"id": 871,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "T",
														"constraint": {
															"type": "reference",
															"name": "AdapterEntity",
															"id": 1197
														}
													}
												]
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "T",
												"constraint": {
													"type": "reference",
													"name": "AdapterEntity",
													"id": 1197
												}
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "WeakMap.get"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.es2015.collection.d.ts",
							"line": 47,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "WeakMap.get"
					}
				},
				{
					"id": 1014,
					"name": "has",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1015,
							"name": "has",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1016,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "DataAccessLayer",
										"id": 410,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T",
												"constraint": {
													"type": "reference",
													"name": "AdapterEntity",
													"id": 1197
												}
											},
											{
												"type": "reference",
												"name": "Adapter",
												"id": 871,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "T",
														"constraint": {
															"type": "reference",
															"name": "AdapterEntity",
															"id": 1197
														}
													}
												]
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "WeakMap.has"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.es2015.collection.d.ts",
							"line": 48,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "WeakMap.has"
					}
				},
				{
					"id": 1017,
					"name": "set",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1018,
							"name": "set",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1019,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "DataAccessLayer",
										"id": 410,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T",
												"constraint": {
													"type": "reference",
													"name": "AdapterEntity",
													"id": 1197
												}
											},
											{
												"type": "reference",
												"name": "Adapter",
												"id": 871,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "T",
														"constraint": {
															"type": "reference",
															"name": "AdapterEntity",
															"id": 1197
														}
													}
												]
											}
										]
									}
								},
								{
									"id": 1020,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "T",
												"constraint": {
													"type": "reference",
													"name": "AdapterEntity",
													"id": 1197
												}
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "WeakMap.set"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.es2015.collection.d.ts",
							"line": 49,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "WeakMap.set"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1021,
						1007
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1008,
						1011,
						1014,
						1017
					]
				}
			],
			"sources": [
				{
					"fileName": "entities/entityFactory.ts",
					"line": 41,
					"character": 31
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "WeakMap",
					"typeArguments": [
						{
							"type": "reference",
							"name": "DataAccessLayer",
							"id": 410,
							"typeArguments": [
								{
									"type": "typeParameter",
									"name": "T",
									"constraint": {
										"type": "reference",
										"name": "AdapterEntity",
										"id": 1197
									}
								},
								{
									"type": "reference",
									"name": "Adapter",
									"id": 871,
									"typeArguments": [
										{
											"type": "typeParameter",
											"name": "T",
											"constraint": {
												"type": "reference",
												"name": "AdapterEntity",
												"id": 1197
											}
										}
									]
								}
							]
						},
						{
							"type": "union",
							"types": [
								{
									"type": "typeParameter",
									"name": "T",
									"constraint": {
										"type": "reference",
										"name": "AdapterEntity",
										"id": 1197
									}
								},
								{
									"type": "intrinsic",
									"name": "null"
								}
							]
						}
					]
				}
			]
		},
		{
			"id": 515,
			"name": "IDataSourceRegistry",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"indexSignature": {
				"id": 516,
				"name": "__index",
				"kind": 8192,
				"kindString": "Index signature",
				"flags": {},
				"parameters": [
					{
						"id": 517,
						"name": "key",
						"kind": 32768,
						"kindString": "Parameter",
						"flags": {},
						"type": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				],
				"type": {
					"type": "reference",
					"name": "DataAccessLayer",
					"id": 410,
					"typeArguments": [
						{
							"type": "reference",
							"name": "AdapterEntity",
							"id": 1197
						},
						{
							"type": "reference",
							"name": "Adapter",
							"id": 871
						}
					]
				}
			},
			"sources": [
				{
					"fileName": "staticStores.ts",
					"line": 7,
					"character": 36
				}
			]
		},
		{
			"id": 1354,
			"name": "IDataStoreHash",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"indexSignature": {
				"id": 1355,
				"name": "__index",
				"kind": 8192,
				"kindString": "Index signature",
				"flags": {},
				"parameters": [
					{
						"id": 1356,
						"name": "key",
						"kind": 32768,
						"kindString": "Parameter",
						"flags": {},
						"type": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				],
				"type": {
					"type": "reflection",
					"declaration": {
						"id": 1357,
						"name": "__type",
						"kind": 65536,
						"kindString": "Type literal",
						"flags": {},
						"children": [
							{
								"id": 1358,
								"name": "items",
								"kind": 32,
								"kindString": "Variable",
								"flags": {},
								"sources": [
									{
										"fileName": "adapters/inMemory/adapter.ts",
										"line": 15,
										"character": 23
									}
								],
								"type": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"name": "IRawAdapterEntityAttributes",
										"id": 1176
									}
								}
							}
						],
						"groups": [
							{
								"title": "Variables",
								"kind": 32,
								"children": [
									1358
								]
							}
						],
						"sources": [
							{
								"fileName": "adapters/inMemory/adapter.ts",
								"line": 15,
								"character": 15
							}
						]
					}
				}
			},
			"sources": [
				{
					"fileName": "adapters/inMemory/adapter.ts",
					"line": 14,
					"character": 24
				}
			]
		},
		{
			"id": 1149,
			"name": "IEntityFactory",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "This factory function generate a new class constructor, prepared for a specific model.",
				"returns": "Entity constructor to use with this model.\n",
				"tags": [
					{
						"tag": "author",
						"text": "Gerkin"
					}
				]
			},
			"signatures": [
				{
					"id": 1150,
					"name": "__call",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "This factory function generate a new class constructor, prepared for a specific model.",
						"returns": "Entity constructor to use with this model.\n"
					},
					"parameters": [
						{
							"id": 1151,
							"name": "name",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"shortText": "Name of this model."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1152,
							"name": "modelDesc",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"shortText": "Model configuration that generated the associated `model`."
							},
							"type": {
								"type": "reference",
								"name": "ModelDescription",
								"id": 52
							}
						},
						{
							"id": 1153,
							"name": "model",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"shortText": "Model that will spawn entities."
							},
							"type": {
								"type": "reference",
								"name": "Model",
								"id": 576
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "EntitySpawner",
						"id": 999
					}
				}
			],
			"children": [
				{
					"id": 1154,
					"name": "Entity",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "entities/entityFactory.ts",
							"line": 599,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"name": "Entity",
						"id": 1022
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1154
					]
				}
			],
			"sources": [
				{
					"fileName": "entities/entityFactory.ts",
					"line": 597,
					"character": 31
				}
			]
		},
		{
			"id": 802,
			"name": "IEnumeratedHash",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"typeParameter": [
				{
					"id": 803,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"indexSignature": {
				"id": 804,
				"name": "__index",
				"kind": 8192,
				"kindString": "Index signature",
				"flags": {},
				"parameters": [
					{
						"id": 805,
						"name": "key",
						"kind": 32768,
						"kindString": "Parameter",
						"flags": {},
						"type": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				],
				"type": {
					"type": "typeParameter",
					"name": "T"
				}
			},
			"sources": [
				{
					"fileName": "types/dataSourceQuerier.ts",
					"line": 5,
					"character": 32
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"name": "IRemapsHash",
					"id": 806
				},
				{
					"type": "reference",
					"name": "IFiltersHash",
					"id": 809
				}
			]
		},
		{
			"id": 1671,
			"name": "IEventProvider",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "adapters/webApi/adapter.ts",
					"line": 51,
					"character": 31
				}
			]
		},
		{
			"id": 1668,
			"name": "IEventProviderFactory",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 1669,
					"name": "__call",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 1670,
							"name": "args",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isRest": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "IEventProvider",
						"id": 1671
					}
				}
			],
			"sources": [
				{
					"fileName": "adapters/webApi/adapter.ts",
					"line": 48,
					"character": 38
				}
			]
		},
		{
			"id": 809,
			"name": "IFiltersHash",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"indexSignature": {
				"id": 810,
				"name": "__index",
				"kind": 8192,
				"kindString": "Index signature",
				"flags": {},
				"parameters": [
					{
						"id": 811,
						"name": "key",
						"kind": 32768,
						"kindString": "Parameter",
						"flags": {},
						"type": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				],
				"type": {
					"type": "intrinsic",
					"name": "any"
				}
			},
			"sources": [
				{
					"fileName": "types/dataSourceQuerier.ts",
					"line": 11,
					"character": 29
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "IEnumeratedHash",
					"id": 802,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "any"
						}
					]
				}
			]
		},
		{
			"id": 1173,
			"name": "IIdHash",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"indexSignature": {
				"id": 1174,
				"name": "__index",
				"kind": 8192,
				"kindString": "Index signature",
				"flags": {},
				"parameters": [
					{
						"id": 1175,
						"name": "key",
						"kind": 32768,
						"kindString": "Parameter",
						"flags": {},
						"type": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				],
				"type": {
					"type": "reference",
					"name": "EntityUid",
					"id": 1157
				}
			},
			"sources": [
				{
					"fileName": "adapters/base/entity.ts",
					"line": 8,
					"character": 24
				}
			]
		},
		{
			"id": 687,
			"name": "ILoggerInterface",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Logger exposed by Diaspora.\nOn server environment, you can use it to configure the underlying Winston instance.\nOn the browser, it wraps calls to the browser's {@link https://developer.mozilla.org/en-US/docs/Web/API/Window/console console}.",
				"tags": [
					{
						"tag": "author",
						"text": "Gerkin\n"
					}
				]
			},
			"children": [
				{
					"id": 690,
					"name": "debug",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "logger/logger.ts",
							"line": 34,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"name": "LoggingFunction",
						"id": 709
					}
				},
				{
					"id": 693,
					"name": "error",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "logger/logger.ts",
							"line": 37,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"name": "LoggingFunction",
						"id": 709
					}
				},
				{
					"id": 691,
					"name": "log",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "logger/logger.ts",
							"line": 35,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"name": "LoggingFunction",
						"id": 709
					}
				},
				{
					"id": 688,
					"name": "silly",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "logger/logger.ts",
							"line": 32,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"name": "LoggingFunction",
						"id": 709
					}
				},
				{
					"id": 689,
					"name": "verbose",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "logger/logger.ts",
							"line": 33,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "LoggingFunction",
						"id": 709
					}
				},
				{
					"id": 692,
					"name": "warn",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "logger/logger.ts",
							"line": 36,
							"character": 5
						}
					],
					"type": {
						"type": "reference",
						"name": "LoggingFunction",
						"id": 709
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						690,
						693,
						691,
						688,
						689,
						692
					]
				}
			],
			"sources": [
				{
					"fileName": "logger/logger.ts",
					"line": 31,
					"character": 33
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"name": "BrowserLogger",
					"id": 713
				},
				{
					"type": "reference",
					"name": "Logger",
					"id": 694
				},
				{
					"type": "reference",
					"name": "NodeLogger",
					"id": 732
				}
			]
		},
		{
			"id": 518,
			"name": "IModelRegistry",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"indexSignature": {
				"id": 519,
				"name": "__index",
				"kind": 8192,
				"kindString": "Index signature",
				"flags": {},
				"parameters": [
					{
						"id": 520,
						"name": "key",
						"kind": 32768,
						"kindString": "Parameter",
						"flags": {},
						"type": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				],
				"type": {
					"type": "reference",
					"name": "Model",
					"id": 576
				}
			},
			"sources": [
				{
					"fileName": "staticStores.ts",
					"line": 12,
					"character": 31
				}
			]
		},
		{
			"id": 2152,
			"name": "INodeWebApiAdapterConfig",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 2153,
					"name": "host",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Hostname of the endpoint. On server environment, this parameter is *required*."
					},
					"sources": [
						{
							"fileName": "adapters/webApi/subAdapters/nodeAdapter.ts",
							"line": 10,
							"character": 5
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"name": "IWebApiAdapterConfig.host",
						"id": 1650
					}
				},
				{
					"id": 2156,
					"name": "path",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Path to the endpoint."
					},
					"sources": [
						{
							"fileName": "adapters/webApi/adapter.ts",
							"line": 32,
							"character": 5
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "IWebApiAdapterConfig.path",
						"id": 1653
					}
				},
				{
					"id": 2157,
					"name": "pluralApis",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Hash with keys being the singular name of the endpoint, and values being the associated plural name of the same endpoint."
					},
					"sources": [
						{
							"fileName": "adapters/webApi/adapter.ts",
							"line": 36,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 2158,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 2159,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 2160,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "IWebApiAdapterConfig.pluralApis",
						"id": 1654
					}
				},
				{
					"id": 2155,
					"name": "port",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Port of the endpoint."
					},
					"sources": [
						{
							"fileName": "adapters/webApi/adapter.ts",
							"line": 28,
							"character": 5
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "intrinsic",
								"name": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "IWebApiAdapterConfig.port",
						"id": 1652
					}
				},
				{
					"id": 2154,
					"name": "scheme",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Scheme to use. On server environment, this parameter is *required*. On browser environment, it defaults to a relative scheme (IE ``). Note that it will be suffixed with `//`."
					},
					"sources": [
						{
							"fileName": "adapters/webApi/subAdapters/nodeAdapter.ts",
							"line": 14,
							"character": 7
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"name": "IWebApiAdapterConfig.scheme",
						"id": 1651
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						2153,
						2156,
						2157,
						2155,
						2154
					]
				}
			],
			"sources": [
				{
					"fileName": "adapters/webApi/subAdapters/nodeAdapter.ts",
					"line": 6,
					"character": 41
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "IWebApiAdapterConfig",
					"id": 1649
				}
			]
		},
		{
			"id": 990,
			"name": "IOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 991,
					"name": "skipEvents",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "entities/entityFactory.ts",
							"line": 18,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "true"
							},
							{
								"type": "intrinsic",
								"name": "false"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						991
					]
				}
			],
			"sources": [
				{
					"fileName": "entities/entityFactory.ts",
					"line": 17,
					"character": 25
				}
			]
		},
		{
			"id": 1232,
			"name": "IQueryCheckFunction",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 1233,
					"name": "__call",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 1234,
							"name": "entityVal",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 1235,
							"name": "targetVal",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"sources": [
				{
					"fileName": "adapters/base/adapter-utils.ts",
					"line": 100,
					"character": 36
				}
			]
		},
		{
			"id": 1176,
			"name": "IRawAdapterEntityAttributes",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"indexSignature": {
				"id": 1179,
				"name": "__index",
				"kind": 8192,
				"kindString": "Index signature",
				"flags": {},
				"parameters": [
					{
						"id": 1180,
						"name": "key",
						"kind": 32768,
						"kindString": "Parameter",
						"flags": {},
						"type": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				],
				"type": {
					"type": "intrinsic",
					"name": "any"
				}
			},
			"children": [
				{
					"id": 1177,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "adapters/base/entity.ts",
							"line": 12,
							"character": 3
						}
					],
					"type": {
						"type": "reference",
						"name": "EntityUid",
						"id": 1157
					}
				},
				{
					"id": 1178,
					"name": "idHash",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "adapters/base/entity.ts",
							"line": 13,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"name": "IIdHash",
						"id": 1173
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1177,
						1178
					]
				}
			],
			"sources": [
				{
					"fileName": "adapters/base/entity.ts",
					"line": 11,
					"character": 44
				}
			]
		},
		{
			"id": 992,
			"name": "IRawEntityAttributes",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"indexSignature": {
				"id": 993,
				"name": "__index",
				"kind": 8192,
				"kindString": "Index signature",
				"flags": {},
				"parameters": [
					{
						"id": 994,
						"name": "key",
						"kind": 32768,
						"kindString": "Parameter",
						"flags": {},
						"type": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				],
				"type": {
					"type": "intrinsic",
					"name": "any"
				}
			},
			"sources": [
				{
					"fileName": "entities/entityFactory.ts",
					"line": 20,
					"character": 37
				}
			]
		},
		{
			"id": 806,
			"name": "IRemapsHash",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"indexSignature": {
				"id": 807,
				"name": "__index",
				"kind": 8192,
				"kindString": "Index signature",
				"flags": {},
				"parameters": [
					{
						"id": 808,
						"name": "key",
						"kind": 32768,
						"kindString": "Parameter",
						"flags": {},
						"type": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				],
				"type": {
					"type": "intrinsic",
					"name": "any"
				}
			},
			"sources": [
				{
					"fileName": "types/dataSourceQuerier.ts",
					"line": 9,
					"character": 28
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "IEnumeratedHash",
					"id": 802,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "any"
						}
					]
				}
			]
		},
		{
			"id": 1649,
			"name": "IWebApiAdapterConfig",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 1650,
					"name": "host",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Hostname of the endpoint. On server environment, this parameter is *required*."
					},
					"sources": [
						{
							"fileName": "adapters/webApi/adapter.ts",
							"line": 20,
							"character": 5
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "false"
							}
						]
					}
				},
				{
					"id": 1653,
					"name": "path",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Path to the endpoint."
					},
					"sources": [
						{
							"fileName": "adapters/webApi/adapter.ts",
							"line": 32,
							"character": 5
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1654,
					"name": "pluralApis",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Hash with keys being the singular name of the endpoint, and values being the associated plural name of the same endpoint."
					},
					"sources": [
						{
							"fileName": "adapters/webApi/adapter.ts",
							"line": 36,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1655,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 1656,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 1657,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							}
						]
					}
				},
				{
					"id": 1652,
					"name": "port",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Port of the endpoint."
					},
					"sources": [
						{
							"fileName": "adapters/webApi/adapter.ts",
							"line": 28,
							"character": 5
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "intrinsic",
								"name": "false"
							}
						]
					}
				},
				{
					"id": 1651,
					"name": "scheme",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Scheme to use. On server environment, this parameter is *required*. On browser environment, it defaults to a relative scheme (IE ``). Note that it will be suffixed with `//`."
					},
					"sources": [
						{
							"fileName": "adapters/webApi/adapter.ts",
							"line": 24,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "false"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1650,
						1653,
						1654,
						1652,
						1651
					]
				}
			],
			"sources": [
				{
					"fileName": "adapters/webApi/adapter.ts",
					"line": 16,
					"character": 37
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"name": "IWebApiAdapterInternalConfig",
					"id": 1658
				},
				{
					"type": "reference",
					"name": "INodeWebApiAdapterConfig",
					"id": 2152
				}
			]
		},
		{
			"id": 1658,
			"name": "IWebApiAdapterInternalConfig",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 1667,
					"name": "baseEndPoint",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "adapters/webApi/adapter.ts",
							"line": 45,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 1659,
					"name": "host",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "adapters/webApi/adapter.ts",
							"line": 40,
							"character": 5
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "false"
							}
						]
					},
					"overwrites": {
						"type": "reference",
						"name": "IWebApiAdapterConfig.host",
						"id": 1650
					}
				},
				{
					"id": 1662,
					"name": "path",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "adapters/webApi/adapter.ts",
							"line": 43,
							"character": 5
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"name": "IWebApiAdapterConfig.path",
						"id": 1653
					}
				},
				{
					"id": 1663,
					"name": "pluralApis",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "adapters/webApi/adapter.ts",
							"line": 44,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1664,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 1665,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 1666,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							}
						]
					},
					"overwrites": {
						"type": "reference",
						"name": "IWebApiAdapterConfig.pluralApis",
						"id": 1654
					}
				},
				{
					"id": 1661,
					"name": "port",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "adapters/webApi/adapter.ts",
							"line": 42,
							"character": 5
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "intrinsic",
								"name": "false"
							}
						]
					},
					"overwrites": {
						"type": "reference",
						"name": "IWebApiAdapterConfig.port",
						"id": 1652
					}
				},
				{
					"id": 1660,
					"name": "scheme",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "adapters/webApi/adapter.ts",
							"line": 41,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "false"
							}
						]
					},
					"overwrites": {
						"type": "reference",
						"name": "IWebApiAdapterConfig.scheme",
						"id": 1651
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1667,
						1659,
						1662,
						1663,
						1661,
						1660
					]
				}
			],
			"sources": [
				{
					"fileName": "adapters/webApi/adapter.ts",
					"line": 39,
					"character": 45
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "IWebApiAdapterConfig",
					"id": 1649
				}
			]
		},
		{
			"id": 2027,
			"name": "IWebStorageAdapterConfig",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 2028,
					"name": "session",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"tags": [
							{
								"tag": "param",
								"text": "Set to true to use sessionStorage instead of localStorage.\n",
								"param": "config"
							}
						]
					},
					"sources": [
						{
							"fileName": "adapters/webStorage/adapter.ts",
							"line": 18,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						2028
					]
				}
			],
			"sources": [
				{
					"fileName": "adapters/webStorage/adapter.ts",
					"line": 14,
					"character": 41
				}
			]
		},
		{
			"id": 1518,
			"name": "IXhrResponse",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 1568,
					"name": "DONE",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 13775,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "XMLHttpRequest.DONE"
					}
				},
				{
					"id": 1569,
					"name": "HEADERS_RECEIVED",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 13776,
							"character": 29
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "XMLHttpRequest.HEADERS_RECEIVED"
					}
				},
				{
					"id": 1570,
					"name": "LOADING",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 13777,
							"character": 20
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "XMLHttpRequest.LOADING"
					}
				},
				{
					"id": 1571,
					"name": "OPENED",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 13778,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "XMLHttpRequest.OPENED"
					}
				},
				{
					"id": 1572,
					"name": "UNSENT",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 13779,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "XMLHttpRequest.UNSENT"
					}
				},
				{
					"id": 1639,
					"name": "XMLHttpRequest",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 13786,
							"character": 26
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1640,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 1642,
									"name": "constructor",
									"kind": 512,
									"kindString": "Constructor",
									"flags": {},
									"signatures": [
										{
											"id": 1643,
											"name": "new __type",
											"kind": 16384,
											"kindString": "Constructor signature",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "XMLHttpRequest"
											}
										}
									],
									"sources": [
										{
											"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 13787,
											"character": 30
										}
									]
								},
								{
									"id": 1644,
									"name": "DONE",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 13789,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1645,
									"name": "HEADERS_RECEIVED",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 13790,
											"character": 29
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1646,
									"name": "LOADING",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 13791,
											"character": 20
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1647,
									"name": "OPENED",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 13792,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1648,
									"name": "UNSENT",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 13793,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1641,
									"name": "prototype",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 13787,
											"character": 13
										}
									],
									"type": {
										"type": "reference",
										"name": "XMLHttpRequest"
									}
								}
							],
							"groups": [
								{
									"title": "Constructors",
									"kind": 512,
									"children": [
										1642
									]
								},
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1644,
										1645,
										1646,
										1647,
										1648,
										1641
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
									"line": 13786,
									"character": 27
								}
							]
						}
					}
				},
				{
					"id": 1537,
					"name": "msCaching",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 13764,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "XMLHttpRequest.msCaching"
					}
				},
				{
					"id": 1604,
					"name": "onabort",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 14252,
							"character": 11
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1605,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 1606,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1607,
											"name": "this",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "XMLHttpRequest"
											}
										},
										{
											"id": 1608,
											"name": "ev",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Event"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
									"line": 14252,
									"character": 12
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "XMLHttpRequestEventTarget.onabort"
					}
				},
				{
					"id": 1609,
					"name": "onerror",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 14253,
							"character": 11
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1610,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 1611,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1612,
											"name": "this",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "XMLHttpRequest"
											}
										},
										{
											"id": 1613,
											"name": "ev",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorEvent"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
									"line": 14253,
									"character": 12
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "XMLHttpRequestEventTarget.onerror"
					}
				},
				{
					"id": 1614,
					"name": "onload",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 14254,
							"character": 10
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1615,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 1616,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1617,
											"name": "this",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "XMLHttpRequest"
											}
										},
										{
											"id": 1618,
											"name": "ev",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Event"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
									"line": 14254,
									"character": 11
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "XMLHttpRequestEventTarget.onload"
					}
				},
				{
					"id": 1619,
					"name": "onloadend",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 14255,
							"character": 13
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1620,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 1621,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1622,
											"name": "this",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "XMLHttpRequest"
											}
										},
										{
											"id": 1623,
											"name": "ev",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ProgressEvent"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
									"line": 14255,
									"character": 14
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "XMLHttpRequestEventTarget.onloadend"
					}
				},
				{
					"id": 1624,
					"name": "onloadstart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 14256,
							"character": 15
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1625,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 1626,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1627,
											"name": "this",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "XMLHttpRequest"
											}
										},
										{
											"id": 1628,
											"name": "ev",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Event"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
									"line": 14256,
									"character": 16
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "XMLHttpRequestEventTarget.onloadstart"
					}
				},
				{
					"id": 1629,
					"name": "onprogress",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 14257,
							"character": 14
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1630,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 1631,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1632,
											"name": "this",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "XMLHttpRequest"
											}
										},
										{
											"id": 1633,
											"name": "ev",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ProgressEvent"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
									"line": 14257,
									"character": 15
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "XMLHttpRequestEventTarget.onprogress"
					}
				},
				{
					"id": 1522,
					"name": "onreadystatechange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 13752,
							"character": 22
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1523,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 1524,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1525,
											"name": "this",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "XMLHttpRequest"
											}
										},
										{
											"id": 1526,
											"name": "ev",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Event"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
									"line": 13752,
									"character": 23
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "XMLHttpRequest.onreadystatechange"
					}
				},
				{
					"id": 1634,
					"name": "ontimeout",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 14258,
							"character": 13
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1635,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 1636,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1637,
											"name": "this",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "XMLHttpRequest"
											}
										},
										{
											"id": 1638,
											"name": "ev",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ProgressEvent"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
									"line": 14258,
									"character": 14
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "XMLHttpRequestEventTarget.ontimeout"
					}
				},
				{
					"id": 1527,
					"name": "readyState",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 13753,
							"character": 23
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "XMLHttpRequest.readyState"
					}
				},
				{
					"id": 1519,
					"name": "response",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "adapters/webApi/adapter.ts",
							"line": 11,
							"character": 9
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1520,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 1521,
									"name": "message",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "adapters/webApi/adapter.ts",
											"line": 12,
											"character": 9
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1521
									]
								}
							],
							"sources": [
								{
									"fileName": "adapters/webApi/adapter.ts",
									"line": 11,
									"character": 10
								}
							]
						}
					},
					"overwrites": {
						"type": "reference",
						"name": "XMLHttpRequest.response"
					}
				},
				{
					"id": 1528,
					"name": "responseText",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 13755,
							"character": 25
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "XMLHttpRequest.responseText"
					}
				},
				{
					"id": 1529,
					"name": "responseType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 13756,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"name": "XMLHttpRequestResponseType"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "XMLHttpRequest.responseType"
					}
				},
				{
					"id": 1530,
					"name": "responseURL",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 13757,
							"character": 24
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "XMLHttpRequest.responseURL"
					}
				},
				{
					"id": 1531,
					"name": "responseXML",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 13758,
							"character": 24
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "Document"
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "XMLHttpRequest.responseXML"
					}
				},
				{
					"id": 1532,
					"name": "status",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 13759,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "XMLHttpRequest.status"
					}
				},
				{
					"id": 1533,
					"name": "statusText",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 13760,
							"character": 23
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "XMLHttpRequest.statusText"
					}
				},
				{
					"id": 1534,
					"name": "timeout",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 13761,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "XMLHttpRequest.timeout"
					}
				},
				{
					"id": 1535,
					"name": "upload",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 13762,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"name": "XMLHttpRequestUpload"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "XMLHttpRequest.upload"
					}
				},
				{
					"id": 1536,
					"name": "withCredentials",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 13763,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "XMLHttpRequest.withCredentials"
					}
				},
				{
					"id": 1538,
					"name": "abort",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1539,
							"name": "abort",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "XMLHttpRequest.abort"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 13765,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "XMLHttpRequest.abort"
					}
				},
				{
					"id": 1573,
					"name": "addEventListener",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1574,
							"name": "addEventListener",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 1575,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"name": "XMLHttpRequestEventMap"
										}
									}
								}
							],
							"parameters": [
								{
									"id": 1576,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "K",
										"constraint": {
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "reference",
												"name": "XMLHttpRequestEventMap"
											}
										}
									}
								},
								{
									"id": 1577,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1578,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1579,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1580,
															"name": "this",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "XMLHttpRequest"
															}
														},
														{
															"id": 1581,
															"name": "ev",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "unknown",
																"name": "XMLHttpRequestEventMap[K]"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"sources": [
												{
													"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
													"line": 13780,
													"character": 79
												}
											]
										}
									}
								},
								{
									"id": 1582,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "reference",
												"name": "AddEventListenerOptions"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"name": "EventTarget.addEventListener"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "XMLHttpRequest.addEventListener"
							}
						},
						{
							"id": 1583,
							"name": "addEventListener",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1584,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1585,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "EventListenerOrEventListenerObject"
									}
								},
								{
									"id": 1586,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "reference",
												"name": "AddEventListenerOptions"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"name": "EventTarget.addEventListener"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "XMLHttpRequest.addEventListener"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 13780,
							"character": 20
						},
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 13781,
							"character": 20
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "EventTarget.addEventListener"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "XMLHttpRequest.addEventListener"
					}
				},
				{
					"id": 1601,
					"name": "dispatchEvent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1602,
							"name": "dispatchEvent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1603,
									"name": "evt",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Event"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "EventTarget.dispatchEvent"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 3728,
							"character": 17
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "EventTarget.dispatchEvent"
					}
				},
				{
					"id": 1540,
					"name": "getAllResponseHeaders",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1541,
							"name": "getAllResponseHeaders",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "XMLHttpRequest.getAllResponseHeaders"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 13766,
							"character": 25
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "XMLHttpRequest.getAllResponseHeaders"
					}
				},
				{
					"id": 1542,
					"name": "getResponseHeader",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1543,
							"name": "getResponseHeader",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1544,
									"name": "header",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "XMLHttpRequest.getResponseHeader"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 13767,
							"character": 21
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "XMLHttpRequest.getResponseHeader"
					}
				},
				{
					"id": 1545,
					"name": "msCachingEnabled",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1546,
							"name": "msCachingEnabled",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "XMLHttpRequest.msCachingEnabled"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 13768,
							"character": 20
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "XMLHttpRequest.msCachingEnabled"
					}
				},
				{
					"id": 1547,
					"name": "open",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1548,
							"name": "open",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1549,
									"name": "method",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1550,
									"name": "url",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1551,
									"name": "async",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "true"
											},
											{
												"type": "intrinsic",
												"name": "false"
											}
										]
									}
								},
								{
									"id": 1552,
									"name": "user",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 1553,
									"name": "password",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "XMLHttpRequest.open"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 13769,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "XMLHttpRequest.open"
					}
				},
				{
					"id": 1554,
					"name": "overrideMimeType",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1555,
							"name": "overrideMimeType",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1556,
									"name": "mime",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "XMLHttpRequest.overrideMimeType"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 13770,
							"character": 20
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "XMLHttpRequest.overrideMimeType"
					}
				},
				{
					"id": 1587,
					"name": "removeEventListener",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1588,
							"name": "removeEventListener",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 1589,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"name": "XMLHttpRequestEventMap"
										}
									}
								}
							],
							"parameters": [
								{
									"id": 1590,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "K",
										"constraint": {
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "reference",
												"name": "XMLHttpRequestEventMap"
											}
										}
									}
								},
								{
									"id": 1591,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1592,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1593,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1594,
															"name": "this",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "XMLHttpRequest"
															}
														},
														{
															"id": 1595,
															"name": "ev",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "unknown",
																"name": "XMLHttpRequestEventMap[K]"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"sources": [
												{
													"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
													"line": 13782,
													"character": 82
												}
											]
										}
									}
								},
								{
									"id": 1596,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "reference",
												"name": "EventListenerOptions"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"name": "EventTarget.removeEventListener"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "XMLHttpRequest.removeEventListener"
							}
						},
						{
							"id": 1597,
							"name": "removeEventListener",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1598,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1599,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "EventListenerOrEventListenerObject"
									}
								},
								{
									"id": 1600,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "reference",
												"name": "EventListenerOptions"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"name": "EventTarget.removeEventListener"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "XMLHttpRequest.removeEventListener"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 13782,
							"character": 23
						},
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 13783,
							"character": 23
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "EventTarget.removeEventListener"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "XMLHttpRequest.removeEventListener"
					}
				},
				{
					"id": 1557,
					"name": "send",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1558,
							"name": "send",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1559,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "Document"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "XMLHttpRequest.send"
							}
						},
						{
							"id": 1560,
							"name": "send",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1561,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "XMLHttpRequest.send"
							}
						},
						{
							"id": 1562,
							"name": "send",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1563,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "XMLHttpRequest.send"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 13771,
							"character": 8
						},
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 13772,
							"character": 8
						},
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 13773,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "XMLHttpRequest.send"
					}
				},
				{
					"id": 1564,
					"name": "setRequestHeader",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1565,
							"name": "setRequestHeader",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1566,
									"name": "header",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1567,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "XMLHttpRequest.setRequestHeader"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 13774,
							"character": 20
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "XMLHttpRequest.setRequestHeader"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1568,
						1569,
						1570,
						1571,
						1572,
						1639,
						1537,
						1604,
						1609,
						1614,
						1619,
						1624,
						1629,
						1522,
						1634,
						1527,
						1519,
						1528,
						1529,
						1530,
						1531,
						1532,
						1533,
						1534,
						1535,
						1536
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1538,
						1573,
						1601,
						1540,
						1542,
						1545,
						1547,
						1554,
						1587,
						1557,
						1564
					]
				}
			],
			"sources": [
				{
					"fileName": "adapters/webApi/adapter.ts",
					"line": 10,
					"character": 29
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "XMLHttpRequest"
				}
			]
		},
		{
			"id": 52,
			"name": "ModelDescription",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 53,
					"name": "attributes",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "types/modelDescription.ts",
							"line": 45,
							"character": 11
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 54,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"indexSignature": {
								"id": 55,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 56,
										"name": "key",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "reference",
									"name": "FieldDescriptor",
									"id": 115
								}
							},
							"sources": [
								{
									"fileName": "types/modelDescription.ts",
									"line": 45,
									"character": 12
								}
							]
						}
					},
					"overwrites": {
						"type": "reference",
						"name": "ModelDescriptionRaw.attributes",
						"id": 36
					}
				},
				{
					"id": 66,
					"name": "lifecycleEvents",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Events to bind on entities.",
						"tags": [
							{
								"tag": "author",
								"text": "gerkin\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "types/modelDescription.ts",
							"line": 42,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 67,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 68,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 69,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "union",
											"types": [
												{
													"type": "reference",
													"name": "IEventHandler"
												},
												{
													"type": "array",
													"elementType": {
														"type": "reference",
														"name": "IEventHandler"
													}
												}
											]
										}
									}
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ModelDescriptionRaw.lifecycleEvents",
						"id": 48
					}
				},
				{
					"id": 58,
					"name": "methods",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Methods to add to entities prototype.",
						"tags": [
							{
								"tag": "author",
								"text": "gerkin\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "types/modelDescription.ts",
							"line": 30,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 59,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 60,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 61,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "Function"
										}
									}
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ModelDescriptionRaw.methods",
						"id": 40
					}
				},
				{
					"id": 57,
					"name": "sources",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "types/modelDescription.ts",
							"line": 46,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "SourcesHash",
						"id": 28
					},
					"overwrites": {
						"type": "reference",
						"name": "ModelDescriptionRaw.sources",
						"id": 32
					}
				},
				{
					"id": 62,
					"name": "staticMethods",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Static methods to add to entities.",
						"tags": [
							{
								"tag": "author",
								"text": "gerkin\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "types/modelDescription.ts",
							"line": 36,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 63,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 64,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 65,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "Function"
										}
									}
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ModelDescriptionRaw.staticMethods",
						"id": 44
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						53,
						66,
						58,
						57,
						62
					]
				}
			],
			"sources": [
				{
					"fileName": "types/modelDescription.ts",
					"line": 44,
					"character": 33
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "ModelDescriptionRaw",
					"id": 31
				}
			]
		},
		{
			"id": 31,
			"name": "ModelDescriptionRaw",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Object describing a model.",
				"tags": [
					{
						"tag": "author",
						"text": "gerkin\n"
					}
				]
			},
			"children": [
				{
					"id": 36,
					"name": "attributes",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Attributes of the model.",
						"tags": [
							{
								"tag": "author",
								"text": "gerkin\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "types/modelDescription.ts",
							"line": 24,
							"character": 11
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 37,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"indexSignature": {
								"id": 38,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 39,
										"name": "key",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"name": "FieldDescriptor",
											"id": 115
										},
										{
											"type": "intrinsic",
											"name": "string"
										}
									]
								}
							},
							"sources": [
								{
									"fileName": "types/modelDescription.ts",
									"line": 24,
									"character": 12
								}
							]
						}
					}
				},
				{
					"id": 48,
					"name": "lifecycleEvents",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Events to bind on entities.",
						"tags": [
							{
								"tag": "author",
								"text": "gerkin\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "types/modelDescription.ts",
							"line": 42,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 49,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 50,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 51,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "union",
											"types": [
												{
													"type": "reference",
													"name": "IEventHandler"
												},
												{
													"type": "array",
													"elementType": {
														"type": "reference",
														"name": "IEventHandler"
													}
												}
											]
										}
									}
								}
							}
						]
					}
				},
				{
					"id": 40,
					"name": "methods",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Methods to add to entities prototype.",
						"tags": [
							{
								"tag": "author",
								"text": "gerkin\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "types/modelDescription.ts",
							"line": 30,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 41,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 42,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 43,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "Function"
										}
									}
								}
							}
						]
					}
				},
				{
					"id": 32,
					"name": "sources",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "List of sources to use with this model.",
						"tags": [
							{
								"tag": "author",
								"text": "gerkin\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "types/modelDescription.ts",
							"line": 18,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 33,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 34,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 35,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "union",
											"types": [
												{
													"type": "intrinsic",
													"name": "any"
												},
												{
													"type": "intrinsic",
													"name": "boolean"
												}
											]
										}
									},
									"sources": [
										{
											"fileName": "types/modelDescription.ts",
											"line": 18,
											"character": 29
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 44,
					"name": "staticMethods",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Static methods to add to entities.",
						"tags": [
							{
								"tag": "author",
								"text": "gerkin\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "types/modelDescription.ts",
							"line": 36,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 45,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 46,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 47,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "Function"
										}
									}
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						36,
						48,
						40,
						32,
						44
					]
				}
			],
			"sources": [
				{
					"fileName": "types/modelDescription.ts",
					"line": 12,
					"character": 36
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"name": "ModelDescription",
					"id": 52
				}
			]
		},
		{
			"id": 81,
			"name": "ObjectFieldDescriptor",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 82,
					"name": "attributes",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "types/modelDescription.ts",
							"line": 84,
							"character": 11
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 83,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"indexSignature": {
								"id": 84,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 85,
										"name": "key",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "reference",
									"name": "FieldDescriptor",
									"id": 115
								}
							},
							"sources": [
								{
									"fileName": "types/modelDescription.ts",
									"line": 84,
									"character": 12
								}
							]
						}
					}
				},
				{
					"id": 89,
					"name": "default",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "types/modelDescription.ts",
							"line": 73,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "Function"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "BaseFieldDescriptor.default",
						"id": 74
					}
				},
				{
					"id": 88,
					"name": "required",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Set to `true` to require a value. Even when `true`, empty arrays are allowed. To require at least one element in an array, use the `minLength` property",
						"tags": [
							{
								"tag": "author",
								"text": "gerkin\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "types/modelDescription.ts",
							"line": 72,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "true"
							},
							{
								"type": "intrinsic",
								"name": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "BaseFieldDescriptor.required",
						"id": 73
					}
				},
				{
					"id": 86,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Expected type of the value. Either `type` or `model` should be defined, or none.",
						"tags": [
							{
								"tag": "author",
								"text": "gerkin\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "types/modelDescription.ts",
							"line": 60,
							"character": 5
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "BaseFieldDescriptor.type",
						"id": 71
					}
				},
				{
					"id": 87,
					"name": "validate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Custom validation callback.",
						"tags": [
							{
								"tag": "author",
								"text": "gerkin\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "types/modelDescription.ts",
							"line": 66,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "Function"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Function"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "BaseFieldDescriptor.validate",
						"id": 72
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						82,
						89,
						88,
						86,
						87
					]
				}
			],
			"sources": [
				{
					"fileName": "types/modelDescription.ts",
					"line": 83,
					"character": 38
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "BaseFieldDescriptor",
					"id": 70
				}
			]
		},
		{
			"id": 1677,
			"name": "PluralEndpoint",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"indexSignature": {
				"id": 1754,
				"name": "__index",
				"kind": 8192,
				"kindString": "Index signature",
				"flags": {},
				"parameters": [
					{
						"id": 1755,
						"name": "index",
						"kind": 32768,
						"kindString": "Parameter",
						"flags": {},
						"type": {
							"type": "intrinsic",
							"name": "number"
						}
					}
				],
				"type": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"children": [
				{
					"id": 1756,
					"name": "String",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Allows manipulation and formatting of text strings and determination and location of substrings within strings."
					},
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.es5.d.ts",
							"line": 447,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"name": "StringConstructor"
					}
				},
				{
					"id": 1747,
					"name": "length",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Returns the length of a String object."
					},
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.es5.d.ts",
							"line": 421,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "String.length"
					}
				},
				{
					"id": 1757,
					"name": "__@iterator",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1758,
							"name": "__@iterator",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Iterator"
							},
							"type": {
								"type": "reference",
								"name": "IterableIterator",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "String.[Symbol.iterator]"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.es2015.iterable.d.ts",
							"line": 235,
							"character": 21
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "String.[Symbol.iterator]"
					}
				},
				{
					"id": 1782,
					"name": "anchor",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1783,
							"name": "anchor",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns an <a> HTML anchor element and sets the name attribute to the text value"
							},
							"parameters": [
								{
									"id": 1784,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "String.anchor"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.es2015.core.d.ts",
							"line": 489,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "String.anchor"
					}
				},
				{
					"id": 1785,
					"name": "big",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1786,
							"name": "big",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a <big> HTML element"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "String.big"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.es2015.core.d.ts",
							"line": 492,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "String.big"
					}
				},
				{
					"id": 1787,
					"name": "blink",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1788,
							"name": "blink",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a <blink> HTML element"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "String.blink"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.es2015.core.d.ts",
							"line": 495,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "String.blink"
					}
				},
				{
					"id": 1789,
					"name": "bold",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1790,
							"name": "bold",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a <b> HTML element"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "String.bold"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.es2015.core.d.ts",
							"line": 498,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "String.bold"
					}
				},
				{
					"id": 1688,
					"name": "charAt",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1689,
							"name": "charAt",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the character at the specified index."
							},
							"parameters": [
								{
									"id": 1690,
									"name": "pos",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The zero-based index of the desired character.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "String.charAt"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.es5.d.ts",
							"line": 322,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "String.charAt"
					}
				},
				{
					"id": 1691,
					"name": "charCodeAt",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1692,
							"name": "charCodeAt",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the Unicode value of the character at the specified location."
							},
							"parameters": [
								{
									"id": 1693,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "String.charCodeAt"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.es5.d.ts",
							"line": 328,
							"character": 14
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "String.charCodeAt"
					}
				},
				{
					"id": 1759,
					"name": "codePointAt",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1760,
							"name": "codePointAt",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\nthe String resulting from converting this object to a String.\nIf there is no element at that position, the result is undefined.\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos."
							},
							"parameters": [
								{
									"id": 1761,
									"name": "pos",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "String.codePointAt"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.es2015.core.d.ts",
							"line": 437,
							"character": 15
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "String.codePointAt"
					}
				},
				{
					"id": 1694,
					"name": "concat",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1695,
							"name": "concat",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a string that contains the concatenation of two or more strings."
							},
							"parameters": [
								{
									"id": 1696,
									"name": "strings",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"comment": {
										"text": "The strings to append to the end of the string.\n"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "String.concat"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.es5.d.ts",
							"line": 334,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "String.concat"
					}
				},
				{
					"id": 1766,
					"name": "endsWith",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1767,
							"name": "endsWith",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\nendPosition – length(this). Otherwise returns false."
							},
							"parameters": [
								{
									"id": 1768,
									"name": "searchString",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1769,
									"name": "endPosition",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "String.endsWith"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.es2015.core.d.ts",
							"line": 453,
							"character": 12
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "String.endsWith"
					}
				},
				{
					"id": 1791,
					"name": "fixed",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1792,
							"name": "fixed",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a <tt> HTML element"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "String.fixed"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.es2015.core.d.ts",
							"line": 501,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "String.fixed"
					}
				},
				{
					"id": 1793,
					"name": "fontcolor",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1794,
							"name": "fontcolor",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a <font> HTML element and sets the color attribute value"
							},
							"parameters": [
								{
									"id": 1795,
									"name": "color",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "String.fontcolor"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.es2015.core.d.ts",
							"line": 504,
							"character": 13
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "String.fontcolor"
					}
				},
				{
					"id": 1796,
					"name": "fontsize",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1797,
							"name": "fontsize",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a <font> HTML element and sets the size attribute value"
							},
							"parameters": [
								{
									"id": 1798,
									"name": "size",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "String.fontsize"
							}
						},
						{
							"id": 1799,
							"name": "fontsize",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a <font> HTML element and sets the size attribute value"
							},
							"parameters": [
								{
									"id": 1800,
									"name": "size",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "String.fontsize"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.es2015.core.d.ts",
							"line": 507,
							"character": 12
						},
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.es2015.core.d.ts",
							"line": 510,
							"character": 12
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "String.fontsize"
					}
				},
				{
					"id": 1762,
					"name": "includes",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1763,
							"name": "includes",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if searchString appears as a substring of the result of converting this\nobject to a String, at one or more positions that are\ngreater than or equal to position; otherwise, returns false."
							},
							"parameters": [
								{
									"id": 1764,
									"name": "searchString",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "search string"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1765,
									"name": "position",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "If position is undefined, 0 is assumed, so as to search all of the String.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "String.includes"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.es2015.core.d.ts",
							"line": 446,
							"character": 12
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "String.includes"
					}
				},
				{
					"id": 1697,
					"name": "indexOf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1698,
							"name": "indexOf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the position of the first occurrence of a substring."
							},
							"parameters": [
								{
									"id": 1699,
									"name": "searchString",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The substring to search for in the string"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1700,
									"name": "position",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "String.indexOf"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.es5.d.ts",
							"line": 341,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "String.indexOf"
					}
				},
				{
					"id": 1801,
					"name": "italics",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1802,
							"name": "italics",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns an <i> HTML element"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "String.italics"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.es2015.core.d.ts",
							"line": 513,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "String.italics"
					}
				},
				{
					"id": 1701,
					"name": "lastIndexOf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1702,
							"name": "lastIndexOf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the last occurrence of a substring in the string."
							},
							"parameters": [
								{
									"id": 1703,
									"name": "searchString",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The substring to search for."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1704,
									"name": "position",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "The index at which to begin searching. If omitted, the search begins at the end of the string.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "String.lastIndexOf"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.es5.d.ts",
							"line": 348,
							"character": 15
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "String.lastIndexOf"
					}
				},
				{
					"id": 1803,
					"name": "link",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1804,
							"name": "link",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns an <a> HTML element and sets the href attribute value"
							},
							"parameters": [
								{
									"id": 1805,
									"name": "url",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "String.link"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.es2015.core.d.ts",
							"line": 516,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "String.link"
					}
				},
				{
					"id": 1705,
					"name": "localeCompare",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1706,
							"name": "localeCompare",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Determines whether two strings are equivalent in the current locale."
							},
							"parameters": [
								{
									"id": 1707,
									"name": "that",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "String to compare to target string\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"overwrites": {
								"type": "reference",
								"name": "String.localeCompare"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "String.localeCompare"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.es5.d.ts",
							"line": 354,
							"character": 17
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "String.localeCompare"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "String.localeCompare"
					}
				},
				{
					"id": 1708,
					"name": "match",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1709,
							"name": "match",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Matches a string with a regular expression, and returns an array containing the results of that search."
							},
							"parameters": [
								{
									"id": 1710,
									"name": "regexp",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "A variable name or string literal containing the regular expression pattern and flags.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "RegExp"
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "RegExpMatchArray"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"name": "String.match"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "String.match"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.es5.d.ts",
							"line": 360,
							"character": 9
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "String.match"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "String.match"
					}
				},
				{
					"id": 1770,
					"name": "normalize",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1771,
							"name": "normalize",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the String value result of normalizing the string into the normalization form\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms."
							},
							"parameters": [
								{
									"id": 1772,
									"name": "form",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Applicable values: \"NFC\", \"NFD\", \"NFKC\", or \"NFKD\", If not specified default\nis \"NFC\"\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "stringLiteral",
												"value": "NFC"
											},
											{
												"type": "stringLiteral",
												"value": "NFD"
											},
											{
												"type": "stringLiteral",
												"value": "NFKC"
											},
											{
												"type": "stringLiteral",
												"value": "NFKD"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "String.normalize"
							}
						},
						{
							"id": 1773,
							"name": "normalize",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the String value result of normalizing the string into the normalization form\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms."
							},
							"parameters": [
								{
									"id": 1774,
									"name": "form",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "Applicable values: \"NFC\", \"NFD\", \"NFKC\", or \"NFKD\", If not specified default\nis \"NFC\"\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "String.normalize"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.es2015.core.d.ts",
							"line": 461,
							"character": 13
						},
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.es2015.core.d.ts",
							"line": 469,
							"character": 13
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "String.normalize"
					}
				},
				{
					"id": 1682,
					"name": "padEnd",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1683,
							"name": "padEnd",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the end (right) of the current string."
							},
							"parameters": [
								{
									"id": 1684,
									"name": "maxLength",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The length of the resulting string once the current string has been padded.\n       If this parameter is smaller than the current string's length, the current string will be returned as it is.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1685,
									"name": "fillString",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "The string to pad the current string with.\n       If this string is too long, it will be truncated and the left-most part will be applied.\n       The default value for this parameter is \" \" (U+0020).\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "String.padEnd"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.es2017.string.d.ts",
							"line": 46,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "String.padEnd"
					}
				},
				{
					"id": 1678,
					"name": "padStart",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1679,
							"name": "padStart",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the start (left) of the current string."
							},
							"parameters": [
								{
									"id": 1680,
									"name": "maxLength",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The length of the resulting string once the current string has been padded.\n       If this parameter is smaller than the current string's length, the current string will be returned as it is.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1681,
									"name": "fillString",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "The string to pad the current string with.\n       If this string is too long, it will be truncated and the left-most part will be applied.\n       The default value for this parameter is \" \" (U+0020).\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "String.padStart"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.es2017.string.d.ts",
							"line": 33,
							"character": 12
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "String.padStart"
					}
				},
				{
					"id": 1775,
					"name": "repeat",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1776,
							"name": "repeat",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a String value that is made from count copies appended together. If count is 0,\nthe empty string is returned."
							},
							"parameters": [
								{
									"id": 1777,
									"name": "count",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "number of copies to append\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "String.repeat"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.es2015.core.d.ts",
							"line": 476,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "String.repeat"
					}
				},
				{
					"id": 1711,
					"name": "replace",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1712,
							"name": "replace",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Replaces text in a string, using a regular expression or search string."
							},
							"parameters": [
								{
									"id": 1713,
									"name": "searchValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "A string to search for."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "RegExp"
											}
										]
									}
								},
								{
									"id": 1714,
									"name": "replaceValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "A string containing the text to replace for every successful match of searchValue in this string.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "String.replace"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "String.replace"
							}
						},
						{
							"id": 1715,
							"name": "replace",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Replaces text in a string, using a regular expression or search string."
							},
							"parameters": [
								{
									"id": 1716,
									"name": "searchValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "A string to search for."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "RegExp"
											}
										]
									}
								},
								{
									"id": 1717,
									"name": "replacer",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "A function that returns the replacement text.\n"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1718,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1719,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1720,
															"name": "substring",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 1721,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"sources": [
												{
													"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.es5.d.ts",
													"line": 374,
													"character": 51
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "String.replace"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "String.replace"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.es5.d.ts",
							"line": 367,
							"character": 11
						},
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.es5.d.ts",
							"line": 374,
							"character": 11
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "String.replace"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "String.replace"
					}
				},
				{
					"id": 1722,
					"name": "search",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1723,
							"name": "search",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Finds the first substring match in a regular expression search."
							},
							"parameters": [
								{
									"id": 1724,
									"name": "regexp",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The regular expression pattern and applicable flags.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "RegExp"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"overwrites": {
								"type": "reference",
								"name": "String.search"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "String.search"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.es5.d.ts",
							"line": 380,
							"character": 10
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "String.search"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "String.search"
					}
				},
				{
					"id": 1725,
					"name": "slice",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1726,
							"name": "slice",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a section of a string."
							},
							"parameters": [
								{
									"id": 1727,
									"name": "start",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "The index to the beginning of the specified portion of stringObj."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								},
								{
									"id": 1728,
									"name": "end",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\nIf this value is not specified, the substring continues to the end of stringObj.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "String.slice"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.es5.d.ts",
							"line": 388,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "String.slice"
					}
				},
				{
					"id": 1806,
					"name": "small",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1807,
							"name": "small",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a <small> HTML element"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "String.small"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.es2015.core.d.ts",
							"line": 519,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "String.small"
					}
				},
				{
					"id": 1729,
					"name": "split",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1730,
							"name": "split",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Split a string into substrings using the specified separator and return them as an array."
							},
							"parameters": [
								{
									"id": 1731,
									"name": "separator",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "RegExp"
											}
										]
									}
								},
								{
									"id": 1732,
									"name": "limit",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "A value used to limit the number of elements returned in the array.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"overwrites": {
								"type": "reference",
								"name": "String.split"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "String.split"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.es5.d.ts",
							"line": 395,
							"character": 9
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "String.split"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "String.split"
					}
				},
				{
					"id": 1778,
					"name": "startsWith",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1779,
							"name": "startsWith",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\nposition. Otherwise returns false."
							},
							"parameters": [
								{
									"id": 1780,
									"name": "searchString",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1781,
									"name": "position",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "String.startsWith"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.es2015.core.d.ts",
							"line": 483,
							"character": 14
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "String.startsWith"
					}
				},
				{
					"id": 1808,
					"name": "strike",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1809,
							"name": "strike",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a <strike> HTML element"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "String.strike"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.es2015.core.d.ts",
							"line": 522,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "String.strike"
					}
				},
				{
					"id": 1810,
					"name": "sub",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1811,
							"name": "sub",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a <sub> HTML element"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "String.sub"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.es2015.core.d.ts",
							"line": 525,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "String.sub"
					}
				},
				{
					"id": 1748,
					"name": "substr",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1749,
							"name": "substr",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets a substring beginning at the specified location and having the specified length."
							},
							"parameters": [
								{
									"id": 1750,
									"name": "from",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The starting position of the desired substring. The index of the first character in the string is zero."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1751,
									"name": "length",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "The number of characters to include in the returned substring.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "String.substr"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.es5.d.ts",
							"line": 429,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "String.substr"
					}
				},
				{
					"id": 1733,
					"name": "substring",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1734,
							"name": "substring",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the substring at the specified location within a String object."
							},
							"parameters": [
								{
									"id": 1735,
									"name": "start",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The zero-based index number indicating the beginning of the substring."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1736,
									"name": "end",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\nIf end is omitted, the characters from start through the end of the original string are returned.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "String.substring"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.es5.d.ts",
							"line": 403,
							"character": 13
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "String.substring"
					}
				},
				{
					"id": 1812,
					"name": "sup",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1813,
							"name": "sup",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a <sup> HTML element"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "String.sup"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.es2015.core.d.ts",
							"line": 528,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "String.sup"
					}
				},
				{
					"id": 1739,
					"name": "toLocaleLowerCase",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1740,
							"name": "toLocaleLowerCase",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Converts all alphabetic characters to lowercase, taking into account the host environment's current locale."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "String.toLocaleLowerCase"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.es5.d.ts",
							"line": 409,
							"character": 21
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "String.toLocaleLowerCase"
					}
				},
				{
					"id": 1743,
					"name": "toLocaleUpperCase",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1744,
							"name": "toLocaleUpperCase",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "String.toLocaleUpperCase"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.es5.d.ts",
							"line": 415,
							"character": 21
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "String.toLocaleUpperCase"
					}
				},
				{
					"id": 1737,
					"name": "toLowerCase",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1738,
							"name": "toLowerCase",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Converts all the alphabetic characters in a string to lowercase."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "String.toLowerCase"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.es5.d.ts",
							"line": 406,
							"character": 15
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "String.toLowerCase"
					}
				},
				{
					"id": 1686,
					"name": "toString",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1687,
							"name": "toString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a string representation of a string."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "String.toString"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.es5.d.ts",
							"line": 316,
							"character": 12
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "String.toString"
					}
				},
				{
					"id": 1741,
					"name": "toUpperCase",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1742,
							"name": "toUpperCase",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Converts all the alphabetic characters in a string to uppercase."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "String.toUpperCase"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.es5.d.ts",
							"line": 412,
							"character": 15
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "String.toUpperCase"
					}
				},
				{
					"id": 1745,
					"name": "trim",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1746,
							"name": "trim",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes the leading and trailing white space and line terminator characters from a string."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "String.trim"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.es5.d.ts",
							"line": 418,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "String.trim"
					}
				},
				{
					"id": 1814,
					"name": "trimLeft",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1815,
							"name": "trimLeft",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes whitespace from the left end of a string."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "String.trimLeft"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/@types/node/index.d.ts",
							"line": 178,
							"character": 12
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "String.trimLeft"
					}
				},
				{
					"id": 1816,
					"name": "trimRight",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1817,
							"name": "trimRight",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes whitespace from the right end of a string."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "String.trimRight"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/@types/node/index.d.ts",
							"line": 180,
							"character": 13
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "String.trimRight"
					}
				},
				{
					"id": 1752,
					"name": "valueOf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1753,
							"name": "valueOf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the primitive value of the specified object."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "String.valueOf"
							}
						}
					],
					"sources": [
						{
							"fileName": "/home/gerkin/Desktop/fromMac/Work/nodejs/@diaspora/diaspora/node_modules/typedoc/node_modules/typescript/lib/lib.es5.d.ts",
							"line": 432,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "String.valueOf"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1756,
						1747
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1757,
						1782,
						1785,
						1787,
						1789,
						1688,
						1691,
						1759,
						1694,
						1766,
						1791,
						1793,
						1796,
						1762,
						1697,
						1801,
						1701,
						1803,
						1705,
						1708,
						1770,
						1682,
						1678,
						1775,
						1711,
						1722,
						1725,
						1806,
						1729,
						1778,
						1808,
						1810,
						1748,
						1733,
						1812,
						1739,
						1743,
						1737,
						1686,
						1741,
						1745,
						1814,
						1816,
						1752
					]
				}
			],
			"sources": [
				{
					"fileName": "adapters/webApi/adapter.ts",
					"line": 64,
					"character": 24
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "String"
				}
			]
		},
		{
			"id": 2336,
			"name": "QueryObject",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 2338,
					"name": "options",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "adapters/webApi/subAdapters/browserAdapter.ts",
							"line": 8,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "QueryLanguage.QueryOptions",
						"id": 352
					}
				},
				{
					"id": 2337,
					"name": "where",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "adapters/webApi/subAdapters/browserAdapter.ts",
							"line": 7,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"name": "QueryLanguage.SelectQueryOrCondition",
						"id": 408
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						2338,
						2337
					]
				}
			],
			"sources": [
				{
					"fileName": "adapters/webApi/subAdapters/browserAdapter.ts",
					"line": 6,
					"character": 28
				}
			]
		},
		{
			"id": 96,
			"name": "RelationalFieldDescriptor",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 101,
					"name": "default",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "types/modelDescription.ts",
							"line": 73,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "Function"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "BaseFieldDescriptor.default",
						"id": 74
					}
				},
				{
					"id": 97,
					"name": "model",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Expected model of the value. Either `type` or `model` should be defined, or none.",
						"tags": [
							{
								"tag": "author",
								"text": "gerkin\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "types/modelDescription.ts",
							"line": 95,
							"character": 6
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 100,
					"name": "required",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Set to `true` to require a value. Even when `true`, empty arrays are allowed. To require at least one element in an array, use the `minLength` property",
						"tags": [
							{
								"tag": "author",
								"text": "gerkin\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "types/modelDescription.ts",
							"line": 72,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "true"
							},
							{
								"type": "intrinsic",
								"name": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "BaseFieldDescriptor.required",
						"id": 73
					}
				},
				{
					"id": 98,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Expected type of the value. Either `type` or `model` should be defined, or none.",
						"tags": [
							{
								"tag": "author",
								"text": "gerkin\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "types/modelDescription.ts",
							"line": 60,
							"character": 5
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "BaseFieldDescriptor.type",
						"id": 71
					}
				},
				{
					"id": 99,
					"name": "validate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Custom validation callback.",
						"tags": [
							{
								"tag": "author",
								"text": "gerkin\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "types/modelDescription.ts",
							"line": 66,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "Function"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Function"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "BaseFieldDescriptor.validate",
						"id": 72
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						101,
						97,
						100,
						98,
						99
					]
				}
			],
			"sources": [
				{
					"fileName": "types/modelDescription.ts",
					"line": 89,
					"character": 42
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "BaseFieldDescriptor",
					"id": 70
				}
			]
		},
		{
			"id": 28,
			"name": "SourcesHash",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"indexSignature": {
				"id": 29,
				"name": "__index",
				"kind": 8192,
				"kindString": "Index signature",
				"flags": {},
				"parameters": [
					{
						"id": 30,
						"name": "key",
						"kind": 32768,
						"kindString": "Parameter",
						"flags": {},
						"type": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				],
				"type": {
					"type": "intrinsic",
					"name": "object"
				}
			},
			"sources": [
				{
					"fileName": "types/modelDescription.ts",
					"line": 3,
					"character": 28
				}
			]
		},
		{
			"id": 183,
			"name": "TypeErrorObject",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 189,
					"name": "children",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "entityTransformers/checkTransformer.ts",
							"line": 66,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "ErrorObjectFinal",
									"id": 172
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 190,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 191,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 192,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ErrorObjectFinal",
											"id": 172
										}
									},
									"sources": [
										{
											"fileName": "entityTransformers/checkTransformer.ts",
											"line": 66,
											"character": 32
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ErrorObject.children",
						"id": 168
					}
				},
				{
					"id": 188,
					"name": "enum",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "entityTransformers/checkTransformer.ts",
							"line": 65,
							"character": 5
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ErrorObject.enum",
						"id": 167
					}
				},
				{
					"id": 187,
					"name": "required",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "entityTransformers/checkTransformer.ts",
							"line": 64,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ErrorObject.required",
						"id": 166
					}
				},
				{
					"id": 186,
					"name": "spec",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "entityTransformers/checkTransformer.ts",
							"line": 63,
							"character": 5
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ErrorObject.spec",
						"id": 165
					}
				},
				{
					"id": 184,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "entityTransformers/checkTransformer.ts",
							"line": 76,
							"character": 5
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"name": "ErrorObject.type",
						"id": 164
					}
				},
				{
					"id": 185,
					"name": "validate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "entityTransformers/checkTransformer.ts",
							"line": 61,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ErrorObject.validate",
						"id": 163
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						189,
						188,
						187,
						186,
						184,
						185
					]
				}
			],
			"sources": [
				{
					"fileName": "entityTransformers/checkTransformer.ts",
					"line": 75,
					"character": 32
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "ErrorObject",
					"id": 162
				}
			]
		},
		{
			"id": 193,
			"name": "ValidationStepArgs",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "This object can be passed through each validation steps.",
				"tags": [
					{
						"tag": "author",
						"text": "Gerkin\n"
					}
				]
			},
			"children": [
				{
					"id": 194,
					"name": "error",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Error object to extend.",
						"tags": [
							{
								"tag": "author",
								"text": "Gerkin\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "entityTransformers/checkTransformer.ts",
							"line": 290,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"name": "ErrorObject",
						"id": 162
					}
				},
				{
					"id": 195,
					"name": "fieldDesc",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Description of the field.",
						"tags": [
							{
								"tag": "author",
								"text": "Gerkin\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "entityTransformers/checkTransformer.ts",
							"line": 296,
							"character": 10
						}
					],
					"type": {
						"type": "reference",
						"name": "FieldDescriptor",
						"id": 115
					}
				},
				{
					"id": 196,
					"name": "keys",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Pathstack representing keys so far.",
						"tags": [
							{
								"tag": "author",
								"text": "Gerkin\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "entityTransformers/checkTransformer.ts",
							"line": 302,
							"character": 5
						}
					],
					"type": {
						"type": "reference",
						"name": "PathStack",
						"id": 116
					}
				},
				{
					"id": 197,
					"name": "value",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Value to check.",
						"tags": [
							{
								"tag": "author",
								"text": "Gerkin\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "entityTransformers/checkTransformer.ts",
							"line": 308,
							"character": 6
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						194,
						195,
						196,
						197
					]
				}
			],
			"sources": [
				{
					"fileName": "entityTransformers/checkTransformer.ts",
					"line": 284,
					"character": 28
				}
			]
		},
		{
			"id": 348,
			"name": "AbsInt",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"comment": {
				"tags": [
					{
						"tag": "description",
						"text": "Integer above 0\n"
					}
				]
			},
			"sources": [
				{
					"fileName": "types/constrainedTypes.ts",
					"line": 9,
					"character": 18
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "number"
			}
		},
		{
			"id": 347,
			"name": "AbsInt0",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"comment": {
				"tags": [
					{
						"tag": "description",
						"text": "Integer equal or above 0\n"
					}
				]
			},
			"sources": [
				{
					"fileName": "types/constrainedTypes.ts",
					"line": 4,
					"character": 19
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "number"
			}
		},
		{
			"id": 349,
			"name": "AbsIntInf",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"comment": {
				"tags": [
					{
						"tag": "description",
						"text": "Integer above 0, may be integer\n"
					}
				]
			},
			"sources": [
				{
					"fileName": "types/constrainedTypes.ts",
					"line": 14,
					"character": 21
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "number"
			}
		},
		{
			"id": 350,
			"name": "AbsIntInf0",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"comment": {
				"tags": [
					{
						"tag": "description",
						"text": "Integer equal or above 0, may be integer\n"
					}
				]
			},
			"sources": [
				{
					"fileName": "types/constrainedTypes.ts",
					"line": 19,
					"character": 22
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "number"
			}
		},
		{
			"id": 236,
			"name": "CheckFunction",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"shortText": "A checker is a function that can return an error component with provided standard args.",
				"tags": [
					{
						"tag": "callback",
						"text": "Checker"
					},
					{
						"tag": "param",
						"text": "Pathstack so far.",
						"param": "keys"
					},
					{
						"tag": "param",
						"text": "Description of the field.",
						"param": "fieldDesc"
					},
					{
						"tag": "param",
						"text": "Value to check.",
						"param": "value"
					},
					{
						"tag": "returns",
						"text": "Error component.\n"
					}
				]
			},
			"sources": [
				{
					"fileName": "entityTransformers/checkTransformer.ts",
					"line": 88,
					"character": 18
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 237,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"signatures": [
						{
							"id": 238,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 239,
									"name": "this",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "CheckTransformer",
										"id": 198
									}
								},
								{
									"id": 240,
									"name": "keys",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "PathStack",
										"id": 116
									}
								},
								{
									"id": 241,
									"name": "fieldDesc",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "FieldDescriptor",
										"id": 115
									}
								},
								{
									"id": 242,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "ErrorObjectFinal",
										"id": 172
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "entityTransformers/checkTransformer.ts",
							"line": 88,
							"character": 20
						}
					]
				}
			}
		},
		{
			"id": 1157,
			"name": "EntityUid",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "entities/entityFactory.ts",
					"line": 34,
					"character": 21
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "intrinsic",
						"name": "number"
					}
				]
			}
		},
		{
			"id": 115,
			"name": "FieldDescriptor",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "types/modelDescription.ts",
					"line": 121,
					"character": 27
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"name": "BaseFieldDescriptor",
						"id": 70
					},
					{
						"type": "reference",
						"name": "ArrayFieldDescriptor",
						"id": 75
					},
					{
						"type": "reference",
						"name": "ObjectFieldDescriptor",
						"id": 81
					},
					{
						"type": "reference",
						"name": "EnumFieldDescriptor",
						"id": 90
					},
					{
						"type": "reference",
						"name": "RelationalFieldDescriptor",
						"id": 96
					}
				]
			}
		},
		{
			"id": 709,
			"name": "LoggingFunction",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Function used to give feedback to the user about errors or other infos communicated by Diaspora. It can print directly to stdout, or can use Winston transport if configured so on server environment.",
				"tags": [
					{
						"tag": "param",
						"text": "Things to log to the console",
						"param": "args"
					},
					{
						"tag": "author",
						"text": "Gerkin\n"
					}
				]
			},
			"sources": [
				{
					"fileName": "logger/logger.ts",
					"line": 7,
					"character": 27
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 710,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"signatures": [
						{
							"id": 711,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 712,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "logger/logger.ts",
							"line": 7,
							"character": 29
						}
					]
				}
			}
		},
		{
			"id": 514,
			"name": "TDataSource",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "adapters/dataAccessLayer.ts",
					"line": 338,
					"character": 23
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reference",
						"name": "Adapter",
						"id": 871
					},
					{
						"type": "reference",
						"name": "DataAccessLayer",
						"id": 410
					}
				]
			}
		},
		{
			"id": 1996,
			"name": "TEntitiesJsonResponse",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "adapters/webApi/adapter.ts",
					"line": 72,
					"character": 33
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"name": "IRawAdapterEntityAttributes",
						"id": 1176
					},
					{
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "IRawAdapterEntityAttributes",
							"id": 1176
						}
					},
					{
						"type": "intrinsic",
						"name": "undefined"
					}
				]
			}
		},
		{
			"id": 232,
			"name": "TypeChecker",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "entityTransformers/checkTransformer.ts",
					"line": 73,
					"character": 23
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 233,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"signatures": [
						{
							"id": 234,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 235,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "entityTransformers/checkTransformer.ts",
							"line": 73,
							"character": 25
						}
					]
				}
			}
		},
		{
			"id": 2335,
			"name": "Diaspora",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "diaspora.ts",
					"line": 216,
					"character": 21
				}
			],
			"type": {
				"type": "reference",
				"name": "DiasporaStatic",
				"id": 2298
			},
			"defaultValue": " DiasporaStatic.instance"
		},
		{
			"id": 1172,
			"name": "EntityFactory",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "entities/entityFactory.ts",
					"line": 641,
					"character": 26
				}
			],
			"type": {
				"type": "reference",
				"name": "IEntityFactory",
				"id": 1149
			},
			"defaultValue": " ef"
		},
		{
			"id": 307,
			"name": "VALIDATION_STEPS",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"comment": {
				"shortText": "Those validation steps are called one after one during the validation of a single field.",
				"tags": [
					{
						"tag": "author",
						"text": "Gerkin\n"
					}
				]
			},
			"sources": [
				{
					"fileName": "entityTransformers/checkTransformer.ts",
					"line": 316,
					"character": 22
				}
			],
			"type": {
				"type": "array",
				"elementType": {
					"type": "reference",
					"name": "checkCustoms"
				}
			},
			"defaultValue": " [\n\t/**\n\t * Apply the custom `validate` function or function array, if it exists.\n\t *\n\t * @param   validationArgs - Validation step argument.\n\t * @returns This function returns nothing.\n\t */\n\tfunction checkCustoms( this: CheckTransformer, validationArgs: ValidationStepArgs ) {\n\t\tconst { error, fieldDesc, keys, value } = validationArgs;\n\t\t// It the field has a `validate` property, try to use it\n\t\tconst validateFcts = _.chain( fieldDesc.validate as Function[] )\n\t\t\t.castArray()\n\t\t\t.compact()\n\t\t\t.value();\n\t\tvalidateFcts.forEach( validateFct => {\n\t\t\tif ( !validateFct.call( this, value, fieldDesc ) ) {\n\t\t\t\terror.validate = `${keys.toValidatePath()} custom validation failed`;\n\t\t\t}\n\t\t} );\n\t},\n\n\t/**\n\t * Check if the type & the existence matches the `type` & `required` specifications.\n\t *\n\t * @param   validationArgs - Validation step argument.\n\t * @returns This function returns nothing.\n\t */\n\tfunction checkTypeRequired(\n\t\tthis: CheckTransformer,\n\t\tvalidationArgs: ValidationStepArgs\n\t) {\n\t\tconst { error, fieldDesc, keys, value } = validationArgs;\n\t\t// Check the type and the required status\n\t\t// Apply the `required` modifier\n\t\tif ( true === fieldDesc.required && _.isNil( value ) ) {\n\t\t\terror.required = messageRequired( keys, fieldDesc );\n\t\t} else if ( !_.isNil( value ) ) {\n\t\t\t_.assign(\n\t\t\t\terror,\n\t\t\t\t// Get the validator. Default to unhandled type\n\t\t\t\t_.get( VALIDATIONS, ['TYPE', fieldDesc.type], VALIDATIONS.TYPE._ ).call(\n\t\t\t\t\tthis,\n\t\t\t\t\tkeys,\n\t\t\t\t\tfieldDesc,\n\t\t\t\t\tvalue\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t},\n\n\t/**\n\t * Verify if the value correspond to a value in the `enum` property.\n\t *\n\t * @param   validationArgs - Validation step argument.\n\t * @returns This function returns nothing.\n\t */\n\tfunction checkEnum( this: CheckTransformer, validationArgs: ValidationStepArgs ) {\n\t\tconst { error, keys, value } = validationArgs;\n\t\tconst fieldDesc = validationArgs.fieldDesc;\n\t\t// Check enum values\n\t\tif (\n\t\t\t!_.isNil( value ) &&\n\t\t\tFieldDescriptorTypeChecks.isEnumFieldDescriptor( fieldDesc )\n\t\t) {\n\t\t\tconst result = _.some( fieldDesc.enum, enumVal => {\n\t\t\t\tif ( enumVal instanceof RegExp ) {\n\t\t\t\t\treturn null !== value.match( enumVal );\n\t\t\t\t} else {\n\t\t\t\t\treturn value === enumVal;\n\t\t\t\t}\n\t\t\t} );\n\t\t\tif ( false === result ) {\n\t\t\t\terror.enum = `${keys.toValidatePath()} expected to have one of enumerated values \"${JSON.stringify(\n\t\t\t\t\tfieldDesc.enum\n\t\t\t\t)}\"`;\n\t\t\t}\n\t\t}\n\t},\n]"
		},
		{
			"id": 521,
			"name": "dataSourceRegistry",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "staticStores.ts",
					"line": 10,
					"character": 31
				}
			],
			"type": {
				"type": "reference",
				"name": "IDataSourceRegistry",
				"id": 515
			}
		},
		{
			"id": 749,
			"name": "logger",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"comment": {
				"shortText": "Reference to the static logger instance for Diaspora."
			},
			"sources": [
				{
					"fileName": "logger/index.ts",
					"line": 7,
					"character": 19
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"name": "BrowserLogger",
						"id": 713
					},
					{
						"type": "reference",
						"name": "NodeLogger",
						"id": 732
					}
				]
			},
			"defaultValue": " process.browser ? new BrowserLogger() : new NodeLogger()"
		},
		{
			"id": 522,
			"name": "modelRegistry",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "staticStores.ts",
					"line": 15,
					"character": 26
				}
			],
			"type": {
				"type": "reference",
				"name": "IModelRegistry",
				"id": 518
			}
		},
		{
			"id": 1316,
			"name": "AutoIdAdapterEntity",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 1317,
					"name": "AutoIdAdapterEntity",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"decorates": [
						{
							"type": "reference",
							"name": "InMemoryEntity",
							"id": 1324
						},
						{
							"type": "reference",
							"name": "WebStorageEntity",
							"id": 1997
						}
					],
					"typeParameter": [
						{
							"id": 1318,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Constructable",
								"id": 1227,
								"typeArguments": [
									{
										"type": "reference",
										"name": "AdapterEntity",
										"id": 1197
									}
								]
							}
						}
					],
					"parameters": [
						{
							"id": 1319,
							"name": "adapterEntity",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "typeParameter",
								"name": "T",
								"constraint": {
									"type": "reference",
									"name": "Constructable",
									"id": 1227,
									"typeArguments": [
										{
											"type": "reference",
											"name": "AdapterEntity",
											"id": 1197
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "typeParameter",
						"name": "T",
						"constraint": {
							"type": "reference",
							"name": "Constructable",
							"id": 1227,
							"typeArguments": [
								{
									"type": "reference",
									"name": "AdapterEntity",
									"id": 1197
								}
							]
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "adapters/base/autoIdEntity.ts",
					"line": 8,
					"character": 32
				}
			]
		},
		{
			"id": 1505,
			"name": "DefaultQueryTransformerFactory",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 1506,
					"name": "DefaultQueryTransformerFactory",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 1507,
							"name": "config",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1508,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 1509,
									"name": "beforeQuery",
									"kind": 64,
									"kindString": "Function",
									"flags": {},
									"signatures": [
										{
											"id": 1510,
											"name": "beforeQuery",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 1511,
													"name": "queryType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1512,
													"name": "queryNum",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1513,
													"name": "modelName",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1514,
													"name": "select",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 1515,
													"name": "update",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 1516,
													"name": "options",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 1517,
													"name": "apiDesc",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "IApiDescription",
														"id": 1818
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "IApiDescription",
												"id": 1818
											}
										}
									],
									"sources": [
										{
											"fileName": "adapters/webApi/defaultQueryTransformer.ts",
											"line": 18,
											"character": 13
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"kind": 64,
									"children": [
										1509
									]
								}
							]
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "adapters/webApi/defaultQueryTransformer.ts",
					"line": 4,
					"character": 43
				}
			]
		},
		{
			"id": 1320,
			"name": "SelfMatchingAdapterEntity",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 1321,
					"name": "SelfMatchingAdapterEntity",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"decorates": [
						{
							"type": "reference",
							"name": "InMemoryEntity",
							"id": 1324
						},
						{
							"type": "reference",
							"name": "WebStorageEntity",
							"id": 1997
						}
					],
					"typeParameter": [
						{
							"id": 1322,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Constructable",
								"id": 1227,
								"typeArguments": [
									{
										"type": "reference",
										"name": "AdapterEntity",
										"id": 1197
									}
								]
							}
						}
					],
					"parameters": [
						{
							"id": 1323,
							"name": "adapterEntity",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "typeParameter",
								"name": "T",
								"constraint": {
									"type": "reference",
									"name": "Constructable",
									"id": 1227,
									"typeArguments": [
										{
											"type": "reference",
											"name": "AdapterEntity",
											"id": 1197
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "typeParameter",
						"name": "T",
						"constraint": {
							"type": "reference",
							"name": "Constructable",
							"id": 1227,
							"typeArguments": [
								{
									"type": "reference",
									"name": "AdapterEntity",
									"id": 1197
								}
							]
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "adapters/base/selfMatchingEntity.ts",
					"line": 7,
					"character": 38
				}
			]
		},
		{
			"id": 785,
			"name": "allEmit",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isConst": true
			},
			"comment": {
				"shortText": "Emit events on each entities.",
				"returns": "Promise resolved once all promises are done.\n",
				"tags": [
					{
						"tag": "author",
						"text": "Gerkin"
					},
					{
						"tag": "inner",
						"text": ""
					}
				]
			},
			"signatures": [
				{
					"id": 786,
					"name": "allEmit",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Emit events on each entities.",
						"returns": "Promise resolved once all promises are done.\n"
					},
					"parameters": [
						{
							"id": 787,
							"name": "entities",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"shortText": "Items to iterate over."
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "SequentialEvent"
								}
							}
						},
						{
							"id": 788,
							"name": "verb",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"shortText": "Verb of the action to emit."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 789,
							"name": "prefix",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"shortText": "Prefix to prepend to the verb."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "SequentialEvent"
								}
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "entities/set.ts",
					"line": 20,
					"character": 13
				}
			]
		},
		{
			"id": 533,
			"name": "applyOptionsToSet",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"comment": {
				"shortText": "Reduce, offset or sort provided set.",
				"returns": "Set with options applied.\n",
				"tags": [
					{
						"tag": "author",
						"text": "gerkin"
					}
				]
			},
			"signatures": [
				{
					"id": 534,
					"name": "applyOptionsToSet",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Reduce, offset or sort provided set.",
						"returns": "Set with options applied.\n"
					},
					"parameters": [
						{
							"id": 535,
							"name": "set",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"shortText": "Objects retrieved from memory store."
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "IRawAdapterEntityAttributes",
									"id": 1176
								}
							}
						},
						{
							"id": 536,
							"name": "options",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"shortText": "Options to apply to the set."
							},
							"type": {
								"type": "reference",
								"name": "QueryOptions",
								"id": 352
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "IRawAdapterEntityAttributes",
							"id": 1176
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "utils.ts",
					"line": 59,
					"character": 30
				}
			]
		},
		{
			"id": 527,
			"name": "applyUpdateEntity",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"comment": {
				"shortText": "Merge update query with the entity. This operation allows to delete fields.",
				"returns": "Entity modified.\n",
				"tags": [
					{
						"tag": "author",
						"text": "gerkin"
					}
				]
			},
			"signatures": [
				{
					"id": 528,
					"name": "applyUpdateEntity",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Merge update query with the entity. This operation allows to delete fields.",
						"returns": "Entity modified.\n"
					},
					"parameters": [
						{
							"id": 529,
							"name": "update",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"shortText": "Hash representing modified values. A field with an `undefined` value deletes this field from the entity."
							},
							"type": {
								"type": "reference",
								"name": "IRawEntityAttributes",
								"id": 992
							}
						},
						{
							"id": 530,
							"name": "entity",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"shortText": "Entity to update."
							},
							"type": {
								"type": "reference",
								"name": "IRawEntityAttributes",
								"id": 992
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "IRawEntityAttributes",
						"id": 992
					}
				}
			],
			"sources": [
				{
					"fileName": "utils.ts",
					"line": 16,
					"character": 30
				}
			]
		},
		{
			"id": 537,
			"name": "deepFreeze",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"comment": {
				"shortText": "Totally freeze an object, preventing any modifications on it.",
				"returns": "The frozen object\n",
				"tags": [
					{
						"tag": "author",
						"text": "gerkin"
					}
				]
			},
			"signatures": [
				{
					"id": 538,
					"name": "deepFreeze",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Totally freeze an object, preventing any modifications on it.",
						"returns": "The frozen object\n"
					},
					"typeParameter": [
						{
							"id": 539,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 540,
							"name": "object",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"shortText": "Object to freeze"
							},
							"type": {
								"type": "typeParameter",
								"name": "T"
							}
						}
					],
					"type": {
						"type": "unknown",
						"name": "T"
					}
				}
			],
			"sources": [
				{
					"fileName": "utils.ts",
					"line": 81,
					"character": 23
				}
			]
		},
		{
			"id": 1167,
			"name": "ef",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isConst": true
			},
			"signatures": [
				{
					"id": 1168,
					"name": "ef",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 1169,
							"name": "name",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1170,
							"name": "modelDesc",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "ModelDescription",
								"id": 52
							}
						},
						{
							"id": 1171,
							"name": "model",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Model",
								"id": 576
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "EntitySpawner",
						"id": 999
					}
				}
			],
			"sources": [
				{
					"fileName": "entities/entityFactory.ts",
					"line": 603,
					"character": 8
				}
			]
		},
		{
			"id": 531,
			"name": "generateUUID",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"comment": {
				"shortText": "Create a new unique id for this store's entity.",
				"returns": "Generated unique id.\n",
				"tags": [
					{
						"tag": "author",
						"text": "gerkin"
					}
				]
			},
			"signatures": [
				{
					"id": 532,
					"name": "generateUUID",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Create a new unique id for this store's entity.",
						"returns": "Generated unique id.\n"
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"sources": [
				{
					"fileName": "utils.ts",
					"line": 36,
					"character": 25
				}
			]
		},
		{
			"id": 541,
			"name": "getDefaultFunction",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 542,
					"name": "getDefaultFunction",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 543,
							"name": "identifier",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 544,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 545,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 546,
											"name": "args",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "utils.ts",
									"line": 92,
									"character": 57
								}
							]
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "utils.ts",
					"line": 92,
					"character": 31
				}
			]
		},
		{
			"id": 547,
			"name": "getDefaultValue",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 548,
					"name": "getDefaultValue",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 549,
							"name": "value",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"sources": [
				{
					"fileName": "utils.ts",
					"line": 104,
					"character": 28
				}
			]
		},
		{
			"id": 1236,
			"name": "getNum",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isConst": true
			},
			"signatures": [
				{
					"id": 1237,
					"name": "getNum",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 1238,
							"name": "params",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isRest": true
							},
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								]
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"sources": [
				{
					"fileName": "adapters/base/adapter-utils.ts",
					"line": 12,
					"character": 12
				}
			]
		},
		{
			"id": 228,
			"name": "messageRequired",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isConst": true
			},
			"signatures": [
				{
					"id": 229,
					"name": "messageRequired",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 230,
							"name": "keys",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "PathStack",
								"id": 116
							}
						},
						{
							"id": 231,
							"name": "fieldDesc",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "FieldDescriptor",
								"id": 115
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"sources": [
				{
					"fileName": "entityTransformers/checkTransformer.ts",
					"line": 52,
					"character": 21
				}
			]
		},
		{
			"id": 1258,
			"name": "remapIO",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"comment": {
				"shortText": "TODO.",
				"tags": [
					{
						"tag": "author",
						"text": "gerkin"
					},
					{
						"tag": "see",
						"text": "TODO remapping.\n"
					}
				]
			},
			"signatures": [
				{
					"id": 1259,
					"name": "remapIO",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "TODO."
					},
					"typeParameter": [
						{
							"id": 1260,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "IEnumeratedHash",
								"id": 802,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							}
						}
					],
					"parameters": [
						{
							"id": 1261,
							"name": "adapter",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Adapter",
								"id": 871
							}
						},
						{
							"id": 1262,
							"name": "tableName",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1263,
							"name": "query",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "typeParameter",
								"name": "T",
								"constraint": {
									"type": "reference",
									"name": "IEnumeratedHash",
									"id": 802,
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "any"
										}
									]
								}
							}
						},
						{
							"id": 1264,
							"name": "input",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Dictionary",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "adapters/base/adapter-utils.ts",
					"line": 75,
					"character": 20
				}
			]
		},
		{
			"id": 223,
			"name": "validateArrayItems",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isConst": true
			},
			"comment": {
				"shortText": "Prepare the check of each items in the array.",
				"returns": "Function to execute to validate array items.\n"
			},
			"signatures": [
				{
					"id": 224,
					"name": "validateArrayItems",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Prepare the check of each items in the array.",
						"returns": "Function to execute to validate array items.\n"
					},
					"parameters": [
						{
							"id": 225,
							"name": "validator",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"shortText": "Validator instance that do this call."
							},
							"type": {
								"type": "reference",
								"name": "CheckTransformer",
								"id": 198
							}
						},
						{
							"id": 226,
							"name": "fieldDesc",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"shortText": "Description of the field to check."
							},
							"type": {
								"type": "reference",
								"name": "ArrayFieldDescriptor",
								"id": 75
							}
						},
						{
							"id": 227,
							"name": "keys",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"shortText": "Keys so far."
							},
							"type": {
								"type": "reference",
								"name": "PathStack",
								"id": 116
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "(Anonymous function)"
					}
				}
			],
			"sources": [
				{
					"fileName": "entityTransformers/checkTransformer.ts",
					"line": 17,
					"character": 24
				}
			]
		},
		{
			"id": 1250,
			"name": "validateOption",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isConst": true
			},
			"signatures": [
				{
					"id": 1251,
					"name": "validateOption",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 1252,
							"name": "key",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1253,
							"name": "val",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 1254,
							"name": "config",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1255,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1257,
											"name": "rng",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "adapters/base/adapter-utils.ts",
													"line": 57,
													"character": 28
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										},
										{
											"id": 1256,
											"name": "type",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "adapters/base/adapter-utils.ts",
													"line": 57,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1257,
												1256
											]
										}
									],
									"sources": [
										{
											"fileName": "adapters/base/adapter-utils.ts",
											"line": 57,
											"character": 8
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"sources": [
				{
					"fileName": "adapters/base/adapter-utils.ts",
					"line": 54,
					"character": 20
				}
			]
		},
		{
			"id": 243,
			"name": "validateWrongType",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isConst": true
			},
			"comment": {
				"shortText": "Execute the simple tester and return an error component if it returns falsey.",
				"returns": "Function to execute to validate the type.\n"
			},
			"signatures": [
				{
					"id": 244,
					"name": "validateWrongType",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Execute the simple tester and return an error component if it returns falsey.",
						"returns": "Function to execute to validate the type.\n"
					},
					"parameters": [
						{
							"id": 245,
							"name": "tester",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"shortText": "The test function to invoke."
							},
							"type": {
								"type": "reference",
								"name": "TypeChecker",
								"id": 232
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "CheckFunction",
						"id": 236
					}
				}
			],
			"sources": [
				{
					"fileName": "entityTransformers/checkTransformer.ts",
					"line": 101,
					"character": 23
				}
			]
		},
		{
			"id": 790,
			"name": "wrapEventsAction",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"signatures": [
				{
					"id": 791,
					"name": "wrapEventsAction",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Emit `before` & `after` events around the entity action. `this` must be bound to the calling {@link Set}.",
						"returns": "Promise resolved once events are finished.\n",
						"tags": [
							{
								"tag": "author",
								"text": "Gerkin"
							}
						]
					},
					"parameters": [
						{
							"id": 792,
							"name": "this",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Set",
								"id": 750
							}
						},
						{
							"id": 793,
							"name": "sourceName",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "Name of the data source to interact with."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 794,
							"name": "action",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "Name of the entity function to apply."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 795,
							"name": "verb",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "String or array of strings to map for events suffix."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "void"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "entities/set.ts",
					"line": 40,
					"character": 31
				}
			]
		},
		{
			"id": 1298,
			"name": "CANONICAL_OPERATORS",
			"kind": 2097152,
			"kindString": "Object literal",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"children": [
				{
					"id": 1301,
					"name": "!=",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "adapters/base/adapter-utils.ts",
							"line": 125,
							"character": 5
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"$diff\""
				},
				{
					"id": 1302,
					"name": "<",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "adapters/base/adapter-utils.ts",
							"line": 126,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"$less\""
				},
				{
					"id": 1303,
					"name": "<=",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "adapters/base/adapter-utils.ts",
							"line": 127,
							"character": 5
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"$lessEqual\""
				},
				{
					"id": 1300,
					"name": "==",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "adapters/base/adapter-utils.ts",
							"line": 124,
							"character": 5
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"$equal\""
				},
				{
					"id": 1304,
					"name": ">",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "adapters/base/adapter-utils.ts",
							"line": 128,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"$greater\""
				},
				{
					"id": 1305,
					"name": ">=",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "adapters/base/adapter-utils.ts",
							"line": 129,
							"character": 5
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"$greaterEqual\""
				},
				{
					"id": 1299,
					"name": "~",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "adapters/base/adapter-utils.ts",
							"line": 123,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"$exists\""
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1301,
						1302,
						1303,
						1300,
						1304,
						1305,
						1299
					]
				}
			],
			"sources": [
				{
					"fileName": "adapters/base/adapter-utils.ts",
					"line": 122,
					"character": 32
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "object"
			}
		},
		{
			"id": 1155,
			"name": "DEFAULT_OPTIONS",
			"kind": 2097152,
			"kindString": "Object literal",
			"flags": {
				"isConst": true
			},
			"children": [
				{
					"id": 1156,
					"name": "skipEvents",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "entities/entityFactory.ts",
							"line": 15,
							"character": 36
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1156
					]
				}
			],
			"sources": [
				{
					"fileName": "entities/entityFactory.ts",
					"line": 15,
					"character": 21
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "object"
			}
		},
		{
			"id": 102,
			"name": "FieldDescriptorTypeChecks",
			"kind": 2097152,
			"kindString": "Object literal",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"children": [
				{
					"id": 103,
					"name": "isArrayFieldDescriptor",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 104,
							"name": "isArrayFieldDescriptor",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 105,
									"name": "fieldDescriptor",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "FieldDescriptor",
										"id": 115
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "types/modelDescription.ts",
							"line": 99,
							"character": 23
						}
					]
				},
				{
					"id": 109,
					"name": "isEnumFieldDescriptor",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 110,
							"name": "isEnumFieldDescriptor",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 111,
									"name": "fieldDescriptor",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "FieldDescriptor",
										"id": 115
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "types/modelDescription.ts",
							"line": 109,
							"character": 22
						}
					]
				},
				{
					"id": 106,
					"name": "isObjectFieldDescriptor",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 107,
							"name": "isObjectFieldDescriptor",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 108,
									"name": "fieldDescriptor",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "FieldDescriptor",
										"id": 115
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "types/modelDescription.ts",
							"line": 104,
							"character": 24
						}
					]
				},
				{
					"id": 112,
					"name": "isRelationalFieldDescriptor",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 113,
							"name": "isRelationalFieldDescriptor",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 114,
									"name": "fieldDescriptor",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "FieldDescriptor",
										"id": 115
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "types/modelDescription.ts",
							"line": 114,
							"character": 28
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						103,
						109,
						106,
						112
					]
				}
			],
			"sources": [
				{
					"fileName": "types/modelDescription.ts",
					"line": 98,
					"character": 38
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "object"
			}
		},
		{
			"id": 747,
			"name": "LoggerHash",
			"kind": 2097152,
			"kindString": "Object literal",
			"flags": {
				"isConst": true
			},
			"children": [
				{
					"id": 748,
					"name": "__computed",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "logger/nodeLogger.ts",
							"line": 7,
							"character": 22
						},
						{
							"fileName": "logger/nodeLogger.ts",
							"line": 8,
							"character": 24
						},
						{
							"fileName": "logger/nodeLogger.ts",
							"line": 9,
							"character": 22
						},
						{
							"fileName": "logger/nodeLogger.ts",
							"line": 10,
							"character": 20
						},
						{
							"fileName": "logger/nodeLogger.ts",
							"line": 11,
							"character": 21
						},
						{
							"fileName": "logger/nodeLogger.ts",
							"line": 12,
							"character": 22
						},
						{
							"fileName": "logger/nodeLogger.ts",
							"line": 13,
							"character": 23
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"silent\""
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						748
					]
				}
			],
			"sources": [
				{
					"fileName": "logger/nodeLogger.ts",
					"line": 6,
					"character": 16
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "object"
			}
		},
		{
			"id": 1265,
			"name": "OPERATORS",
			"kind": 2097152,
			"kindString": "Object literal",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"children": [
				{
					"id": 1294,
					"name": "$contains",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1295,
							"name": "$contains",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1296,
									"name": "entityVal",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1297,
									"name": "targetVal",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/adapter-utils.ts",
							"line": 119,
							"character": 10
						}
					]
				},
				{
					"id": 1274,
					"name": "$diff",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1275,
							"name": "$diff",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1276,
									"name": "entityVal",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1277,
									"name": "targetVal",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/adapter-utils.ts",
							"line": 109,
							"character": 6
						}
					]
				},
				{
					"id": 1270,
					"name": "$equal",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1271,
							"name": "$equal",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1272,
									"name": "entityVal",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1273,
									"name": "targetVal",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/adapter-utils.ts",
							"line": 107,
							"character": 7
						}
					]
				},
				{
					"id": 1266,
					"name": "$exists",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1267,
							"name": "$exists",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1268,
									"name": "entityVal",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1269,
									"name": "targetVal",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/adapter-utils.ts",
							"line": 105,
							"character": 8
						}
					]
				},
				{
					"id": 1286,
					"name": "$greater",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1287,
							"name": "$greater",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1288,
									"name": "entityVal",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1289,
									"name": "targetVal",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/adapter-utils.ts",
							"line": 115,
							"character": 9
						}
					]
				},
				{
					"id": 1290,
					"name": "$greaterEqual",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1291,
							"name": "$greaterEqual",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1292,
									"name": "entityVal",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1293,
									"name": "targetVal",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/adapter-utils.ts",
							"line": 117,
							"character": 14
						}
					]
				},
				{
					"id": 1278,
					"name": "$less",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1279,
							"name": "$less",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1280,
									"name": "entityVal",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1281,
									"name": "targetVal",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/adapter-utils.ts",
							"line": 111,
							"character": 6
						}
					]
				},
				{
					"id": 1282,
					"name": "$lessEqual",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1283,
							"name": "$lessEqual",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1284,
									"name": "entityVal",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1285,
									"name": "targetVal",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/adapter-utils.ts",
							"line": 113,
							"character": 11
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						1294,
						1274,
						1270,
						1266,
						1286,
						1290,
						1278,
						1282
					]
				}
			],
			"sources": [
				{
					"fileName": "adapters/base/adapter-utils.ts",
					"line": 104,
					"character": 22
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "object"
			}
		},
		{
			"id": 1306,
			"name": "QUERY_OPTIONS_TRANSFORMS",
			"kind": 2097152,
			"kindString": "Object literal",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"children": [
				{
					"id": 1307,
					"name": "limit",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1308,
							"name": "limit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1309,
									"name": "opts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "QueryOptionsRaw",
										"id": 357
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/adapter-utils.ts",
							"line": 134,
							"character": 6
						}
					]
				},
				{
					"id": 1313,
					"name": "page",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1314,
							"name": "page",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1315,
									"name": "opts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "QueryOptionsRaw",
										"id": 357
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/adapter-utils.ts",
							"line": 146,
							"character": 5
						}
					]
				},
				{
					"id": 1310,
					"name": "skip",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1311,
							"name": "skip",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1312,
									"name": "opts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "QueryOptionsRaw",
										"id": 357
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/adapter-utils.ts",
							"line": 140,
							"character": 5
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						1307,
						1313,
						1310
					]
				}
			],
			"sources": [
				{
					"fileName": "adapters/base/adapter-utils.ts",
					"line": 131,
					"character": 37
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "object"
			}
		},
		{
			"id": 246,
			"name": "VALIDATIONS",
			"kind": 2097152,
			"kindString": "Object literal",
			"flags": {
				"isConst": true
			},
			"comment": {
				"shortText": "Store for validation functions.",
				"tags": [
					{
						"tag": "author",
						"text": "Gerkin\n"
					}
				]
			},
			"children": [
				{
					"id": 247,
					"name": "TYPE",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {},
					"children": [
						{
							"id": 276,
							"name": "boolean",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"comment": {
								"shortText": "Boolean type checker",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "entityTransformers/checkTransformer.ts",
									"line": 153,
									"character": 9
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 277,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 278,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 279,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "CheckTransformer",
														"id": 198
													}
												},
												{
													"id": 280,
													"name": "keys",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "PathStack",
														"id": 116
													}
												},
												{
													"id": 281,
													"name": "fieldDesc",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "FieldDescriptor",
														"id": 115
													}
												},
												{
													"id": 282,
													"name": "value",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "ErrorObjectFinal",
														"id": 172
													},
													{
														"type": "intrinsic",
														"name": "undefined"
													}
												]
											}
										}
									]
								}
							},
							"defaultValue": " validateWrongType( _.isBoolean )"
						},
						{
							"id": 269,
							"name": "date",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"comment": {
								"shortText": "Date type checker",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "entityTransformers/checkTransformer.ts",
									"line": 147,
									"character": 6
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 270,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 271,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 272,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "CheckTransformer",
														"id": 198
													}
												},
												{
													"id": 273,
													"name": "keys",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "PathStack",
														"id": 116
													}
												},
												{
													"id": 274,
													"name": "fieldDesc",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "FieldDescriptor",
														"id": 115
													}
												},
												{
													"id": 275,
													"name": "value",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "ErrorObjectFinal",
														"id": 172
													},
													{
														"type": "intrinsic",
														"name": "undefined"
													}
												]
											}
										}
									]
								}
							},
							"defaultValue": " validateWrongType( _.isDate )"
						},
						{
							"id": 262,
							"name": "float",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"comment": {
								"shortText": "Float type checker. Any numeric other NaN or ±Infinity is accepted",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "entityTransformers/checkTransformer.ts",
									"line": 141,
									"character": 7
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 263,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 264,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 265,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "CheckTransformer",
														"id": 198
													}
												},
												{
													"id": 266,
													"name": "keys",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "PathStack",
														"id": 116
													}
												},
												{
													"id": 267,
													"name": "fieldDesc",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "FieldDescriptor",
														"id": 115
													}
												},
												{
													"id": 268,
													"name": "value",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "ErrorObjectFinal",
														"id": 172
													},
													{
														"type": "intrinsic",
														"name": "undefined"
													}
												]
											}
										}
									]
								}
							},
							"defaultValue": " validateWrongType( _.isNumber )"
						},
						{
							"id": 255,
							"name": "integer",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"comment": {
								"shortText": "Integer type checker",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "entityTransformers/checkTransformer.ts",
									"line": 135,
									"character": 9
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 256,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 257,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 258,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "CheckTransformer",
														"id": 198
													}
												},
												{
													"id": 259,
													"name": "keys",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "PathStack",
														"id": 116
													}
												},
												{
													"id": 260,
													"name": "fieldDesc",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "FieldDescriptor",
														"id": 115
													}
												},
												{
													"id": 261,
													"name": "value",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "ErrorObjectFinal",
														"id": 172
													},
													{
														"type": "intrinsic",
														"name": "undefined"
													}
												]
											}
										}
									]
								}
							},
							"defaultValue": " validateWrongType( _.isInteger )"
						},
						{
							"id": 248,
							"name": "string",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"comment": {
								"shortText": "String type checker",
								"tags": [
									{
										"tag": "author",
										"text": "Gerkin\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "entityTransformers/checkTransformer.ts",
									"line": 129,
									"character": 8
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 249,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 250,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 251,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "CheckTransformer",
														"id": 198
													}
												},
												{
													"id": 252,
													"name": "keys",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "PathStack",
														"id": 116
													}
												},
												{
													"id": 253,
													"name": "fieldDesc",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "FieldDescriptor",
														"id": 115
													}
												},
												{
													"id": 254,
													"name": "value",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "ErrorObjectFinal",
														"id": 172
													},
													{
														"type": "intrinsic",
														"name": "undefined"
													}
												]
											}
										}
									]
								}
							},
							"defaultValue": " validateWrongType( _.isString )"
						},
						{
							"id": 301,
							"name": "_",
							"kind": 64,
							"kindString": "Function",
							"flags": {},
							"signatures": [
								{
									"id": 302,
									"name": "_",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 303,
											"name": "this",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "CheckTransformer",
												"id": 198
											}
										},
										{
											"id": 304,
											"name": "keys",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "PathStack",
												"id": 116
											}
										},
										{
											"id": 305,
											"name": "fieldDesc",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "FieldDescriptor",
												"id": 115
											}
										},
										{
											"id": 306,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "ErrorObjectFinal",
												"id": 172
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "entityTransformers/checkTransformer.ts",
									"line": 256,
									"character": 3
								}
							]
						},
						{
							"id": 295,
							"name": "any",
							"kind": 64,
							"kindString": "Function",
							"flags": {},
							"signatures": [
								{
									"id": 296,
									"name": "any",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Match all type checker",
										"tags": [
											{
												"tag": "author",
												"text": "Gerkin\n"
											}
										]
									},
									"parameters": [
										{
											"id": 297,
											"name": "this",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Current validator to use"
											},
											"type": {
												"type": "reference",
												"name": "CheckTransformer",
												"id": 198
											}
										},
										{
											"id": 298,
											"name": "keys",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "PathStack containing keys to access this property"
											},
											"type": {
												"type": "reference",
												"name": "PathStack",
												"id": 116
											}
										},
										{
											"id": 299,
											"name": "fieldDesc",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Description of the current field to check"
											},
											"type": {
												"type": "reference",
												"name": "FieldDescriptor",
												"id": 115
											}
										},
										{
											"id": 300,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Entity attributes to check"
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "ErrorObjectFinal",
												"id": 172
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "entityTransformers/checkTransformer.ts",
									"line": 243,
									"character": 5
								}
							]
						},
						{
							"id": 289,
							"name": "array",
							"kind": 64,
							"kindString": "Function",
							"flags": {},
							"signatures": [
								{
									"id": 290,
									"name": "array",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Array type checker",
										"tags": [
											{
												"tag": "author",
												"text": "Gerkin\n"
											}
										]
									},
									"parameters": [
										{
											"id": 291,
											"name": "this",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Current validator to use"
											},
											"type": {
												"type": "reference",
												"name": "CheckTransformer",
												"id": 198
											}
										},
										{
											"id": 292,
											"name": "keys",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "PathStack containing keys to access this property"
											},
											"type": {
												"type": "reference",
												"name": "PathStack",
												"id": 116
											}
										},
										{
											"id": 293,
											"name": "fieldDesc",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Description of the current field to check"
											},
											"type": {
												"type": "reference",
												"name": "ArrayFieldDescriptor",
												"id": 75
											}
										},
										{
											"id": 294,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Entity attributes to check"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "ErrorObjectFinal",
												"id": 172
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "entityTransformers/checkTransformer.ts",
									"line": 208,
									"character": 7
								}
							]
						},
						{
							"id": 283,
							"name": "object",
							"kind": 64,
							"kindString": "Function",
							"flags": {},
							"signatures": [
								{
									"id": 284,
									"name": "object",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Object type checker",
										"tags": [
											{
												"tag": "author",
												"text": "Gerkin\n"
											}
										]
									},
									"parameters": [
										{
											"id": 285,
											"name": "this",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Current validator to use"
											},
											"type": {
												"type": "reference",
												"name": "CheckTransformer",
												"id": 198
											}
										},
										{
											"id": 286,
											"name": "keys",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "PathStack containing keys to access this property"
											},
											"type": {
												"type": "reference",
												"name": "PathStack",
												"id": 116
											}
										},
										{
											"id": 287,
											"name": "fieldDesc",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Description of the current field to check"
											},
											"type": {
												"type": "reference",
												"name": "ObjectFieldDescriptor",
												"id": 81
											}
										},
										{
											"id": 288,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Entity attributes to check"
											},
											"type": {
												"type": "reference",
												"name": "IRawEntityAttributes",
												"id": 992
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "ErrorObjectFinal",
												"id": 172
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "entityTransformers/checkTransformer.ts",
									"line": 163,
									"character": 8
								}
							]
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								276,
								269,
								262,
								255,
								248
							]
						},
						{
							"title": "Functions",
							"kind": 64,
							"children": [
								301,
								295,
								289,
								283
							]
						}
					],
					"sources": [
						{
							"fileName": "entityTransformers/checkTransformer.ts",
							"line": 123,
							"character": 5
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						247
					]
				}
			],
			"sources": [
				{
					"fileName": "entityTransformers/checkTransformer.ts",
					"line": 122,
					"character": 17
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "object"
			}
		},
		{
			"id": 1158,
			"name": "entityCtrSteps",
			"kind": 2097152,
			"kindString": "Object literal",
			"flags": {
				"isConst": true
			},
			"children": [
				{
					"id": 1159,
					"name": "castTypes",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 1160,
							"name": "castTypes",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1161,
									"name": "source",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IRawAdapterEntityAttributes",
										"id": 1176
									}
								},
								{
									"id": 1162,
									"name": "modelDesc",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ModelDescription",
										"id": 52
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "IRawAdapterEntityAttributes",
								"id": 1176
							}
						}
					],
					"sources": [
						{
							"fileName": "entities/entityFactory.ts",
							"line": 46,
							"character": 10
						}
					]
				},
				{
					"id": 1163,
					"name": "loadSource",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 1164,
							"name": "loadSource",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1165,
									"name": "this",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Entity",
										"id": 1022
									}
								},
								{
									"id": 1166,
									"name": "source",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IRawEntityAttributes",
										"id": 992
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "IRawEntityAttributes",
								"id": 992
							}
						}
					],
					"sources": [
						{
							"fileName": "entities/entityFactory.ts",
							"line": 64,
							"character": 11
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						1159,
						1163
					]
				}
			],
			"sources": [
				{
					"fileName": "entities/entityFactory.ts",
					"line": 45,
					"character": 20
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "object"
			}
		},
		{
			"id": 523,
			"name": "namedFunctions",
			"kind": 2097152,
			"kindString": "Object literal",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"children": [
				{
					"id": 524,
					"name": "Diaspora",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 525,
							"name": "Date.now()",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 526,
									"name": "Date.now()",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Date"
									}
								}
							],
							"sources": [
								{
									"fileName": "staticStores.ts",
									"line": 19,
									"character": 14
								}
							]
						}
					],
					"groups": [
						{
							"title": "Functions",
							"kind": 64,
							"children": [
								525
							]
						}
					],
					"sources": [
						{
							"fileName": "staticStores.ts",
							"line": 18,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						524
					]
				}
			],
			"sources": [
				{
					"fileName": "staticStores.ts",
					"line": 17,
					"character": 27
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "object"
			}
		},
		{
			"id": 1239,
			"name": "validations",
			"kind": 2097152,
			"kindString": "Object literal",
			"flags": {
				"isConst": true
			},
			"children": [
				{
					"id": 1245,
					"name": "rng",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 1246,
							"name": "rng",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1247,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1248,
									"name": "val",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								},
								{
									"id": 1249,
									"name": "range",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/adapter-utils.ts",
							"line": 38,
							"character": 4
						}
					]
				},
				{
					"id": 1240,
					"name": "type",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {},
					"children": [
						{
							"id": 1241,
							"name": "int",
							"kind": 64,
							"kindString": "Function",
							"flags": {},
							"signatures": [
								{
									"id": 1242,
									"name": "int",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1243,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1244,
											"name": "val",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "adapters/base/adapter-utils.ts",
									"line": 28,
									"character": 5
								}
							]
						}
					],
					"groups": [
						{
							"title": "Functions",
							"kind": 64,
							"children": [
								1241
							]
						}
					],
					"sources": [
						{
							"fileName": "adapters/base/adapter-utils.ts",
							"line": 27,
							"character": 5
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						1245
					]
				},
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						1240
					]
				}
			],
			"sources": [
				{
					"fileName": "adapters/base/adapter-utils.ts",
					"line": 26,
					"character": 17
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "object"
			}
		}
	],
	"groups": [
		{
			"title": "Modules",
			"kind": 2,
			"children": [
				796,
				341,
				351
			]
		},
		{
			"title": "Enumerations",
			"kind": 4,
			"children": [
				861,
				995,
				1672,
				679
			]
		},
		{
			"title": "Classes",
			"kind": 128,
			"children": [
				871,
				1197,
				713,
				2339,
				198,
				410,
				550,
				2298,
				1022,
				10,
				137,
				308,
				1,
				1359,
				1324,
				694,
				576,
				732,
				2161,
				116,
				750,
				329,
				18,
				1823,
				1475,
				2029,
				1997
			]
		},
		{
			"title": "Interfaces",
			"kind": 256,
			"children": [
				75,
				70,
				1227,
				812,
				999,
				90,
				162,
				172,
				865,
				1181,
				2295,
				1818,
				1005,
				515,
				1354,
				1149,
				802,
				1671,
				1668,
				809,
				1173,
				687,
				518,
				2152,
				990,
				1232,
				1176,
				992,
				806,
				1649,
				1658,
				2027,
				1518,
				52,
				31,
				81,
				1677,
				2336,
				96,
				28,
				183,
				193
			]
		},
		{
			"title": "Type aliases",
			"kind": 4194304,
			"children": [
				348,
				347,
				349,
				350,
				236,
				1157,
				115,
				709,
				514,
				1996,
				232
			]
		},
		{
			"title": "Variables",
			"kind": 32,
			"children": [
				2335,
				1172,
				307,
				521,
				749,
				522
			]
		},
		{
			"title": "Functions",
			"kind": 64,
			"children": [
				1316,
				1505,
				1320,
				785,
				533,
				527,
				537,
				1167,
				531,
				541,
				547,
				1236,
				228,
				1258,
				223,
				1250,
				243,
				790
			]
		},
		{
			"title": "Object literals",
			"kind": 2097152,
			"children": [
				1298,
				1155,
				102,
				747,
				1265,
				1306,
				246,
				1158,
				523,
				1239
			]
		}
	]
}